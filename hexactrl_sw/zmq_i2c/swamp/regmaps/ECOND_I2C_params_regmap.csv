block,block_id,parameter,parameter_id,address,parameter_name,access,size_byte,default_value,param_mask,param_shift,max_value,description
Aligner,Global,snapshot_arm,,0x0380,Aligner_snapshot_arm,rw,1,0,1,0,1,Arms snapshot with a 0->1 transition for this bit in i2c trigger alignment mode. For this alignment mode also set per_ch_align_en=0; set snapshot_en=1 and i2c_snapshot_en=1. The snapshot will be taken on the next BC counter == ORBSYN_CNT_SNAPSHOT
Aligner,Global,snapshot_en,,0x0380,Aligner_snapshot_en,rw,1,1,1,1,1,Enables snapshot operation [1: enabled; 0: disabled] (for Manual alignment mode also set per_ch_align_en=0; snapshot_arm=0; i2c_snapshot_en=0 - for Automatic alignment mode also set per_ch_align_en=1; snapshot_arm=0; i2c_snapshot_en=0 - for i2c trigger mode also set per_ch_align_en=0; a 0->1 transition to snapshot_arm; i2c_snapshot_en=1;)
Aligner,Global,i2c_snapshot_en,,0x0380,Aligner_i2c_snapshot_en,rw,1,0,1,2,1,Enables manual triggering on 192-bit i2c snapshot [0: disabled; 1: enabled] (for i2c trigger alignment mode also set per_ch_align_en=0 and set snapshot_en=1). The snapshot is armed by a 0->1 transition on the snapshot_arm bit
Aligner,Global,dbg_fc_cnt_clr,,0x0380,Aligner_dbg_fc_cnt_clr,rw,1,0,1,3,1,Clears FC debug counters (dbg_*) (0: do not clear; 1: active reset). Need to write to 1 and 0 afterwards
Aligner,Global,freeze_output_enable,,0x0380,Aligner_freeze_output_enable,rw,1,1,1,4,1,Enables the freezing of channel aligners outputs if the PLL is not locked or any of the active channels (erx) is not locked. [0: disabled - channel aligners outputs propagate to the core logic; 1: enabled - channel aligner outputs gated to '0']
Aligner,Global,freeze_output_enable_all_channels_locked,,0x0380,Aligner_freeze_output_enable_all_channels_locked,rw,1,1,1,5,1,Enables the freezing of channel aligners outputs if any of the active channels (erx) is not locked. [0: disabled - channel aligners outputs propagate to the core logic; 1: enabled - channel aligner outputs gated to '0']
Aligner,Global,match_pattern_val,,0x0381,Aligner_match_pattern_val,rw,8,2594876074,18446744073709551615,0,18446744073709551615,Training pattern that should match what is sent by HGCROC when issuing a link_reset_ROC fast command. It should be used as {header[3:0]; body[27:0]; special_header[3:0]; body[27:0]}
Aligner,Global,match_mask_val,,0x0389,Aligner_match_mask_val,rw,8,18446744069414584320,18446744073709551615,0,18446744073709551615,Used only in Auto Alignment mode. 64-bit mask that is used to indicate which bits of the match_pattern_val should be compared to the 64 select pattern inside the 192-bit snapshot (0: compare enabled; 1: compare disabled)
Aligner,Global,orbsyn_hdr_val,,0x0391,Aligner_orbsyn_hdr_val,rw,1,9,15,0,15,Special header value used only for monitoring purposes. After alignment is done it should match special header sent by the HGCROC. Mismatches indicated in orbsyn_hdr_err and counted in orbsyn_hdr_err_cnt registers
Aligner,Global,orbsyn_hdr_mask,,0x0391,Aligner_orbsyn_hdr_mask,rw,1,0,15,4,15,4-bit mask that is used only for monitoring purposes. It indicates which bits of the orbsyn_hdr_val should be monitored (0: monitor enabled; 1: monitor disabled)
Aligner,Global,idle_hdr_val,,0x0392,Aligner_idle_hdr_val,rw,1,10,15,0,15,Header value used only for monitoring purposes. After alignment is done it should match header sent by the HGCROC. Mismatches indicated in hdr_mm_err and counted in hdr_mm_cntr registers
Aligner,Global,idle_hdr_mask,,0x0392,Aligner_idle_hdr_mask,rw,1,0,15,4,15,4-bit mask that is used only for monitoring purposes. It indicates which bits of the idle_hdr_val should be monitored [0: monitor enabled; 1: monitor disabled]
Aligner,Global,orbsyn_cnt_max_val,,0x0393,Aligner_orbsyn_cnt_max_val,rw,3,3563,4095,0,4095,Sets the maximum value of bunch counter. BX counter rollover.
Aligner,Global,orbsyn_cnt_load_val,,0x0393,Aligner_orbsyn_cnt_load_val,rw,3,3513,4095,12,4095,Sets the value that the ECON internal bunch counter is reset to when a BCR Fast Command is issued
Aligner,Global,orbsyn_cnt_snapshot,,0x0396,Aligner_orbsyn_cnt_snapshot,rw,2,2,4095,0,4095,Sets the value of the internal bunch counter at which the snapshot occurs
Aligner,Global,done,,0x0398,Aligner_done,ro,1,0,1,0,1,Status of Alignment procedure [0: not done; 1: done]
Aligner,Global,dbg_lreset_rcvd,,0x0398,Aligner_dbg_lreset_rcvd,ro,1,0,1,1,1,Debug register: link-reset-ROC was received
Aligner,Global,dbg_orbsyn_rcvd,,0x0398,Aligner_dbg_orbsyn_rcvd,ro,1,0,1,2,1,Debug register: BCR FC was received
Aligner,Global,dbg_fc_cnt,,0x0398,Aligner_dbg_fc_cnt,ro,1,0,31,3,31,Debug register to count the number of BX between the link-reset-ROC and BCR fast commmand
Aligner,Global,tmr_err_cnt_aligner,,0x0399,Aligner_tmr_err_cnt_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,00,user_word,00,0x0004,ChAligner_00_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,00,user_word,01,0x0008,ChAligner_00_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,00,user_word,02,0x000c,ChAligner_00_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,00,user_word,03,0x0010,ChAligner_00_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,00,per_ch_align_en,,0x0000,ChAligner_00_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,00,sel_override_en,,0x0000,ChAligner_00_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,00,patt_en,,0x0000,ChAligner_00_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,00,prbs28_en,,0x0000,ChAligner_00_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,00,patt_sel,,0x0000,ChAligner_00_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,00,prbs_chk_en,,0x0000,ChAligner_00_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,00,force_ch_outputs,,0x0000,ChAligner_00_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,00,sel_override_val,,0x0001,ChAligner_00_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,00,seed_in,,0x0002,ChAligner_00_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,00,pattern_match,,0x0014,ChAligner_00_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,00,snapshot_dv,,0x0014,ChAligner_00_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,00,hdr_mm_err,,0x0014,ChAligner_00_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,00,spare_err,,0x0014,ChAligner_00_spare_err,ro,1,0,1,3,1,
ChAligner,00,orbsyn_hdr_err,,0x0014,ChAligner_00_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,00,orbsyn_arr_err,,0x0014,ChAligner_00_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,00,orbsyn_fc_err,,0x0014,ChAligner_00_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,00,prbs_chk_err,,0x0014,ChAligner_00_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,00,select,,0x0015,ChAligner_00_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,00,snapshot,,0x0016,ChAligner_00_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,00,hdr_mm_cntr,,0x002e,ChAligner_00_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,00,orbsyn_hdr_err_cnt,,0x0030,ChAligner_00_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,00,orbsyn_arr_err_cnt,,0x0031,ChAligner_00_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,00,orbsyn_fc_err_cnt,,0x0032,ChAligner_00_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,00,prbs_chk_err_cnt,,0x0033,ChAligner_00_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,00,tmr_err_cnt_chan_aligner,,0x0034,ChAligner_00_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,00,tmr_err_cnt_chan_err,,0x0035,ChAligner_00_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,00,tmr_err_cnt_chan_eprxgrp,,0x0036,ChAligner_00_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,01,user_word,00,0x0044,ChAligner_01_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,01,user_word,01,0x0048,ChAligner_01_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,01,user_word,02,0x004c,ChAligner_01_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,01,user_word,03,0x0050,ChAligner_01_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,01,per_ch_align_en,,0x0040,ChAligner_01_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,01,sel_override_en,,0x0040,ChAligner_01_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,01,patt_en,,0x0040,ChAligner_01_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,01,prbs28_en,,0x0040,ChAligner_01_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,01,patt_sel,,0x0040,ChAligner_01_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,01,prbs_chk_en,,0x0040,ChAligner_01_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,01,force_ch_outputs,,0x0040,ChAligner_01_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,01,sel_override_val,,0x0041,ChAligner_01_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,01,seed_in,,0x0042,ChAligner_01_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,01,pattern_match,,0x0054,ChAligner_01_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,01,snapshot_dv,,0x0054,ChAligner_01_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,01,hdr_mm_err,,0x0054,ChAligner_01_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,01,spare_err,,0x0054,ChAligner_01_spare_err,ro,1,0,1,3,1,
ChAligner,01,orbsyn_hdr_err,,0x0054,ChAligner_01_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,01,orbsyn_arr_err,,0x0054,ChAligner_01_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,01,orbsyn_fc_err,,0x0054,ChAligner_01_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,01,prbs_chk_err,,0x0054,ChAligner_01_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,01,select,,0x0055,ChAligner_01_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,01,snapshot,,0x0056,ChAligner_01_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,01,hdr_mm_cntr,,0x006e,ChAligner_01_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,01,orbsyn_hdr_err_cnt,,0x0070,ChAligner_01_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,01,orbsyn_arr_err_cnt,,0x0071,ChAligner_01_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,01,orbsyn_fc_err_cnt,,0x0072,ChAligner_01_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,01,prbs_chk_err_cnt,,0x0073,ChAligner_01_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,01,tmr_err_cnt_chan_aligner,,0x0074,ChAligner_01_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,01,tmr_err_cnt_chan_err,,0x0075,ChAligner_01_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,01,tmr_err_cnt_chan_eprxgrp,,0x0076,ChAligner_01_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,02,user_word,00,0x0084,ChAligner_02_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,02,user_word,01,0x0088,ChAligner_02_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,02,user_word,02,0x008c,ChAligner_02_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,02,user_word,03,0x0090,ChAligner_02_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,02,per_ch_align_en,,0x0080,ChAligner_02_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,02,sel_override_en,,0x0080,ChAligner_02_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,02,patt_en,,0x0080,ChAligner_02_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,02,prbs28_en,,0x0080,ChAligner_02_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,02,patt_sel,,0x0080,ChAligner_02_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,02,prbs_chk_en,,0x0080,ChAligner_02_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,02,force_ch_outputs,,0x0080,ChAligner_02_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,02,sel_override_val,,0x0081,ChAligner_02_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,02,seed_in,,0x0082,ChAligner_02_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,02,pattern_match,,0x0094,ChAligner_02_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,02,snapshot_dv,,0x0094,ChAligner_02_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,02,hdr_mm_err,,0x0094,ChAligner_02_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,02,spare_err,,0x0094,ChAligner_02_spare_err,ro,1,0,1,3,1,
ChAligner,02,orbsyn_hdr_err,,0x0094,ChAligner_02_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,02,orbsyn_arr_err,,0x0094,ChAligner_02_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,02,orbsyn_fc_err,,0x0094,ChAligner_02_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,02,prbs_chk_err,,0x0094,ChAligner_02_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,02,select,,0x0095,ChAligner_02_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,02,snapshot,,0x0096,ChAligner_02_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,02,hdr_mm_cntr,,0x00ae,ChAligner_02_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,02,orbsyn_hdr_err_cnt,,0x00b0,ChAligner_02_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,02,orbsyn_arr_err_cnt,,0x00b1,ChAligner_02_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,02,orbsyn_fc_err_cnt,,0x00b2,ChAligner_02_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,02,prbs_chk_err_cnt,,0x00b3,ChAligner_02_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,02,tmr_err_cnt_chan_aligner,,0x00b4,ChAligner_02_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,02,tmr_err_cnt_chan_err,,0x00b5,ChAligner_02_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,02,tmr_err_cnt_chan_eprxgrp,,0x00b6,ChAligner_02_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,03,user_word,00,0x00c4,ChAligner_03_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,03,user_word,01,0x00c8,ChAligner_03_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,03,user_word,02,0x00cc,ChAligner_03_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,03,user_word,03,0x00d0,ChAligner_03_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,03,per_ch_align_en,,0x00c0,ChAligner_03_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,03,sel_override_en,,0x00c0,ChAligner_03_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,03,patt_en,,0x00c0,ChAligner_03_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,03,prbs28_en,,0x00c0,ChAligner_03_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,03,patt_sel,,0x00c0,ChAligner_03_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,03,prbs_chk_en,,0x00c0,ChAligner_03_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,03,force_ch_outputs,,0x00c0,ChAligner_03_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,03,sel_override_val,,0x00c1,ChAligner_03_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,03,seed_in,,0x00c2,ChAligner_03_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,03,pattern_match,,0x00d4,ChAligner_03_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,03,snapshot_dv,,0x00d4,ChAligner_03_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,03,hdr_mm_err,,0x00d4,ChAligner_03_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,03,spare_err,,0x00d4,ChAligner_03_spare_err,ro,1,0,1,3,1,
ChAligner,03,orbsyn_hdr_err,,0x00d4,ChAligner_03_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,03,orbsyn_arr_err,,0x00d4,ChAligner_03_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,03,orbsyn_fc_err,,0x00d4,ChAligner_03_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,03,prbs_chk_err,,0x00d4,ChAligner_03_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,03,select,,0x00d5,ChAligner_03_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,03,snapshot,,0x00d6,ChAligner_03_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,03,hdr_mm_cntr,,0x00ee,ChAligner_03_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,03,orbsyn_hdr_err_cnt,,0x00f0,ChAligner_03_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,03,orbsyn_arr_err_cnt,,0x00f1,ChAligner_03_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,03,orbsyn_fc_err_cnt,,0x00f2,ChAligner_03_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,03,prbs_chk_err_cnt,,0x00f3,ChAligner_03_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,03,tmr_err_cnt_chan_aligner,,0x00f4,ChAligner_03_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,03,tmr_err_cnt_chan_err,,0x00f5,ChAligner_03_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,03,tmr_err_cnt_chan_eprxgrp,,0x00f6,ChAligner_03_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,04,user_word,00,0x0104,ChAligner_04_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,04,user_word,01,0x0108,ChAligner_04_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,04,user_word,02,0x010c,ChAligner_04_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,04,user_word,03,0x0110,ChAligner_04_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,04,per_ch_align_en,,0x0100,ChAligner_04_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,04,sel_override_en,,0x0100,ChAligner_04_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,04,patt_en,,0x0100,ChAligner_04_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,04,prbs28_en,,0x0100,ChAligner_04_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,04,patt_sel,,0x0100,ChAligner_04_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,04,prbs_chk_en,,0x0100,ChAligner_04_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,04,force_ch_outputs,,0x0100,ChAligner_04_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,04,sel_override_val,,0x0101,ChAligner_04_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,04,seed_in,,0x0102,ChAligner_04_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,04,pattern_match,,0x0114,ChAligner_04_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,04,snapshot_dv,,0x0114,ChAligner_04_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,04,hdr_mm_err,,0x0114,ChAligner_04_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,04,spare_err,,0x0114,ChAligner_04_spare_err,ro,1,0,1,3,1,
ChAligner,04,orbsyn_hdr_err,,0x0114,ChAligner_04_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,04,orbsyn_arr_err,,0x0114,ChAligner_04_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,04,orbsyn_fc_err,,0x0114,ChAligner_04_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,04,prbs_chk_err,,0x0114,ChAligner_04_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,04,select,,0x0115,ChAligner_04_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,04,snapshot,,0x0116,ChAligner_04_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,04,hdr_mm_cntr,,0x012e,ChAligner_04_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,04,orbsyn_hdr_err_cnt,,0x0130,ChAligner_04_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,04,orbsyn_arr_err_cnt,,0x0131,ChAligner_04_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,04,orbsyn_fc_err_cnt,,0x0132,ChAligner_04_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,04,prbs_chk_err_cnt,,0x0133,ChAligner_04_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,04,tmr_err_cnt_chan_aligner,,0x0134,ChAligner_04_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,04,tmr_err_cnt_chan_err,,0x0135,ChAligner_04_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,04,tmr_err_cnt_chan_eprxgrp,,0x0136,ChAligner_04_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,05,user_word,00,0x0144,ChAligner_05_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,05,user_word,01,0x0148,ChAligner_05_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,05,user_word,02,0x014c,ChAligner_05_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,05,user_word,03,0x0150,ChAligner_05_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,05,per_ch_align_en,,0x0140,ChAligner_05_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,05,sel_override_en,,0x0140,ChAligner_05_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,05,patt_en,,0x0140,ChAligner_05_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,05,prbs28_en,,0x0140,ChAligner_05_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,05,patt_sel,,0x0140,ChAligner_05_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,05,prbs_chk_en,,0x0140,ChAligner_05_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,05,force_ch_outputs,,0x0140,ChAligner_05_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,05,sel_override_val,,0x0141,ChAligner_05_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,05,seed_in,,0x0142,ChAligner_05_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,05,pattern_match,,0x0154,ChAligner_05_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,05,snapshot_dv,,0x0154,ChAligner_05_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,05,hdr_mm_err,,0x0154,ChAligner_05_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,05,spare_err,,0x0154,ChAligner_05_spare_err,ro,1,0,1,3,1,
ChAligner,05,orbsyn_hdr_err,,0x0154,ChAligner_05_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,05,orbsyn_arr_err,,0x0154,ChAligner_05_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,05,orbsyn_fc_err,,0x0154,ChAligner_05_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,05,prbs_chk_err,,0x0154,ChAligner_05_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,05,select,,0x0155,ChAligner_05_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,05,snapshot,,0x0156,ChAligner_05_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,05,hdr_mm_cntr,,0x016e,ChAligner_05_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,05,orbsyn_hdr_err_cnt,,0x0170,ChAligner_05_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,05,orbsyn_arr_err_cnt,,0x0171,ChAligner_05_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,05,orbsyn_fc_err_cnt,,0x0172,ChAligner_05_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,05,prbs_chk_err_cnt,,0x0173,ChAligner_05_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,05,tmr_err_cnt_chan_aligner,,0x0174,ChAligner_05_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,05,tmr_err_cnt_chan_err,,0x0175,ChAligner_05_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,05,tmr_err_cnt_chan_eprxgrp,,0x0176,ChAligner_05_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,06,user_word,00,0x0184,ChAligner_06_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,06,user_word,01,0x0188,ChAligner_06_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,06,user_word,02,0x018c,ChAligner_06_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,06,user_word,03,0x0190,ChAligner_06_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,06,per_ch_align_en,,0x0180,ChAligner_06_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,06,sel_override_en,,0x0180,ChAligner_06_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,06,patt_en,,0x0180,ChAligner_06_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,06,prbs28_en,,0x0180,ChAligner_06_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,06,patt_sel,,0x0180,ChAligner_06_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,06,prbs_chk_en,,0x0180,ChAligner_06_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,06,force_ch_outputs,,0x0180,ChAligner_06_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,06,sel_override_val,,0x0181,ChAligner_06_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,06,seed_in,,0x0182,ChAligner_06_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,06,pattern_match,,0x0194,ChAligner_06_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,06,snapshot_dv,,0x0194,ChAligner_06_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,06,hdr_mm_err,,0x0194,ChAligner_06_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,06,spare_err,,0x0194,ChAligner_06_spare_err,ro,1,0,1,3,1,
ChAligner,06,orbsyn_hdr_err,,0x0194,ChAligner_06_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,06,orbsyn_arr_err,,0x0194,ChAligner_06_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,06,orbsyn_fc_err,,0x0194,ChAligner_06_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,06,prbs_chk_err,,0x0194,ChAligner_06_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,06,select,,0x0195,ChAligner_06_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,06,snapshot,,0x0196,ChAligner_06_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,06,hdr_mm_cntr,,0x01ae,ChAligner_06_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,06,orbsyn_hdr_err_cnt,,0x01b0,ChAligner_06_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,06,orbsyn_arr_err_cnt,,0x01b1,ChAligner_06_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,06,orbsyn_fc_err_cnt,,0x01b2,ChAligner_06_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,06,prbs_chk_err_cnt,,0x01b3,ChAligner_06_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,06,tmr_err_cnt_chan_aligner,,0x01b4,ChAligner_06_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,06,tmr_err_cnt_chan_err,,0x01b5,ChAligner_06_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,06,tmr_err_cnt_chan_eprxgrp,,0x01b6,ChAligner_06_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,07,user_word,00,0x01c4,ChAligner_07_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,07,user_word,01,0x01c8,ChAligner_07_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,07,user_word,02,0x01cc,ChAligner_07_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,07,user_word,03,0x01d0,ChAligner_07_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,07,per_ch_align_en,,0x01c0,ChAligner_07_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,07,sel_override_en,,0x01c0,ChAligner_07_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,07,patt_en,,0x01c0,ChAligner_07_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,07,prbs28_en,,0x01c0,ChAligner_07_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,07,patt_sel,,0x01c0,ChAligner_07_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,07,prbs_chk_en,,0x01c0,ChAligner_07_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,07,force_ch_outputs,,0x01c0,ChAligner_07_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,07,sel_override_val,,0x01c1,ChAligner_07_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,07,seed_in,,0x01c2,ChAligner_07_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,07,pattern_match,,0x01d4,ChAligner_07_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,07,snapshot_dv,,0x01d4,ChAligner_07_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,07,hdr_mm_err,,0x01d4,ChAligner_07_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,07,spare_err,,0x01d4,ChAligner_07_spare_err,ro,1,0,1,3,1,
ChAligner,07,orbsyn_hdr_err,,0x01d4,ChAligner_07_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,07,orbsyn_arr_err,,0x01d4,ChAligner_07_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,07,orbsyn_fc_err,,0x01d4,ChAligner_07_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,07,prbs_chk_err,,0x01d4,ChAligner_07_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,07,select,,0x01d5,ChAligner_07_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,07,snapshot,,0x01d6,ChAligner_07_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,07,hdr_mm_cntr,,0x01ee,ChAligner_07_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,07,orbsyn_hdr_err_cnt,,0x01f0,ChAligner_07_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,07,orbsyn_arr_err_cnt,,0x01f1,ChAligner_07_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,07,orbsyn_fc_err_cnt,,0x01f2,ChAligner_07_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,07,prbs_chk_err_cnt,,0x01f3,ChAligner_07_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,07,tmr_err_cnt_chan_aligner,,0x01f4,ChAligner_07_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,07,tmr_err_cnt_chan_err,,0x01f5,ChAligner_07_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,07,tmr_err_cnt_chan_eprxgrp,,0x01f6,ChAligner_07_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,08,user_word,00,0x0204,ChAligner_08_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,08,user_word,01,0x0208,ChAligner_08_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,08,user_word,02,0x020c,ChAligner_08_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,08,user_word,03,0x0210,ChAligner_08_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,08,per_ch_align_en,,0x0200,ChAligner_08_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,08,sel_override_en,,0x0200,ChAligner_08_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,08,patt_en,,0x0200,ChAligner_08_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,08,prbs28_en,,0x0200,ChAligner_08_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,08,patt_sel,,0x0200,ChAligner_08_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,08,prbs_chk_en,,0x0200,ChAligner_08_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,08,force_ch_outputs,,0x0200,ChAligner_08_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,08,sel_override_val,,0x0201,ChAligner_08_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,08,seed_in,,0x0202,ChAligner_08_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,08,pattern_match,,0x0214,ChAligner_08_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,08,snapshot_dv,,0x0214,ChAligner_08_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,08,hdr_mm_err,,0x0214,ChAligner_08_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,08,spare_err,,0x0214,ChAligner_08_spare_err,ro,1,0,1,3,1,
ChAligner,08,orbsyn_hdr_err,,0x0214,ChAligner_08_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,08,orbsyn_arr_err,,0x0214,ChAligner_08_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,08,orbsyn_fc_err,,0x0214,ChAligner_08_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,08,prbs_chk_err,,0x0214,ChAligner_08_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,08,select,,0x0215,ChAligner_08_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,08,snapshot,,0x0216,ChAligner_08_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,08,hdr_mm_cntr,,0x022e,ChAligner_08_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,08,orbsyn_hdr_err_cnt,,0x0230,ChAligner_08_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,08,orbsyn_arr_err_cnt,,0x0231,ChAligner_08_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,08,orbsyn_fc_err_cnt,,0x0232,ChAligner_08_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,08,prbs_chk_err_cnt,,0x0233,ChAligner_08_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,08,tmr_err_cnt_chan_aligner,,0x0234,ChAligner_08_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,08,tmr_err_cnt_chan_err,,0x0235,ChAligner_08_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,08,tmr_err_cnt_chan_eprxgrp,,0x0236,ChAligner_08_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,09,user_word,00,0x0244,ChAligner_09_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,09,user_word,01,0x0248,ChAligner_09_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,09,user_word,02,0x024c,ChAligner_09_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,09,user_word,03,0x0250,ChAligner_09_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,09,per_ch_align_en,,0x0240,ChAligner_09_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,09,sel_override_en,,0x0240,ChAligner_09_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,09,patt_en,,0x0240,ChAligner_09_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,09,prbs28_en,,0x0240,ChAligner_09_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,09,patt_sel,,0x0240,ChAligner_09_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,09,prbs_chk_en,,0x0240,ChAligner_09_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,09,force_ch_outputs,,0x0240,ChAligner_09_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,09,sel_override_val,,0x0241,ChAligner_09_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,09,seed_in,,0x0242,ChAligner_09_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,09,pattern_match,,0x0254,ChAligner_09_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,09,snapshot_dv,,0x0254,ChAligner_09_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,09,hdr_mm_err,,0x0254,ChAligner_09_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,09,spare_err,,0x0254,ChAligner_09_spare_err,ro,1,0,1,3,1,
ChAligner,09,orbsyn_hdr_err,,0x0254,ChAligner_09_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,09,orbsyn_arr_err,,0x0254,ChAligner_09_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,09,orbsyn_fc_err,,0x0254,ChAligner_09_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,09,prbs_chk_err,,0x0254,ChAligner_09_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,09,select,,0x0255,ChAligner_09_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,09,snapshot,,0x0256,ChAligner_09_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,09,hdr_mm_cntr,,0x026e,ChAligner_09_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,09,orbsyn_hdr_err_cnt,,0x0270,ChAligner_09_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,09,orbsyn_arr_err_cnt,,0x0271,ChAligner_09_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,09,orbsyn_fc_err_cnt,,0x0272,ChAligner_09_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,09,prbs_chk_err_cnt,,0x0273,ChAligner_09_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,09,tmr_err_cnt_chan_aligner,,0x0274,ChAligner_09_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,09,tmr_err_cnt_chan_err,,0x0275,ChAligner_09_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,09,tmr_err_cnt_chan_eprxgrp,,0x0276,ChAligner_09_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,10,user_word,00,0x0284,ChAligner_10_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,10,user_word,01,0x0288,ChAligner_10_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,10,user_word,02,0x028c,ChAligner_10_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,10,user_word,03,0x0290,ChAligner_10_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,10,per_ch_align_en,,0x0280,ChAligner_10_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,10,sel_override_en,,0x0280,ChAligner_10_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,10,patt_en,,0x0280,ChAligner_10_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,10,prbs28_en,,0x0280,ChAligner_10_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,10,patt_sel,,0x0280,ChAligner_10_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,10,prbs_chk_en,,0x0280,ChAligner_10_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,10,force_ch_outputs,,0x0280,ChAligner_10_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,10,sel_override_val,,0x0281,ChAligner_10_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,10,seed_in,,0x0282,ChAligner_10_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,10,pattern_match,,0x0294,ChAligner_10_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,10,snapshot_dv,,0x0294,ChAligner_10_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,10,hdr_mm_err,,0x0294,ChAligner_10_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,10,spare_err,,0x0294,ChAligner_10_spare_err,ro,1,0,1,3,1,
ChAligner,10,orbsyn_hdr_err,,0x0294,ChAligner_10_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,10,orbsyn_arr_err,,0x0294,ChAligner_10_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,10,orbsyn_fc_err,,0x0294,ChAligner_10_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,10,prbs_chk_err,,0x0294,ChAligner_10_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,10,select,,0x0295,ChAligner_10_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,10,snapshot,,0x0296,ChAligner_10_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,10,hdr_mm_cntr,,0x02ae,ChAligner_10_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,10,orbsyn_hdr_err_cnt,,0x02b0,ChAligner_10_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,10,orbsyn_arr_err_cnt,,0x02b1,ChAligner_10_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,10,orbsyn_fc_err_cnt,,0x02b2,ChAligner_10_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,10,prbs_chk_err_cnt,,0x02b3,ChAligner_10_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,10,tmr_err_cnt_chan_aligner,,0x02b4,ChAligner_10_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,10,tmr_err_cnt_chan_err,,0x02b5,ChAligner_10_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,10,tmr_err_cnt_chan_eprxgrp,,0x02b6,ChAligner_10_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,11,user_word,00,0x02c4,ChAligner_11_user_word_00,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Transmitted from output of aligner while alignment procedure is active or when force_ch_outputs=1. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,11,user_word,01,0x02c8,ChAligner_11_user_word_01,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,11,user_word,02,0x02cc,ChAligner_11_user_word_02,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,11,user_word,03,0x02d0,ChAligner_11_user_word_03,rw,4,0,4294967295,0,4294967295,The 32-bit word for test patterns. Sent as input to aligner in place of ePortRx data outputs when patt_en=1 and patt_sel=1 (transmitted cyclically every 4th BX: user_word_0->user_word_1->user_word_2->user_word_3)
ChAligner,11,per_ch_align_en,,0x02c0,ChAligner_11_per_ch_align_en,rw,1,1,1,0,1,Enables channel aligner sequence [0: disabled; 1: enabled] (for Automatic alignment mode also set snapshot_arm=0; snapshot_en=1; i2c_snapshot_en=0 and sel_override_en=0)
ChAligner,11,sel_override_en,,0x02c0,ChAligner_11_sel_override_en,rw,1,0,1,1,1,Enables the override of the select value with the value provided in sel_override_val [0: disabled (for Automatic Alignment); 1: enabled (for Manual Alignment)]
ChAligner,11,patt_en,,0x02c0,ChAligner_11_patt_en,rw,1,0,1,2,1,Enables a test (PRBS of user_words) pattern to be sent to the input of the channel aligner in place of data from ePortRx [0: disabled; 1: enabled]
ChAligner,11,prbs28_en,,0x02c0,ChAligner_11_prbs28_en,rw,1,0,1,3,1,Selects the pattern to be inserted in the PRBS generation [0: PRBS pattern 32 bits; 1: PRBS pattern is {4-bit header; PRBS [31:4]}]. The PRBS generator use the polynomial x^15 + x^14 + 1 and seed is set by the seed_in field
ChAligner,11,patt_sel,,0x02c0,ChAligner_11_patt_sel,rw,1,0,1,4,1,Selection of test pattern to be sent to the input of the channel aligner [0: PRBS pattern each cycle; 1: cyclically transmit user_word_0->user_word_1->user_word_2->user_word_3]
ChAligner,11,prbs_chk_en,,0x02c0,ChAligner_11_prbs_chk_en,rw,1,0,1,5,1,Enables the aligner PRBS checker [1: enabled; 0: disabled]. The checker expects a PRBS with polynomial x^15 + x^14 + 1 and seed is set by the seed_in field. Errors indicated in prbs_chk_err and counted in prbs_chk_err_cnt registers
ChAligner,11,force_ch_outputs,,0x02c0,ChAligner_11_force_ch_outputs,rw,1,0,1,6,1,Enables user_word_0 pattern at the output of the channel aligner [1: enabled; 0: disabled]
ChAligner,11,sel_override_val,,0x02c1,ChAligner_11_sel_override_val,rw,1,0,255,0,255,The value for the alignment select register to be used when sel_override_en=1
ChAligner,11,seed_in,,0x02c2,ChAligner_11_seed_in,rw,2,0,16383,0,16383,Value loaded into the Linear Feeback Shift Register for the internal PRBS pattern generator. The value is padded to 15 bits by adding a leading 0
ChAligner,11,pattern_match,,0x02d4,ChAligner_11_pattern_match,ro,1,0,1,0,1,Status of Alignment [0: alignment pattern not found in snapshot; 1: alignment pattern found in snapshot]
ChAligner,11,snapshot_dv,,0x02d4,ChAligner_11_snapshot_dv,ro,1,0,1,1,1,Status of Snapshot [0: snapshot not taken; 1: snapshot taken]
ChAligner,11,hdr_mm_err,,0x02d4,ChAligner_11_hdr_mm_err,ro,1,0,1,2,1,Status 1: incorrect header (not matching idle_hdr_val) observed at BX!=1
ChAligner,11,spare_err,,0x02d4,ChAligner_11_spare_err,ro,1,0,1,3,1,
ChAligner,11,orbsyn_hdr_err,,0x02d4,ChAligner_11_orbsyn_hdr_err,ro,1,0,1,4,1,Status 1: incorrect special header observed (not matching orbsyn_hdr_val)
ChAligner,11,orbsyn_arr_err,,0x02d4,ChAligner_11_orbsyn_arr_err,ro,1,0,1,5,1,Status 1: a second BCR fast command was received
ChAligner,11,orbsyn_fc_err,,0x02d4,ChAligner_11_orbsyn_fc_err,ro,1,0,1,6,1,Status 1: BCR fast command is missing
ChAligner,11,prbs_chk_err,,0x02d4,ChAligner_11_prbs_chk_err,ro,1,0,1,7,1,Status 1: error observed by the aligner PRBS checker
ChAligner,11,select,,0x02d5,ChAligner_11_select,ro,1,32,255,0,255,Offset for location within 192-bit shift register from which channel aligner selects the 32-bit word. In Automatic Alignment this is the location of the MSB of the special header within the snapshot. Valid range is from 32 to 160 in Automatic alignment
ChAligner,11,snapshot,,0x02d6,ChAligner_11_snapshot,ro,24,0,6277101735386680763835789423207666416102355444464034512895,0,6277101735386680763835789423207666416102355444464034512895,Snapshot of 192-bit shift register of aligner. Snapshot can be triggered via LinkResetROC (in Automatic and Manual modes) or through a snapshot_arm (in i2c_trigger mode)
ChAligner,11,hdr_mm_cntr,,0x02ee,ChAligner_11_hdr_mm_cntr,ro,2,0,65535,0,65535,Header mismatch error counter. Error counter for incorrect regular header (BX!=1). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0])
ChAligner,11,orbsyn_hdr_err_cnt,,0x02f0,ChAligner_11_orbsyn_hdr_err_cnt,ro,1,0,255,0,255,Error counter for incorrect special header observed (not matching orbsyn_hdr_val). Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,11,orbsyn_arr_err_cnt,,0x02f1,ChAligner_11_orbsyn_arr_err_cnt,ro,1,0,255,0,255,Error counter for extra BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,11,orbsyn_fc_err_cnt,,0x02f2,ChAligner_11_orbsyn_fc_err_cnt,ro,1,0,255,0,255,Error counter for missing BCR fast command. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,11,prbs_chk_err_cnt,,0x02f3,ChAligner_11_prbs_chk_err_cnt,ro,1,0,255,0,255,Error counter for internal PRBS check. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]). Saturates to 255
ChAligner,11,tmr_err_cnt_chan_aligner,,0x02f4,ChAligner_11_tmr_err_cnt_chan_aligner,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,11,tmr_err_cnt_chan_err,,0x02f5,ChAligner_11_tmr_err_cnt_chan_err,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChAligner,11,tmr_err_cnt_chan_eprxgrp,,0x02f6,ChAligner_11_tmr_err_cnt_chan_eprxgrp,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset
ChEprxGrp,00,dll_reset_req,,0x0340,ChEprxGrp_00_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,00,reset_channels,,0x0340,ChEprxGrp_00_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,00,train_channel,,0x0340,ChEprxGrp_00_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,00,phase_select_channelinput,,0x0340,ChEprxGrp_00_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,00,dll_state,,0x0341,ChEprxGrp_00_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,00,phase_select_channeloutput,,0x0341,ChEprxGrp_00_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,00,dll_instant_lock,,0x0341,ChEprxGrp_00_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,00,channel_locked,,0x0341,ChEprxGrp_00_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,00,dll_locked,,0x0342,ChEprxGrp_00_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,00,dll_lock_filter_state,,0x0342,ChEprxGrp_00_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,00,dll_loss_of_lock_count,,0x0342,ChEprxGrp_00_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,01,dll_reset_req,,0x0344,ChEprxGrp_01_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,01,reset_channels,,0x0344,ChEprxGrp_01_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,01,train_channel,,0x0344,ChEprxGrp_01_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,01,phase_select_channelinput,,0x0344,ChEprxGrp_01_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,01,dll_state,,0x0345,ChEprxGrp_01_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,01,phase_select_channeloutput,,0x0345,ChEprxGrp_01_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,01,dll_instant_lock,,0x0345,ChEprxGrp_01_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,01,channel_locked,,0x0345,ChEprxGrp_01_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,01,dll_locked,,0x0346,ChEprxGrp_01_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,01,dll_lock_filter_state,,0x0346,ChEprxGrp_01_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,01,dll_loss_of_lock_count,,0x0346,ChEprxGrp_01_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,02,dll_reset_req,,0x0348,ChEprxGrp_02_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,02,reset_channels,,0x0348,ChEprxGrp_02_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,02,train_channel,,0x0348,ChEprxGrp_02_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,02,phase_select_channelinput,,0x0348,ChEprxGrp_02_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,02,dll_state,,0x0349,ChEprxGrp_02_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,02,phase_select_channeloutput,,0x0349,ChEprxGrp_02_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,02,dll_instant_lock,,0x0349,ChEprxGrp_02_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,02,channel_locked,,0x0349,ChEprxGrp_02_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,02,dll_locked,,0x034a,ChEprxGrp_02_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,02,dll_lock_filter_state,,0x034a,ChEprxGrp_02_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,02,dll_loss_of_lock_count,,0x034a,ChEprxGrp_02_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,03,dll_reset_req,,0x034c,ChEprxGrp_03_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,03,reset_channels,,0x034c,ChEprxGrp_03_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,03,train_channel,,0x034c,ChEprxGrp_03_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,03,phase_select_channelinput,,0x034c,ChEprxGrp_03_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,03,dll_state,,0x034d,ChEprxGrp_03_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,03,phase_select_channeloutput,,0x034d,ChEprxGrp_03_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,03,dll_instant_lock,,0x034d,ChEprxGrp_03_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,03,channel_locked,,0x034d,ChEprxGrp_03_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,03,dll_locked,,0x034e,ChEprxGrp_03_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,03,dll_lock_filter_state,,0x034e,ChEprxGrp_03_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,03,dll_loss_of_lock_count,,0x034e,ChEprxGrp_03_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,04,dll_reset_req,,0x0350,ChEprxGrp_04_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,04,reset_channels,,0x0350,ChEprxGrp_04_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,04,train_channel,,0x0350,ChEprxGrp_04_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,04,phase_select_channelinput,,0x0350,ChEprxGrp_04_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,04,dll_state,,0x0351,ChEprxGrp_04_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,04,phase_select_channeloutput,,0x0351,ChEprxGrp_04_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,04,dll_instant_lock,,0x0351,ChEprxGrp_04_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,04,channel_locked,,0x0351,ChEprxGrp_04_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,04,dll_locked,,0x0352,ChEprxGrp_04_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,04,dll_lock_filter_state,,0x0352,ChEprxGrp_04_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,04,dll_loss_of_lock_count,,0x0352,ChEprxGrp_04_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,05,dll_reset_req,,0x0354,ChEprxGrp_05_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,05,reset_channels,,0x0354,ChEprxGrp_05_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,05,train_channel,,0x0354,ChEprxGrp_05_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,05,phase_select_channelinput,,0x0354,ChEprxGrp_05_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,05,dll_state,,0x0355,ChEprxGrp_05_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,05,phase_select_channeloutput,,0x0355,ChEprxGrp_05_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,05,dll_instant_lock,,0x0355,ChEprxGrp_05_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,05,channel_locked,,0x0355,ChEprxGrp_05_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,05,dll_locked,,0x0356,ChEprxGrp_05_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,05,dll_lock_filter_state,,0x0356,ChEprxGrp_05_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,05,dll_loss_of_lock_count,,0x0356,ChEprxGrp_05_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,06,dll_reset_req,,0x0358,ChEprxGrp_06_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,06,reset_channels,,0x0358,ChEprxGrp_06_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,06,train_channel,,0x0358,ChEprxGrp_06_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,06,phase_select_channelinput,,0x0358,ChEprxGrp_06_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,06,dll_state,,0x0359,ChEprxGrp_06_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,06,phase_select_channeloutput,,0x0359,ChEprxGrp_06_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,06,dll_instant_lock,,0x0359,ChEprxGrp_06_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,06,channel_locked,,0x0359,ChEprxGrp_06_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,06,dll_locked,,0x035a,ChEprxGrp_06_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,06,dll_lock_filter_state,,0x035a,ChEprxGrp_06_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,06,dll_loss_of_lock_count,,0x035a,ChEprxGrp_06_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,07,dll_reset_req,,0x035c,ChEprxGrp_07_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,07,reset_channels,,0x035c,ChEprxGrp_07_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,07,train_channel,,0x035c,ChEprxGrp_07_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,07,phase_select_channelinput,,0x035c,ChEprxGrp_07_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,07,dll_state,,0x035d,ChEprxGrp_07_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,07,phase_select_channeloutput,,0x035d,ChEprxGrp_07_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,07,dll_instant_lock,,0x035d,ChEprxGrp_07_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,07,channel_locked,,0x035d,ChEprxGrp_07_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,07,dll_locked,,0x035e,ChEprxGrp_07_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,07,dll_lock_filter_state,,0x035e,ChEprxGrp_07_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,07,dll_loss_of_lock_count,,0x035e,ChEprxGrp_07_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,08,dll_reset_req,,0x0360,ChEprxGrp_08_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,08,reset_channels,,0x0360,ChEprxGrp_08_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,08,train_channel,,0x0360,ChEprxGrp_08_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,08,phase_select_channelinput,,0x0360,ChEprxGrp_08_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,08,dll_state,,0x0361,ChEprxGrp_08_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,08,phase_select_channeloutput,,0x0361,ChEprxGrp_08_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,08,dll_instant_lock,,0x0361,ChEprxGrp_08_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,08,channel_locked,,0x0361,ChEprxGrp_08_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,08,dll_locked,,0x0362,ChEprxGrp_08_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,08,dll_lock_filter_state,,0x0362,ChEprxGrp_08_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,08,dll_loss_of_lock_count,,0x0362,ChEprxGrp_08_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,09,dll_reset_req,,0x0364,ChEprxGrp_09_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,09,reset_channels,,0x0364,ChEprxGrp_09_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,09,train_channel,,0x0364,ChEprxGrp_09_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,09,phase_select_channelinput,,0x0364,ChEprxGrp_09_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,09,dll_state,,0x0365,ChEprxGrp_09_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,09,phase_select_channeloutput,,0x0365,ChEprxGrp_09_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,09,dll_instant_lock,,0x0365,ChEprxGrp_09_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,09,channel_locked,,0x0365,ChEprxGrp_09_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,09,dll_locked,,0x0366,ChEprxGrp_09_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,09,dll_lock_filter_state,,0x0366,ChEprxGrp_09_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,09,dll_loss_of_lock_count,,0x0366,ChEprxGrp_09_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,10,dll_reset_req,,0x0368,ChEprxGrp_10_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,10,reset_channels,,0x0368,ChEprxGrp_10_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,10,train_channel,,0x0368,ChEprxGrp_10_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,10,phase_select_channelinput,,0x0368,ChEprxGrp_10_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,10,dll_state,,0x0369,ChEprxGrp_10_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,10,phase_select_channeloutput,,0x0369,ChEprxGrp_10_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,10,dll_instant_lock,,0x0369,ChEprxGrp_10_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,10,channel_locked,,0x0369,ChEprxGrp_10_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,10,dll_locked,,0x036a,ChEprxGrp_10_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,10,dll_lock_filter_state,,0x036a,ChEprxGrp_10_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,10,dll_loss_of_lock_count,,0x036a,ChEprxGrp_10_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChEprxGrp,11,dll_reset_req,,0x036c,ChEprxGrp_11_dll_reset_req,rw,1,0,1,0,1,Reset the master DLL in ePortRxGroup (used only for debugging). Default value: 0
ChEprxGrp,11,reset_channels,,0x036c,ChEprxGrp_11_reset_channels,rw,1,0,1,1,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,11,train_channel,,0x036c,ChEprxGrp_11_train_channel,rw,1,0,1,2,1,Request phase training for a given channel. The user has to generate a positive pulse on this bit (set to 1 and then set to 0)
ChEprxGrp,11,phase_select_channelinput,,0x036c,ChEprxGrp_11_phase_select_channelinput,rw,1,0,15,3,15,Selects the phase for the selected channel (0-14). Only used if RW_EprxGrpTop_ALL.trackMode is in fixed_phase or continuous_tracking_with_initial_phase modes
ChEprxGrp,11,dll_state,,0x036d,ChEprxGrp_11_dll_state,ro,1,0,3,0,3,State of initialization state machine (0: Reset; 1: Force down; 2: Confirm early state; 3:Free running state)
ChEprxGrp,11,phase_select_channeloutput,,0x036d,ChEprxGrp_11_phase_select_channeloutput,ro,1,0,15,2,15,Currently selected phases for the channel
ChEprxGrp,11,dll_instant_lock,,0x036d,ChEprxGrp_11_dll_instant_lock,ro,1,0,1,6,1,Instant lock signal from the DLL (not useful)
ChEprxGrp,11,channel_locked,,0x036d,ChEprxGrp_11_channel_locked,ro,1,0,1,7,1,Status of phase selection logic for channels. Logic value of 1 means that the channel is locked. This bit is always high if the static mode selection is used
ChEprxGrp,11,dll_locked,,0x036e,ChEprxGrp_11_dll_locked,ro,1,0,1,0,1,Status of the DLL (0:unlocked; 1:locked)
ChEprxGrp,11,dll_lock_filter_state,,0x036e,ChEprxGrp_11_dll_lock_filter_state,ro,1,0,3,1,3,State of lock filter state machine(0:Unlocked State; 1:Confirm Lock State; 2:Locked State; 3:Confirm Unlock State)
ChEprxGrp,11,dll_loss_of_lock_count,,0x036e,ChEprxGrp_11_dll_loss_of_lock_count,ro,1,0,31,3,31,Loss of Lock counter value for the DLL Lock Filter State machine. The counter rolls over. The counter is reset only by hardreset
ChErr,00,clr_on_read,,0x0300,ChErr_00_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,00,wren_err,,0x0300,ChErr_00_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,00,wren_msk,,0x0300,ChErr_00_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,00,err_raw_dat,,0x0301,ChErr_00_err_raw_dat,ro,1,0,63,0,63,
ChErr,00,msk_dat,,0x0302,ChErr_00_msk_dat,ro,1,0,63,0,63,
ChErr,00,err_dat,,0x0303,ChErr_00_err_dat,ro,1,0,63,0,63,
ChErr,00,err_out,,0x0303,ChErr_00_err_out,ro,1,0,1,6,1,
ChErr,01,clr_on_read,,0x0304,ChErr_01_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,01,wren_err,,0x0304,ChErr_01_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,01,wren_msk,,0x0304,ChErr_01_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,01,err_raw_dat,,0x0305,ChErr_01_err_raw_dat,ro,1,0,63,0,63,
ChErr,01,msk_dat,,0x0306,ChErr_01_msk_dat,ro,1,0,63,0,63,
ChErr,01,err_dat,,0x0307,ChErr_01_err_dat,ro,1,0,63,0,63,
ChErr,01,err_out,,0x0307,ChErr_01_err_out,ro,1,0,1,6,1,
ChErr,02,clr_on_read,,0x0308,ChErr_02_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,02,wren_err,,0x0308,ChErr_02_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,02,wren_msk,,0x0308,ChErr_02_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,02,err_raw_dat,,0x0309,ChErr_02_err_raw_dat,ro,1,0,63,0,63,
ChErr,02,msk_dat,,0x030a,ChErr_02_msk_dat,ro,1,0,63,0,63,
ChErr,02,err_dat,,0x030b,ChErr_02_err_dat,ro,1,0,63,0,63,
ChErr,02,err_out,,0x030b,ChErr_02_err_out,ro,1,0,1,6,1,
ChErr,03,clr_on_read,,0x030c,ChErr_03_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,03,wren_err,,0x030c,ChErr_03_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,03,wren_msk,,0x030c,ChErr_03_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,03,err_raw_dat,,0x030d,ChErr_03_err_raw_dat,ro,1,0,63,0,63,
ChErr,03,msk_dat,,0x030e,ChErr_03_msk_dat,ro,1,0,63,0,63,
ChErr,03,err_dat,,0x030f,ChErr_03_err_dat,ro,1,0,63,0,63,
ChErr,03,err_out,,0x030f,ChErr_03_err_out,ro,1,0,1,6,1,
ChErr,04,clr_on_read,,0x0310,ChErr_04_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,04,wren_err,,0x0310,ChErr_04_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,04,wren_msk,,0x0310,ChErr_04_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,04,err_raw_dat,,0x0311,ChErr_04_err_raw_dat,ro,1,0,63,0,63,
ChErr,04,msk_dat,,0x0312,ChErr_04_msk_dat,ro,1,0,63,0,63,
ChErr,04,err_dat,,0x0313,ChErr_04_err_dat,ro,1,0,63,0,63,
ChErr,04,err_out,,0x0313,ChErr_04_err_out,ro,1,0,1,6,1,
ChErr,05,clr_on_read,,0x0314,ChErr_05_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,05,wren_err,,0x0314,ChErr_05_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,05,wren_msk,,0x0314,ChErr_05_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,05,err_raw_dat,,0x0315,ChErr_05_err_raw_dat,ro,1,0,63,0,63,
ChErr,05,msk_dat,,0x0316,ChErr_05_msk_dat,ro,1,0,63,0,63,
ChErr,05,err_dat,,0x0317,ChErr_05_err_dat,ro,1,0,63,0,63,
ChErr,05,err_out,,0x0317,ChErr_05_err_out,ro,1,0,1,6,1,
ChErr,06,clr_on_read,,0x0318,ChErr_06_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,06,wren_err,,0x0318,ChErr_06_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,06,wren_msk,,0x0318,ChErr_06_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,06,err_raw_dat,,0x0319,ChErr_06_err_raw_dat,ro,1,0,63,0,63,
ChErr,06,msk_dat,,0x031a,ChErr_06_msk_dat,ro,1,0,63,0,63,
ChErr,06,err_dat,,0x031b,ChErr_06_err_dat,ro,1,0,63,0,63,
ChErr,06,err_out,,0x031b,ChErr_06_err_out,ro,1,0,1,6,1,
ChErr,07,clr_on_read,,0x031c,ChErr_07_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,07,wren_err,,0x031c,ChErr_07_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,07,wren_msk,,0x031c,ChErr_07_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,07,err_raw_dat,,0x031d,ChErr_07_err_raw_dat,ro,1,0,63,0,63,
ChErr,07,msk_dat,,0x031e,ChErr_07_msk_dat,ro,1,0,63,0,63,
ChErr,07,err_dat,,0x031f,ChErr_07_err_dat,ro,1,0,63,0,63,
ChErr,07,err_out,,0x031f,ChErr_07_err_out,ro,1,0,1,6,1,
ChErr,08,clr_on_read,,0x0320,ChErr_08_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,08,wren_err,,0x0320,ChErr_08_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,08,wren_msk,,0x0320,ChErr_08_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,08,err_raw_dat,,0x0321,ChErr_08_err_raw_dat,ro,1,0,63,0,63,
ChErr,08,msk_dat,,0x0322,ChErr_08_msk_dat,ro,1,0,63,0,63,
ChErr,08,err_dat,,0x0323,ChErr_08_err_dat,ro,1,0,63,0,63,
ChErr,08,err_out,,0x0323,ChErr_08_err_out,ro,1,0,1,6,1,
ChErr,09,clr_on_read,,0x0324,ChErr_09_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,09,wren_err,,0x0324,ChErr_09_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,09,wren_msk,,0x0324,ChErr_09_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,09,err_raw_dat,,0x0325,ChErr_09_err_raw_dat,ro,1,0,63,0,63,
ChErr,09,msk_dat,,0x0326,ChErr_09_msk_dat,ro,1,0,63,0,63,
ChErr,09,err_dat,,0x0327,ChErr_09_err_dat,ro,1,0,63,0,63,
ChErr,09,err_out,,0x0327,ChErr_09_err_out,ro,1,0,1,6,1,
ChErr,10,clr_on_read,,0x0328,ChErr_10_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,10,wren_err,,0x0328,ChErr_10_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,10,wren_msk,,0x0328,ChErr_10_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,10,err_raw_dat,,0x0329,ChErr_10_err_raw_dat,ro,1,0,63,0,63,
ChErr,10,msk_dat,,0x032a,ChErr_10_msk_dat,ro,1,0,63,0,63,
ChErr,10,err_dat,,0x032b,ChErr_10_err_dat,ro,1,0,63,0,63,
ChErr,10,err_out,,0x032b,ChErr_10_err_out,ro,1,0,1,6,1,
ChErr,11,clr_on_read,,0x032c,ChErr_11_clr_on_read,wo,1,0,1,0,1,Clear signal for errors on this individual channel (active high; self resetting)
ChErr,11,wren_err,,0x032c,ChErr_11_wren_err,wo,1,0,1,1,1,Enables writing into err_dat register for this individual channel (data taken from value in ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,11,wren_msk,,0x032c,ChErr_11_wren_msk,wo,1,0,1,2,1,Enables setting the mask for this individual channel (mask value taken from ErrTop.err_wr_data) [1: enabled; 0: disabled]
ChErr,11,err_raw_dat,,0x032d,ChErr_11_err_raw_dat,ro,1,0,63,0,63,
ChErr,11,msk_dat,,0x032e,ChErr_11_msk_dat,ro,1,0,63,0,63,
ChErr,11,err_dat,,0x032f,ChErr_11_err_dat,ro,1,0,63,0,63,
ChErr,11,err_out,,0x032f,ChErr_11_err_out,ro,1,0,1,6,1,
ClocksAndResets,Global,test_output_select,00,0x03d0,ClocksAndResets_test_output_select_00,rw,6,0,255,18,255,Control for the test output multiplexer (channel 0) [0: Always low; 1: Always high; 2: ClkA; 3: ClkB; 4: ClkC; 5: clk40M_etx; 6: clk80M_etx; 7: clk160M_etx; 8: clk320M_etx; 9: clk640M_etx; 10: clk1G28_etx; 11: clk40M_erx; 12: clk80M_erx; 13: clk160M_erx; 14: clk320M_erx; 15: clk640M_erx; 16: clk1G28_erx; 17: end_counter_ref_clk; 18: capbank_search_active; 19: end_counter_vco; 20: pll_inst_lock; 21: pll_lockedV; 22: data_fcV; 23: clk_320M_fcV; 24: fc_locked_asyncV; 25: fc_error_asyncV; 26: fc_UNASSIGNED_asyncV; 27: fcSPARE_7_asyncV; 28: fcSPARE_6_asyncV; 29: fcSPARE_5_asyncV; 30: fcSPARE_4_asyncV; 31: fcSPARE_3_asyncV; 32: fcSPARE_2_asyncV; 33: fcSPARE_1_asyncV; 34: fcSPARE_0_asyncV; 35: fc_LINK_RESET_ECON_D_asyncV; 36: fc_LINK_RESET_ECON_T_asyncV; 37: fc_LINK_RESET_ROC_D_asyncV; 38: fc_LINK_RESET_ROC_T_asyncV; 39: fc_ECR_asyncV; 40: fc_EBR_asyncV; 41: fc_CalPulseExt_asyncV; 42: fc_CalPulseInt_asyncV; 43: fc_NZS_asyncV; 44: fc_L1A_asyncV; 45: fc_OCR_asyncV; 46: fc_BCR_asyncV; 47: fc_Chip_Sync_asyncV; 48: fc_UNASSIGNEDV; 49: fcSPARE_7V; 50: fcSPARE_6V; 51: fcSPARE_5V; 52: fcSPARE_4V; 53: fcSPARE_3V; 54: fcSPARE_2V; 55: fcSPARE_1V; 56: fcSPARE_0V; 57: fc_LINK_RESET_ECON_DV; 58: fc_LINK_RESET_ECON_TV; 59: fc_LINK_RESET_ROC_DV; 60: fc_LINK_RESET_ROC_TV; 61: fc_ECRV; 62: fc_EBRV; 63: fc_CalPulseExtV; 64: fc_CalPulseIntV; 65: fc_NZSV; 66: fc_L1AV; 67: fc_OCRV; 68: fc_BCRV; 69: fc_Chip_SyncV; 70: dll_late[0]; 71: dll_late[1]; 72: dll_late[2]; 73: dll_late[3]; 74: dll_late[4]; 75: dll_late[5]; 76: dll_late[6]; 77: dll_late[7]; 78: dll_late[8]; 79: dll_late[9]; 80: dll_late[10]; 81: dll_late[11]]
ClocksAndResets,Global,test_output_enable,00,0x03d0,ClocksAndResets_test_output_enable_00,rw,6,1,1,34,1,Enable test output 0 [1: enable; 0: disable].
ClocksAndResets,Global,test_output_invert_data,00,0x03d0,ClocksAndResets_test_output_invert_data_00,rw,6,0,1,35,1,Invert test output 0 [1: invert; 0: not invert].
ClocksAndResets,Global,test_output_preemp_mode,00,0x03d0,ClocksAndResets_test_output_preemp_mode_00,rw,6,0,3,36,3,Sets the pre-emphasis mode for test output 0 [0: disabled; 1: reserved; 2: self timed; 3:reserved]
ClocksAndResets,Global,test_output_drive_strength,00,0x03d0,ClocksAndResets_test_output_drive_strength_00,rw,6,3,7,38,7,Sets the driving strength for test output 0 [0: 0mA; 1: 1.0mA; 2: 1.5mA; ...; 7: 4mA]
ClocksAndResets,Global,test_output_preemp_strength,00,0x03d0,ClocksAndResets_test_output_preemp_strength_00,rw,6,3,7,41,7,Sets the pre-emphasis strength for test output 0 [0: 0mA; 1: 1.0mA; 2: 1.5mA; ...; 7: 4mA]
ClocksAndResets,Global,test_output_preemp_width,00,0x03d0,ClocksAndResets_test_output_preemp_width_00,rw,6,0,7,44,7,Sets the width of pre-emphasis pulse for test output 0 in self timed mode [0: 120ps; 1: 240ps; ...; 7: 960 ps]
ClocksAndResets,Global,test_output_low_supply_r,00,0x03d0,ClocksAndResets_test_output_low_supply_r_00,rw,6,0,1,47,1,
ClocksAndResets,Global,test_output_select,01,0x03d0,ClocksAndResets_test_output_select_01,rw,6,0,255,26,255,Control for the test output multiplexer (channel 1) [0: Always low; 1: Always high; 2: ClkA; 3: ClkB; 4: ClkC; 5: clk40M_etx; 6: clk80M_etx; 7: clk160M_etx; 8: clk320M_etx; 9: clk640M_etx; 10: clk1G28_etx; 11: clk40M_erx; 12: clk80M_erx; 13: clk160M_erx; 14: clk320M_erx; 15: clk640M_erx; 16: clk1G28_erx; 17: end_counter_ref_clk; 18: capbank_search_active; 19: end_counter_vco; 20: pll_inst_lock; 21: pll_lockedV; 22: data_fcV; 23: clk_320M_fcV; 24: fc_locked_asyncV; 25: fc_error_asyncV; 26: fc_UNASSIGNED_asyncV; 27: fcSPARE_7_asyncV; 28: fcSPARE_6_asyncV; 29: fcSPARE_5_asyncV; 30: fcSPARE_4_asyncV; 31: fcSPARE_3_asyncV; 32: fcSPARE_2_asyncV; 33: fcSPARE_1_asyncV; 34: fcSPARE_0_asyncV; 35: fc_LINK_RESET_ECON_D_asyncV; 36: fc_LINK_RESET_ECON_T_asyncV; 37: fc_LINK_RESET_ROC_D_asyncV; 38: fc_LINK_RESET_ROC_T_asyncV; 39: fc_ECR_asyncV; 40: fc_EBR_asyncV; 41: fc_CalPulseExt_asyncV; 42: fc_CalPulseInt_asyncV; 43: fc_NZS_asyncV; 44: fc_L1A_asyncV; 45: fc_OCR_asyncV; 46: fc_BCR_asyncV; 47: fc_Chip_Sync_asyncV; 48: fc_UNASSIGNEDV; 49: fcSPARE_7V; 50: fcSPARE_6V; 51: fcSPARE_5V; 52: fcSPARE_4V; 53: fcSPARE_3V; 54: fcSPARE_2V; 55: fcSPARE_1V; 56: fcSPARE_0V; 57: fc_LINK_RESET_ECON_DV; 58: fc_LINK_RESET_ECON_TV; 59: fc_LINK_RESET_ROC_DV; 60: fc_LINK_RESET_ROC_TV; 61: fc_ECRV; 62: fc_EBRV; 63: fc_CalPulseExtV; 64: fc_CalPulseIntV; 65: fc_NZSV; 66: fc_L1AV; 67: fc_OCRV; 68: fc_BCRV; 69: fc_Chip_SyncV; 70: dll_late[0]; 71: dll_late[1]; 72: dll_late[2]; 73: dll_late[3]; 74: dll_late[4]; 75: dll_late[5]; 76: dll_late[6]; 77: dll_late[7]; 78: dll_late[8]; 79: dll_late[9]; 80: dll_late[10]; 81: dll_late[11]]
ClocksAndResets,Global,test_output_enable,01,0x03d6,ClocksAndResets_test_output_enable_01,rw,2,1,1,0,1,Enable test output 1 [1: enable; 0: disable].
ClocksAndResets,Global,test_output_invert_data,01,0x03d6,ClocksAndResets_test_output_invert_data_01,rw,2,0,1,1,1,Invert test output 1 [1: invert; 0: not invert].
ClocksAndResets,Global,test_output_preemp_mode,01,0x03d6,ClocksAndResets_test_output_preemp_mode_01,rw,2,0,3,2,3,Sets the pre-emphasis mode for test output 1 [0: disabled; 2'd2: self timed]
ClocksAndResets,Global,test_output_drive_strength,01,0x03d6,ClocksAndResets_test_output_drive_strength_01,rw,2,3,7,4,7,Sets the driving strength for test output 1 [0: 0mA; 1: 1.0mA; 2: 1.5mA; ...; 7: 4mA]
ClocksAndResets,Global,test_output_preemp_strength,01,0x03d6,ClocksAndResets_test_output_preemp_strength_01,rw,2,3,7,7,7,Sets the pre-emphasis strength for test output 1 [0: 0mA; 1: 1.0mA; 2: 1.5mA; ...; 7: 4mA]
ClocksAndResets,Global,test_output_preemp_width,01,0x03d6,ClocksAndResets_test_output_preemp_width_01,rw,2,0,7,10,7,Sets the width of pre-emphasis pulse for test output 0 in self timed mode [0: 120ps; 1: 240ps; ...; 7: 960 ps]
ClocksAndResets,Global,test_output_low_supply_r,01,0x03d6,ClocksAndResets_test_output_low_supply_r_01,rw,2,0,1,13,1,
ClocksAndResets,Global,pusm_timeout_pll_action_rst,,0x03c4,ClocksAndResets_pusm_timeout_pll_action_rst,wo,1,0,1,0,1,Reset signal for the PLL timeout action counter (pusm_timeout_pll_action_counter)
ClocksAndResets,Global,pusm_timeout_dll_action_rst,,0x03c4,ClocksAndResets_pusm_timeout_dll_action_rst,wo,1,0,1,1,1,Reset signal for the DLL timeout action action counter (pusm_timeout_dll_action_counter)
ClocksAndResets,Global,pusm_watchdog_pll_action_rst,,0x03c4,ClocksAndResets_pusm_watchdog_pll_action_rst,wo,1,0,1,2,1,Reset signal for the PLL watchdog action counter (pusm_watchdog_pll_action_counter)
ClocksAndResets,Global,pusm_watchdog_dll_action_rst,,0x03c4,ClocksAndResets_pusm_watchdog_dll_action_rst,wo,1,0,1,3,1,Reset signal for the DLL watchdog action action counter (pusm_watchdog_dll_action_counter)
ClocksAndResets,Global,pusm_left_ready_action_rst,,0x03c4,ClocksAndResets_pusm_left_ready_action_rst,wo,1,0,1,4,1,Reset signal for the left ready action action counter (pusm_left_ready_action_counter)
ClocksAndResets,Global,pusm_state_upset_action_rst,,0x03c4,ClocksAndResets_pusm_state_upset_action_rst,wo,1,0,1,5,1,Reset signal for the state upset action action counter (pusm_state_upset_action_counter)
ClocksAndResets,Global,lock_filter_loss_of_lock_count_rst,,0x03c4,ClocksAndResets_lock_filter_loss_of_lock_count_rst,wo,1,0,1,6,1,Reset signal for the PLL loss of lock action counter (lock_filter_loss_of_lock_count)
ClocksAndResets,Global,fc_locked_action_rst,,0x03c4,ClocksAndResets_fc_locked_action_rst,wo,1,0,1,7,1,Reset signal for the Fast Command Locked action counter
ClocksAndResets,Global,pusm_force_state,,0x03c5,ClocksAndResets_pusm_force_state,rw,3,0,1,0,1,Disable state changes for the PUSM and go to 'stateForced' state (pusm_force_magic has to be set first)
ClocksAndResets,Global,pusm_force_magic,,0x03c5,ClocksAndResets_pusm_force_magic,rw,3,0,255,1,255,Magic number to enable pusm_force_state signal
ClocksAndResets,Global,pusm_state_forced,,0x03c5,ClocksAndResets_pusm_state_forced,rw,3,0,15,9,15,State to enter when pusm_force_state is high [0: RESET; 1: IDLE; 2: RESET_PLL; 3: WAIT_PLL_LOCK; 4: RESET_DLLS; 5: WAIT_DLLS_RESET_DONE; 6: WAIT_DLL_LOCK; 7: RESET_LOGIC_USING_DLL; 8: READY]
ClocksAndResets,Global,pusm_wdog_pll_disable,,0x03c5,ClocksAndResets_pusm_wdog_pll_disable,rw,3,0,1,13,1,Disable PLL watchdog in the PUSM
ClocksAndResets,Global,pusm_wdog_dll_disable,,0x03c5,ClocksAndResets_pusm_wdog_dll_disable,rw,3,0,1,14,1,Disable DLL watchdog in the PUSM
ClocksAndResets,Global,pusm_timeout_pll_lock_config,,0x03c5,ClocksAndResets_pusm_timeout_pll_lock_config,rw,3,0,15,15,15,Configuration for timeout for PLL lock [0:1s; 1:500ms; 2:100ms; 3:50ms; 4:20ms; 5:10ms; 6:5ms; 7:2ms; 8:1ms; 9:500us; 10:200us; 11:100us; 12:50us; 13:20us; 14:10us; 15:disabled]
ClocksAndResets,Global,pusm_timeout_dll_lock_config,,0x03c5,ClocksAndResets_pusm_timeout_dll_lock_config,rw,3,0,15,19,15,Configuration for timeout for DLL lock [0:1s; 1:500ms; 2:100ms; 3:50ms; 4:20ms; 5:10ms; 6:5ms; 7:2ms; 8:1ms; 9:500us; 10:200us; 11:100us; 12:50us; 13:20us; 14:10us; 15:disabled]
ClocksAndResets,Global,pusm_run,,0x03c5,ClocksAndResets_pusm_run,rw,3,0,1,23,1,Start PUSM (set only after the chip configuration  is stable)
ClocksAndResets,Global,clk_tree_magic_number,,0x03c8,ClocksAndResets_clk_tree_magic_number,rw,1,0,255,0,255,Magic number to enable clock tree disabling. Set to 8'hA5 in order to enable clock disabling feature.
ClocksAndResets,Global,clk_tree_a_disable,,0x03c9,ClocksAndResets_clk_tree_a_disable,rw,7,0,1,0,1,Disable the clock tree A (depends on clk_tree_magic_number)
ClocksAndResets,Global,clk_tree_b_disable,,0x03c9,ClocksAndResets_clk_tree_b_disable,rw,7,0,1,1,1,Disable the clock tree B (depends on clk_tree_magic_number)
ClocksAndResets,Global,clk_tree_c_disable,,0x03c9,ClocksAndResets_clk_tree_c_disable,rw,7,0,1,2,1,Disable the clock tree C (depends on clk_tree_magic_number)
ClocksAndResets,Global,pll_config_res,,0x03c9,ClocksAndResets_pll_config_res,rw,7,2,15,3,15,PLL's filter resistance when PLL is locking [R = 1/2 * 79.8k / CONFIG] Ohm; default: 2
ClocksAndResets,Global,pll_config_res_when_locked,,0x03c9,ClocksAndResets_pll_config_res_when_locked,rw,7,2,15,7,15,PLL's filter resistance when PLL is locked [R = 1/2 * 79.8k / CONFIG] Ohm; default: 2
ClocksAndResets,Global,pll_config_integral,,0x03c9,ClocksAndResets_pll_config_integral,rw,7,9,15,11,15,PLL's integral current path when in locking state [0 : 1.1 : 8] uA; default: 9
ClocksAndResets,Global,pll_config_integral_when_locked,,0x03c9,ClocksAndResets_pll_config_integral_when_locked,rw,7,9,15,15,15,PLL's integral current path when in locked state [0 : 1.1 : 8] uA; default: 9
ClocksAndResets,Global,pll_config_proportional,,0x03c9,ClocksAndResets_pll_config_proportional,rw,7,9,15,19,15,PLL's proportional current path when in locking state [0 : 5.46 : 82] uA; default: 9
ClocksAndResets,Global,pll_config_proportional_when_locked,,0x03c9,ClocksAndResets_pll_config_proportional_when_locked,rw,7,9,15,23,15,PLL's proportional current path when in locked state [0 : 5.46 : 82] uA; default: 9
ClocksAndResets,Global,vco_config_biasgen,,0x03c9,ClocksAndResets_vco_config_biasgen,rw,7,8,15,27,15,Bias DAC for the charge pumps [0 : 8 : 120] uA; default: 8
ClocksAndResets,Global,vco_config_dac,,0x03c9,ClocksAndResets_vco_config_dac,rw,7,8,15,31,15,Current DAC for the VCO [0: 0.470 : 7.1] mA; default: 8
ClocksAndResets,Global,vco_rail_rail_mode,,0x03c9,ClocksAndResets_vco_rail_rail_mode,rw,7,1,1,35,1,VCO rail mode; [0: voltage mode - fixed to VDDRX; 1: current mode - value selectable using CLKGVcoDAC]; default: 1
ClocksAndResets,Global,enable_capbank_override,,0x03c9,ClocksAndResets_enable_capbank_override,rw,7,0,1,36,1,Enables the override of the capacitor bank [1: enable; 0: disable].
ClocksAndResets,Global,capbank_select,,0x03c9,ClocksAndResets_capbank_select,rw,7,31,511,37,511,Selects the capacitor bank value for the VCO (only when enable_capbank_override is 1)
ClocksAndResets,Global,calibration_end_of_count_select,,0x03c9,ClocksAndResets_calibration_end_of_count_select,rw,7,15,15,46,15,Selects the VCO calibration race goal in number of clock cycles between refClk (refClkCounter) and vco_40MHz (vcoClkCounter) (2^(calibration_end_of_count_select+1)); default: 15
ClocksAndResets,Global,wait_pll_time,,0x03c9,ClocksAndResets_wait_pll_time,rw,7,15,15,50,15,Wait time configuration for the PLL state machine waiting for lock (2 ^ wait_pll_time);(only when lock_filter_enable == 0); default: 15
ClocksAndResets,Global,enable_control_override,,0x03c9,ClocksAndResets_enable_control_override,rw,7,0,1,54,1,Enables the control override of the PLL state machine; default: 0. [1: enable; 0: disable].
ClocksAndResets,Global,co_enable_pll,,0x03c9,ClocksAndResets_co_enable_pll,rw,7,0,1,55,1,Enables the enablePLL switch in the PLL [0: disable; 1: enable] (only when enable_control_override is 1); default: 0. [1: enable; 0: disable].
ClocksAndResets,Global,co_connect_pll,,0x03d0,ClocksAndResets_co_connect_pll,rw,6,0,1,0,1,
ClocksAndResets,Global,co_dis_data_counter_ref,,0x03d0,ClocksAndResets_co_dis_data_counter_ref,rw,6,0,1,1,1,RESERVED (not used)
ClocksAndResets,Global,co_dis_des_vbiasgen,,0x03d0,ClocksAndResets_co_dis_des_vbiasgen,rw,6,0,1,2,1,RESERVED (not used)
ClocksAndResets,Global,co_override_vc,,0x03d0,ClocksAndResets_co_override_vc,rw,6,0,1,3,1,Forces the VCO's control voltage to be in mid range [1: enable; 0: disable] (only when enable_control_override is 1); default: 0
ClocksAndResets,Global,lock_filter_enable,,0x03d0,ClocksAndResets_lock_filter_enable,rw,6,1,1,4,1,Enables the lock filter on the instant lock signal for the PLL; default: 1 [1: enable; 0: disable].
ClocksAndResets,Global,lock_filter_lock_threshold,,0x03d0,ClocksAndResets_lock_filter_lock_threshold,rw,6,15,15,5,15,Sets the lock threshold value of the instant lock low pass filter. The number of 40 MHz clock cycles is set to 2^lock_filter_lock_threshold; default: 15
ClocksAndResets,Global,lock_filter_relock_threshold,,0x03d0,ClocksAndResets_lock_filter_relock_threshold,rw,6,15,15,9,15,Sets the relock threshold value of the instant lock low pass filter. The number of 40 MHz clock cycles is set to 2^lock_filter_relock_threshold; default: 15
ClocksAndResets,Global,lock_filter_un_lock_threshold,,0x03d0,ClocksAndResets_lock_filter_un_lock_threshold,rw,6,15,15,13,15,Sets the unlock threshold value of the instant lock low pass filter. The number of 40 MHz clock cycles is set to 2^lock_filter_unLock_threshold; default: 15
ClocksAndResets,Global,lock_filter_clk_always_enable,,0x03d0,ClocksAndResets_lock_filter_clk_always_enable,rw,6,0,1,17,1,Bypass clock gating and leave the clock always enabled in the lock filter; default: 0. [1: enable bypass; 0: disable bypass].
ClocksAndResets,Global,ref_clk_sel_testclkin,,0x03d6,ClocksAndResets_ref_clk_sel_testclkin,rw,2,0,1,14,1,Reference clock selection; 0: from fast command; 1: from test_clk_in
ClocksAndResets,Global,clk_tree_sram_disable,,0x03d6,ClocksAndResets_clk_tree_sram_disable,rw,2,0,1,15,1,Disable non triplicated clock for SRAMs
ClocksAndResets,Global,clk_tree_erx_disable,,0x03d8,ClocksAndResets_clk_tree_erx_disable,rw,1,0,1,0,1,Disable clock tree for high speed deserializers (ePortRxGroup)
ClocksAndResets,Global,clk_tree_etx_disable,,0x03d8,ClocksAndResets_clk_tree_etx_disable,rw,1,0,1,1,1,Disable clock tree for high speed serializers
ClocksAndResets,Global,pusm_timeout_pll_action_counter,,0x03d9,ClocksAndResets_pusm_timeout_pll_action_counter,ro,1,0,255,0,255,PLL timeout action counter
ClocksAndResets,Global,pusm_timeout_dll_action_counter,,0x03da,ClocksAndResets_pusm_timeout_dll_action_counter,ro,1,0,255,0,255,DLL timeout action counter
ClocksAndResets,Global,pusm_watchdog_pll_action_counter,,0x03db,ClocksAndResets_pusm_watchdog_pll_action_counter,ro,1,0,255,0,255,PLL watchdog action action counter
ClocksAndResets,Global,pusm_watchdog_dll_action_counter,,0x03dc,ClocksAndResets_pusm_watchdog_dll_action_counter,ro,1,0,255,0,255,DLL watchdog action action counter
ClocksAndResets,Global,pusm_left_ready_action_counter,,0x03dd,ClocksAndResets_pusm_left_ready_action_counter,ro,1,0,255,0,255,Left Ready State action action counter
ClocksAndResets,Global,pusm_state_upset_action_counter,,0x03de,ClocksAndResets_pusm_state_upset_action_counter,ro,1,0,255,0,255,State Upset action action counter
ClocksAndResets,Global,pusm_state,,0x03df,ClocksAndResets_pusm_state,ro,4,0,15,0,15,Power Up State Machine State [0: RESET; 1: IDLE; 2: RESET_PLL; 3: WAIT_PLL_LOCK; 4: RESET_DLLS; 5: WAIT_DLLS_RESET_DONE; 6: WAIT_DLL_LOCK; 7: RESET_LOGIC_USING_DLL; 8: READY]
ClocksAndResets,Global,lock_filter_state,,0x03df,ClocksAndResets_lock_filter_state,ro,4,0,3,4,3,Lock filter state machine [0: UnlockedState; 1: ConfirmLockState; 2: LockedState; 3: ConfirmUnlockState]
ClocksAndResets,Global,lock_filter_locked,,0x03df,ClocksAndResets_lock_filter_locked,ro,4,0,1,6,1,Locked signal from the lock filter
ClocksAndResets,Global,lock_filter_loss_of_lock_count,,0x03df,ClocksAndResets_lock_filter_loss_of_lock_count,ro,4,0,255,7,255,PLL loss of lock action counter
ClocksAndResets,Global,sm_state,,0x03df,ClocksAndResets_sm_state,ro,4,0,15,15,15,PLL initialization state machine [0: ResetState; 1: Init; 2: CapSearchStart; 3: CapSearchClearCounters0; 4: CapSearchClearCounters1; 5: CapSearchEnableCounter; 6: CapSearchWaitFreqDecision; 7: CapSearchVCOFaster; 8: CapSearchRefClkFaster; 9: PLLInit; 10: CDRInit; 11: PLLEnd; 12: CDREnd]
ClocksAndResets,Global,sm_locked,,0x03df,ClocksAndResets_sm_locked,ro,4,0,1,19,1,PLL state machine locked
ClocksAndResets,Global,vco_capbank,,0x03df,ClocksAndResets_vco_capbank,ro,4,0,511,20,511,Currently selected capacitor bank
ClocksAndResets,Global,tmr_err_cnt_clocks_and_resets,,0x03e3,ClocksAndResets_tmr_err_cnt_clocks_and_resets,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
ELinkProcessors,Global,cm_selection_x,00,0x0458,ELinkProcessors_cm_selection_x_00,rw,3,6,7,0,7,
ELinkProcessors,Global,cm_user_def_x,00,0x045d,ELinkProcessors_cm_user_def_x_00,rw,5,0,1023,0,1023,
ELinkProcessors,Global,status_selected_cm_erx,00,0x0476,ELinkProcessors_status_selected_cm_erx_00,ro,5,0,1023,0,1023,
ELinkProcessors,Global,status_cm_roc,00,0x0485,ELinkProcessors_status_cm_roc_00,ro,5,0,1023,0,1023,
ELinkProcessors,Global,cm_selection_x,01,0x0458,ELinkProcessors_cm_selection_x_01,rw,3,6,7,3,7,
ELinkProcessors,Global,cm_user_def_x,01,0x045d,ELinkProcessors_cm_user_def_x_01,rw,5,0,1023,10,1023,
ELinkProcessors,Global,status_selected_cm_erx,01,0x0476,ELinkProcessors_status_selected_cm_erx_01,ro,5,0,1023,10,1023,
ELinkProcessors,Global,status_cm_roc,01,0x0485,ELinkProcessors_status_cm_roc_01,ro,5,0,1023,10,1023,
ELinkProcessors,Global,cm_selection_x,02,0x0458,ELinkProcessors_cm_selection_x_02,rw,3,6,7,6,7,
ELinkProcessors,Global,cm_user_def_x,02,0x045d,ELinkProcessors_cm_user_def_x_02,rw,5,0,1023,20,1023,
ELinkProcessors,Global,status_selected_cm_erx,02,0x0476,ELinkProcessors_status_selected_cm_erx_02,ro,5,0,1023,20,1023,
ELinkProcessors,Global,status_cm_roc,02,0x0485,ELinkProcessors_status_cm_roc_02,ro,5,0,1023,20,1023,
ELinkProcessors,Global,cm_selection_x,03,0x0458,ELinkProcessors_cm_selection_x_03,rw,3,6,7,9,7,
ELinkProcessors,Global,cm_user_def_x,03,0x045d,ELinkProcessors_cm_user_def_x_03,rw,5,0,1023,30,1023,
ELinkProcessors,Global,status_selected_cm_erx,03,0x0476,ELinkProcessors_status_selected_cm_erx_03,ro,5,0,1023,30,1023,
ELinkProcessors,Global,status_cm_roc,03,0x0485,ELinkProcessors_status_cm_roc_03,ro,5,0,1023,30,1023,
ELinkProcessors,Global,cm_selection_x,04,0x0458,ELinkProcessors_cm_selection_x_04,rw,3,6,7,12,7,
ELinkProcessors,Global,cm_user_def_x,04,0x0462,ELinkProcessors_cm_user_def_x_04,rw,5,0,1023,0,1023,
ELinkProcessors,Global,status_selected_cm_erx,04,0x047b,ELinkProcessors_status_selected_cm_erx_04,ro,5,0,1023,0,1023,
ELinkProcessors,Global,status_cm_roc,04,0x048a,ELinkProcessors_status_cm_roc_04,ro,6,0,1023,0,1023,
ELinkProcessors,Global,cm_selection_x,05,0x0458,ELinkProcessors_cm_selection_x_05,rw,3,6,7,15,7,
ELinkProcessors,Global,cm_user_def_x,05,0x0462,ELinkProcessors_cm_user_def_x_05,rw,5,0,1023,10,1023,
ELinkProcessors,Global,status_selected_cm_erx,05,0x047b,ELinkProcessors_status_selected_cm_erx_05,ro,5,0,1023,10,1023,
ELinkProcessors,Global,status_cm_roc,05,0x048a,ELinkProcessors_status_cm_roc_05,ro,6,0,1023,10,1023,
ELinkProcessors,Global,cm_selection_x,06,0x0458,ELinkProcessors_cm_selection_x_06,rw,3,6,7,18,7,
ELinkProcessors,Global,cm_user_def_x,06,0x0462,ELinkProcessors_cm_user_def_x_06,rw,5,0,1023,20,1023,
ELinkProcessors,Global,status_selected_cm_erx,06,0x047b,ELinkProcessors_status_selected_cm_erx_06,ro,5,0,1023,20,1023,
ELinkProcessors,Global,cm_selection_x,07,0x0458,ELinkProcessors_cm_selection_x_07,rw,3,6,7,21,7,
ELinkProcessors,Global,cm_user_def_x,07,0x0462,ELinkProcessors_cm_user_def_x_07,rw,5,0,1023,30,1023,
ELinkProcessors,Global,status_selected_cm_erx,07,0x047b,ELinkProcessors_status_selected_cm_erx_07,ro,5,0,1023,30,1023,
ELinkProcessors,Global,cm_selection_x,08,0x045b,ELinkProcessors_cm_selection_x_08,rw,2,6,7,0,7,
ELinkProcessors,Global,cm_user_def_x,08,0x0467,ELinkProcessors_cm_user_def_x_08,rw,5,0,1023,0,1023,
ELinkProcessors,Global,status_selected_cm_erx,08,0x0480,ELinkProcessors_status_selected_cm_erx_08,ro,5,0,1023,0,1023,
ELinkProcessors,Global,cm_selection_x,09,0x045b,ELinkProcessors_cm_selection_x_09,rw,2,6,7,3,7,
ELinkProcessors,Global,cm_user_def_x,09,0x0467,ELinkProcessors_cm_user_def_x_09,rw,5,0,1023,10,1023,
ELinkProcessors,Global,status_selected_cm_erx,09,0x0480,ELinkProcessors_status_selected_cm_erx_09,ro,5,0,1023,10,1023,
ELinkProcessors,Global,cm_selection_x,10,0x045b,ELinkProcessors_cm_selection_x_10,rw,2,6,7,6,7,
ELinkProcessors,Global,cm_user_def_x,10,0x0467,ELinkProcessors_cm_user_def_x_10,rw,5,0,1023,20,1023,
ELinkProcessors,Global,status_selected_cm_erx,10,0x0480,ELinkProcessors_status_selected_cm_erx_10,ro,5,0,1023,20,1023,
ELinkProcessors,Global,cm_selection_x,11,0x045b,ELinkProcessors_cm_selection_x_11,rw,2,6,7,9,7,
ELinkProcessors,Global,cm_user_def_x,11,0x0467,ELinkProcessors_cm_user_def_x_11,rw,5,0,1023,30,1023,
ELinkProcessors,Global,status_selected_cm_erx,11,0x0480,ELinkProcessors_status_selected_cm_erx_11,ro,5,0,1023,30,1023,
ELinkProcessors,Global,v_reconstruct_thresh,,0x0450,ELinkProcessors_v_reconstruct_thresh,rw,1,0,15,0,15,Lower bound (>) for number of erxs that should have the same EBO for the vertical reconstruction to be successful. Should be < 12.
ELinkProcessors,Global,recon_mode_choice,,0x0451,ELinkProcessors_recon_mode_choice,rw,1,0,15,0,15,erx used to reconstruct EBO if ReconMode_Results is in User's Choice. Should be <12.
ELinkProcessors,Global,recon_mode_result,,0x0451,ELinkProcessors_recon_mode_result,rw,1,0,3,4,3,
ELinkProcessors,Global,cm_erx_route,,0x0452,ELinkProcessors_cm_erx_route,rw,6,1250999896491,281474976710655,0,281474976710655,48-bit routing addresses for Channels in determining Common Mode.
ELinkProcessors,Global,erx_mask_ht,,0x046c,ELinkProcessors_erx_mask_ht,rw,2,0,4095,0,4095,12-bit (one for each ERx) each bit set to a 1 to mask HT mismatch error from sub-packet F- and E-bit formation.
ELinkProcessors,Global,erx_mask_ebo,,0x046e,ELinkProcessors_erx_mask_ebo,rw,2,0,4095,0,4095,12-bit (one for each ERx) each bit set to a 1 to mask EBO mismatch error from sub-packet F- and E-bit formation.
ELinkProcessors,Global,erx_mask_crc,,0x0470,ELinkProcessors_erx_mask_crc,rw,2,0,4095,0,4095,12-bit (one for each ERx) each bit set to a 1 to mask CRC mismatch error from sub-packet F- and E-bit formation.
ELinkProcessors,Global,erx_override_subp_suppress,,0x0472,ELinkProcessors_erx_override_subp_suppress,rw,2,0,4095,0,4095,DEPRECATED: no effect on ECOND.
ELinkProcessors,Global,veto_pass_fail,,0x0474,ELinkProcessors_veto_pass_fail,rw,2,771,65535,0,65535,16-bit vector to select which event status results will veto a packet.
ELinkProcessors,Global,status_cm_mod,,0x048a,ELinkProcessors_status_cm_mod,ro,6,0,1023,20,1023,
ELinkProcessors,Global,status_raw_v_selected_match_set,,0x048a,ELinkProcessors_status_raw_v_selected_match_set,ro,6,0,4095,30,4095,
ELinkProcessors,Global,tmr_err_cnt_elink_processors,,0x0490,ELinkProcessors_tmr_err_cnt_elink_processors,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
ERx,00,ch_enable,,0x03e4,ERx_00_ch_enable,rw,1,1,1,0,1,
ERx,00,ch_invert_data,,0x03e4,ERx_00_ch_invert_data,rw,1,0,1,1,1,
ERx,00,ch_enable_termination,,0x03e4,ERx_00_ch_enable_termination,rw,1,1,1,2,1,
ERx,00,ch_equalizer,,0x03e4,ERx_00_ch_equalizer,rw,1,0,3,3,3,
ERx,00,ch_set_common_mode,,0x03e4,ERx_00_ch_set_common_mode,rw,1,0,1,5,1,
ERx,00,mux_enable,,0x03f0,ERx_00_mux_enable,rw,1,1,1,0,1,TESTCLKIN pad enable [1: enable; 0: disable].
ERx,00,mux_invert_data,,0x03f0,ERx_00_mux_invert_data,rw,1,0,1,1,1,TESTCLKIN pad invert data [0: not invert; 1: invert].
ERx,00,mux_enable_termination,,0x03f0,ERx_00_mux_enable_termination,rw,1,1,1,2,1,TESTCLKIN pad enable 100 Ohm termination [1: enable; 0: disable].
ERx,00,mux_equalizer,,0x03f0,ERx_00_mux_equalizer,rw,1,0,3,3,3,TESTCLKIN equalization control.
ERx,00,mux_set_common_mode,,0x03f0,ERx_00_mux_set_common_mode,rw,1,0,1,5,1,TESTCLKIN enables the common mode [1: enable; 0: disable].
ERx,01,ch_enable,,0x03e5,ERx_01_ch_enable,rw,1,1,1,0,1,
ERx,01,ch_invert_data,,0x03e5,ERx_01_ch_invert_data,rw,1,0,1,1,1,
ERx,01,ch_enable_termination,,0x03e5,ERx_01_ch_enable_termination,rw,1,1,1,2,1,
ERx,01,ch_equalizer,,0x03e5,ERx_01_ch_equalizer,rw,1,0,3,3,3,
ERx,01,ch_set_common_mode,,0x03e5,ERx_01_ch_set_common_mode,rw,1,0,1,5,1,
ERx,01,mux_enable,,0x03f1,ERx_01_mux_enable,rw,1,1,1,0,1,RESERVED (not used)
ERx,01,mux_invert_data,,0x03f1,ERx_01_mux_invert_data,rw,1,0,1,1,1,RESERVED (do not use). Inverts the fast command clock at the pad. Use RW_FCtrl_ALL_w0.EdgeSel_T1 for the same functionality.
ERx,01,mux_enable_termination,,0x03f1,ERx_01_mux_enable_termination,rw,1,1,1,2,1,Fast command clock enable termination [1: enable; 0: disable].
ERx,01,mux_equalizer,,0x03f1,ERx_01_mux_equalizer,rw,1,0,3,3,3,Fast command clock equalization control.
ERx,01,mux_set_common_mode,,0x03f1,ERx_01_mux_set_common_mode,rw,1,0,1,5,1,Fast command clock enables the common mode [1: enable; 0: disable].
ERx,02,ch_enable,,0x03e6,ERx_02_ch_enable,rw,1,1,1,0,1,
ERx,02,ch_invert_data,,0x03e6,ERx_02_ch_invert_data,rw,1,0,1,1,1,
ERx,02,ch_enable_termination,,0x03e6,ERx_02_ch_enable_termination,rw,1,1,1,2,1,
ERx,02,ch_equalizer,,0x03e6,ERx_02_ch_equalizer,rw,1,0,3,3,3,
ERx,02,ch_set_common_mode,,0x03e6,ERx_02_ch_set_common_mode,rw,1,0,1,5,1,
ERx,02,mux_enable,,0x03f2,ERx_02_mux_enable,rw,1,1,1,0,1,RESERVED (not used)
ERx,02,mux_invert_data,,0x03f2,ERx_02_mux_invert_data,rw,1,0,1,1,1,RESERVED (do not use). Inverts the fast command data at the pad. Use RW_FCtrl_ALL_w0.invert_command_rx for the same functionality.
ERx,02,mux_enable_termination,,0x03f2,ERx_02_mux_enable_termination,rw,1,1,1,2,1,Fast command data enable termination [1: enable; 0: disable].
ERx,02,mux_equalizer,,0x03f2,ERx_02_mux_equalizer,rw,1,0,3,3,3,Fast command data equalization control.
ERx,02,mux_set_common_mode,,0x03f2,ERx_02_mux_set_common_mode,rw,1,0,1,5,1,Fast command data enables the common mode [1: enable; 0: disable].
ERx,03,ch_enable,,0x03e7,ERx_03_ch_enable,rw,1,1,1,0,1,
ERx,03,ch_invert_data,,0x03e7,ERx_03_ch_invert_data,rw,1,0,1,1,1,
ERx,03,ch_enable_termination,,0x03e7,ERx_03_ch_enable_termination,rw,1,1,1,2,1,
ERx,03,ch_equalizer,,0x03e7,ERx_03_ch_equalizer,rw,1,0,3,3,3,
ERx,03,ch_set_common_mode,,0x03e7,ERx_03_ch_set_common_mode,rw,1,0,1,5,1,
ERx,04,ch_enable,,0x03e8,ERx_04_ch_enable,rw,1,1,1,0,1,
ERx,04,ch_invert_data,,0x03e8,ERx_04_ch_invert_data,rw,1,0,1,1,1,
ERx,04,ch_enable_termination,,0x03e8,ERx_04_ch_enable_termination,rw,1,1,1,2,1,
ERx,04,ch_equalizer,,0x03e8,ERx_04_ch_equalizer,rw,1,0,3,3,3,
ERx,04,ch_set_common_mode,,0x03e8,ERx_04_ch_set_common_mode,rw,1,0,1,5,1,
ERx,05,ch_enable,,0x03e9,ERx_05_ch_enable,rw,1,1,1,0,1,
ERx,05,ch_invert_data,,0x03e9,ERx_05_ch_invert_data,rw,1,0,1,1,1,
ERx,05,ch_enable_termination,,0x03e9,ERx_05_ch_enable_termination,rw,1,1,1,2,1,
ERx,05,ch_equalizer,,0x03e9,ERx_05_ch_equalizer,rw,1,0,3,3,3,
ERx,05,ch_set_common_mode,,0x03e9,ERx_05_ch_set_common_mode,rw,1,0,1,5,1,
ERx,06,ch_enable,,0x03ea,ERx_06_ch_enable,rw,1,1,1,0,1,
ERx,06,ch_invert_data,,0x03ea,ERx_06_ch_invert_data,rw,1,0,1,1,1,
ERx,06,ch_enable_termination,,0x03ea,ERx_06_ch_enable_termination,rw,1,1,1,2,1,
ERx,06,ch_equalizer,,0x03ea,ERx_06_ch_equalizer,rw,1,0,3,3,3,
ERx,06,ch_set_common_mode,,0x03ea,ERx_06_ch_set_common_mode,rw,1,0,1,5,1,
ERx,07,ch_enable,,0x03eb,ERx_07_ch_enable,rw,1,1,1,0,1,
ERx,07,ch_invert_data,,0x03eb,ERx_07_ch_invert_data,rw,1,0,1,1,1,
ERx,07,ch_enable_termination,,0x03eb,ERx_07_ch_enable_termination,rw,1,1,1,2,1,
ERx,07,ch_equalizer,,0x03eb,ERx_07_ch_equalizer,rw,1,0,3,3,3,
ERx,07,ch_set_common_mode,,0x03eb,ERx_07_ch_set_common_mode,rw,1,0,1,5,1,
ERx,08,ch_enable,,0x03ec,ERx_08_ch_enable,rw,1,1,1,0,1,
ERx,08,ch_invert_data,,0x03ec,ERx_08_ch_invert_data,rw,1,0,1,1,1,
ERx,08,ch_enable_termination,,0x03ec,ERx_08_ch_enable_termination,rw,1,1,1,2,1,
ERx,08,ch_equalizer,,0x03ec,ERx_08_ch_equalizer,rw,1,0,3,3,3,
ERx,08,ch_set_common_mode,,0x03ec,ERx_08_ch_set_common_mode,rw,1,0,1,5,1,
ERx,09,ch_enable,,0x03ed,ERx_09_ch_enable,rw,1,1,1,0,1,
ERx,09,ch_invert_data,,0x03ed,ERx_09_ch_invert_data,rw,1,0,1,1,1,
ERx,09,ch_enable_termination,,0x03ed,ERx_09_ch_enable_termination,rw,1,1,1,2,1,
ERx,09,ch_equalizer,,0x03ed,ERx_09_ch_equalizer,rw,1,0,3,3,3,
ERx,09,ch_set_common_mode,,0x03ed,ERx_09_ch_set_common_mode,rw,1,0,1,5,1,
ERx,10,ch_enable,,0x03ee,ERx_10_ch_enable,rw,1,1,1,0,1,
ERx,10,ch_invert_data,,0x03ee,ERx_10_ch_invert_data,rw,1,0,1,1,1,
ERx,10,ch_enable_termination,,0x03ee,ERx_10_ch_enable_termination,rw,1,1,1,2,1,
ERx,10,ch_equalizer,,0x03ee,ERx_10_ch_equalizer,rw,1,0,3,3,3,
ERx,10,ch_set_common_mode,,0x03ee,ERx_10_ch_set_common_mode,rw,1,0,1,5,1,
ERx,11,ch_enable,,0x03ef,ERx_11_ch_enable,rw,1,1,1,0,1,
ERx,11,ch_invert_data,,0x03ef,ERx_11_ch_invert_data,rw,1,0,1,1,1,
ERx,11,ch_enable_termination,,0x03ef,ERx_11_ch_enable_termination,rw,1,1,1,2,1,
ERx,11,ch_equalizer,,0x03ef,ERx_11_ch_equalizer,rw,1,0,3,3,3,
ERx,11,ch_set_common_mode,,0x03ef,ERx_11_ch_set_common_mode,rw,1,0,1,5,1,
ERx,Global,tmr_err_cnt_erx,,0x03f3,ERx_tmr_err_cnt_erx,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
ETx,00,ch_invert_data,,0x03f4,ETx_00_ch_invert_data,rw,2,0,1,0,1,
ETx,00,ch_drive_strength,,0x03f4,ETx_00_ch_drive_strength,rw,2,3,7,1,7,
ETx,00,ch_pre_emphasis_mode,,0x03f4,ETx_00_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,00,ch_pre_emphasis_width,,0x03f4,ETx_00_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,00,ch_pre_emphasis_strength,,0x03f4,ETx_00_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,00,ch_low_supply_r,,0x03f4,ETx_00_ch_low_supply_r,rw,2,0,1,12,1,
ETx,01,ch_invert_data,,0x03f6,ETx_01_ch_invert_data,rw,2,0,1,0,1,
ETx,01,ch_drive_strength,,0x03f6,ETx_01_ch_drive_strength,rw,2,3,7,1,7,
ETx,01,ch_pre_emphasis_mode,,0x03f6,ETx_01_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,01,ch_pre_emphasis_width,,0x03f6,ETx_01_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,01,ch_pre_emphasis_strength,,0x03f6,ETx_01_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,01,ch_low_supply_r,,0x03f6,ETx_01_ch_low_supply_r,rw,2,0,1,12,1,
ETx,02,ch_invert_data,,0x03f8,ETx_02_ch_invert_data,rw,2,0,1,0,1,
ETx,02,ch_drive_strength,,0x03f8,ETx_02_ch_drive_strength,rw,2,3,7,1,7,
ETx,02,ch_pre_emphasis_mode,,0x03f8,ETx_02_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,02,ch_pre_emphasis_width,,0x03f8,ETx_02_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,02,ch_pre_emphasis_strength,,0x03f8,ETx_02_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,02,ch_low_supply_r,,0x03f8,ETx_02_ch_low_supply_r,rw,2,0,1,12,1,
ETx,03,ch_invert_data,,0x03fa,ETx_03_ch_invert_data,rw,2,0,1,0,1,
ETx,03,ch_drive_strength,,0x03fa,ETx_03_ch_drive_strength,rw,2,3,7,1,7,
ETx,03,ch_pre_emphasis_mode,,0x03fa,ETx_03_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,03,ch_pre_emphasis_width,,0x03fa,ETx_03_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,03,ch_pre_emphasis_strength,,0x03fa,ETx_03_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,03,ch_low_supply_r,,0x03fa,ETx_03_ch_low_supply_r,rw,2,0,1,12,1,
ETx,04,ch_invert_data,,0x03fc,ETx_04_ch_invert_data,rw,2,0,1,0,1,
ETx,04,ch_drive_strength,,0x03fc,ETx_04_ch_drive_strength,rw,2,3,7,1,7,
ETx,04,ch_pre_emphasis_mode,,0x03fc,ETx_04_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,04,ch_pre_emphasis_width,,0x03fc,ETx_04_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,04,ch_pre_emphasis_strength,,0x03fc,ETx_04_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,04,ch_low_supply_r,,0x03fc,ETx_04_ch_low_supply_r,rw,2,0,1,12,1,
ETx,05,ch_invert_data,,0x03fe,ETx_05_ch_invert_data,rw,2,0,1,0,1,
ETx,05,ch_drive_strength,,0x03fe,ETx_05_ch_drive_strength,rw,2,3,7,1,7,
ETx,05,ch_pre_emphasis_mode,,0x03fe,ETx_05_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,05,ch_pre_emphasis_width,,0x03fe,ETx_05_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,05,ch_pre_emphasis_strength,,0x03fe,ETx_05_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,05,ch_low_supply_r,,0x03fe,ETx_05_ch_low_supply_r,rw,2,0,1,12,1,
ETx,06,ch_invert_data,,0x0400,ETx_06_ch_invert_data,rw,2,0,1,0,1,
ETx,06,ch_drive_strength,,0x0400,ETx_06_ch_drive_strength,rw,2,3,7,1,7,
ETx,06,ch_pre_emphasis_mode,,0x0400,ETx_06_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,06,ch_pre_emphasis_width,,0x0400,ETx_06_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,06,ch_pre_emphasis_strength,,0x0400,ETx_06_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,06,ch_low_supply_r,,0x0400,ETx_06_ch_low_supply_r,rw,2,0,1,12,1,
ETx,07,ch_invert_data,,0x0402,ETx_07_ch_invert_data,rw,2,0,1,0,1,
ETx,07,ch_drive_strength,,0x0402,ETx_07_ch_drive_strength,rw,2,3,7,1,7,
ETx,07,ch_pre_emphasis_mode,,0x0402,ETx_07_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,07,ch_pre_emphasis_width,,0x0402,ETx_07_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,07,ch_pre_emphasis_strength,,0x0402,ETx_07_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,07,ch_low_supply_r,,0x0402,ETx_07_ch_low_supply_r,rw,2,0,1,12,1,
ETx,08,ch_invert_data,,0x0404,ETx_08_ch_invert_data,rw,2,0,1,0,1,
ETx,08,ch_drive_strength,,0x0404,ETx_08_ch_drive_strength,rw,2,3,7,1,7,
ETx,08,ch_pre_emphasis_mode,,0x0404,ETx_08_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,08,ch_pre_emphasis_width,,0x0404,ETx_08_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,08,ch_pre_emphasis_strength,,0x0404,ETx_08_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,08,ch_low_supply_r,,0x0404,ETx_08_ch_low_supply_r,rw,2,0,1,12,1,
ETx,09,ch_invert_data,,0x0406,ETx_09_ch_invert_data,rw,2,0,1,0,1,
ETx,09,ch_drive_strength,,0x0406,ETx_09_ch_drive_strength,rw,2,3,7,1,7,
ETx,09,ch_pre_emphasis_mode,,0x0406,ETx_09_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,09,ch_pre_emphasis_width,,0x0406,ETx_09_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,09,ch_pre_emphasis_strength,,0x0406,ETx_09_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,09,ch_low_supply_r,,0x0406,ETx_09_ch_low_supply_r,rw,2,0,1,12,1,
ETx,10,ch_invert_data,,0x0408,ETx_10_ch_invert_data,rw,2,0,1,0,1,
ETx,10,ch_drive_strength,,0x0408,ETx_10_ch_drive_strength,rw,2,3,7,1,7,
ETx,10,ch_pre_emphasis_mode,,0x0408,ETx_10_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,10,ch_pre_emphasis_width,,0x0408,ETx_10_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,10,ch_pre_emphasis_strength,,0x0408,ETx_10_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,10,ch_low_supply_r,,0x0408,ETx_10_ch_low_supply_r,rw,2,0,1,12,1,
ETx,11,ch_invert_data,,0x040a,ETx_11_ch_invert_data,rw,2,0,1,0,1,
ETx,11,ch_drive_strength,,0x040a,ETx_11_ch_drive_strength,rw,2,3,7,1,7,
ETx,11,ch_pre_emphasis_mode,,0x040a,ETx_11_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,11,ch_pre_emphasis_width,,0x040a,ETx_11_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,11,ch_pre_emphasis_strength,,0x040a,ETx_11_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,11,ch_low_supply_r,,0x040a,ETx_11_ch_low_supply_r,rw,2,0,1,12,1,
ETx,12,ch_invert_data,,0x040c,ETx_12_ch_invert_data,rw,2,0,1,0,1,
ETx,12,ch_drive_strength,,0x040c,ETx_12_ch_drive_strength,rw,2,3,7,1,7,
ETx,12,ch_pre_emphasis_mode,,0x040c,ETx_12_ch_pre_emphasis_mode,rw,2,0,3,4,3,
ETx,12,ch_pre_emphasis_width,,0x040c,ETx_12_ch_pre_emphasis_width,rw,2,0,7,6,7,
ETx,12,ch_pre_emphasis_strength,,0x040c,ETx_12_ch_pre_emphasis_strength,rw,2,3,7,9,7,
ETx,12,ch_low_supply_r,,0x040c,ETx_12_ch_low_supply_r,rw,2,0,1,12,1,
ETx,Global,tmr_err_cnt_etx,,0x040e,ETx_tmr_err_cnt_etx,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
EprxGrpTop,Global,dll_current_set,,0x03a3,EprxGrpTop_dll_current_set,rw,3,1,3,0,3,Current for the DLL charge pump (0:1uA; 1:2uA; 2:4uA; 3:8uA; default: 1).
EprxGrpTop,Global,dll_coarse_lock_detection,,0x03a3,EprxGrpTop_dll_coarse_lock_detection,rw,3,1,1,2,1,Use coarse detector for the DLL lock condition (default: 1)
EprxGrpTop,Global,data_gating_enable,,0x03a3,EprxGrpTop_data_gating_enable,rw,3,1,1,3,1,Enable data gating [1: enabled; 0: disabled]. When the data gating is enabled the ePortRx group consumes less power. This is a recommended mode of operation.
EprxGrpTop,Global,track_mode,,0x03a3,EprxGrpTop_track_mode,rw,3,1,3,4,3,Sets the phase tracking mode for group (0: fixed phase; 1: Initial training; 2: Continuous phase tracking; 3: Continuous phase tracking with initial phase) (default: 1)
EprxGrpTop,Global,dll_lock_threshold,,0x03a3,EprxGrpTop_dll_lock_threshold,rw,3,5,7,6,7,Sets the lock threshold value of the instant lock low pass filter for ePortRx DLL's. The number of 40 MHz clock cycles is set to 2^{7-dllLockThreshold} (default: 5)
EprxGrpTop,Global,dll_re_lock_threshold,,0x03a3,EprxGrpTop_dll_re_lock_threshold,rw,3,5,7,9,7,Sets the relock threshold value of the instant lock low pass filter for ePortRx DLL's. The number of 40 MHz clock cycles is set to 2^{7-dllReLockThreshold} (default: 5)
EprxGrpTop,Global,dll_un_lock_threshold,,0x03a3,EprxGrpTop_dll_un_lock_threshold,rw,3,5,7,12,7,Sets the unlock threshold value of the instant lock low pass filter for ePortRx DLL's. The number of 40 MHz clock cycles is set to 2^{7-dllUnLockThreshold} (default: 5)
EprxGrpTop,Global,dll_confirm_count_select,,0x03a3,EprxGrpTop_dll_confirm_count_select,rw,3,2,3,15,3,Number of clock cycles (in the 40 MHz clock domain) to confirm locked state (0:1 cycle; 1: 4 cycles; 2: 16 cycles; 3: 31 cycles; default: 2)
EprxGrpTop,Global,dll_init_sm_force_clock_enable,,0x03a3,EprxGrpTop_dll_init_sm_force_clock_enable,rw,3,0,1,17,1,Force clock of ePortRx DLL state machine to be always enabled (if 1: disables clock gating) [1: enable; 0: disabled].
EprxGrpTop,Global,enable_re_init,,0x03a3,EprxGrpTop_enable_re_init,rw,3,0,1,18,1,Enables the re-initialization of an ePortRxGroup when the phase-aligner state machine finds the phase-selection to be out of range [1: enable; 0: disable re-initialization].
EprxGrpTop,Global,tmr_err_cnt_eprxgrp_top,,0x03a6,EprxGrpTop_tmr_err_cnt_eprxgrp_top,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
ErrTop,Global,clr_on_read_top,,0x039a,ErrTop_clr_on_read_top,rw,1,0,1,0,1,Clear errors for top-level error monitoring (0=do not clear; 1=active reset). Even if the individual ChErr_ err_dat is cleared; the error bit will stay high until cleared with this register.
ErrTop,Global,wren_err_top,,0x039a,ErrTop_wren_err_top,rw,1,0,1,1,1,Enables write into err_dat_top register [1: enable write; 0: disable write].
ErrTop,Global,wren_msk_top,,0x039a,ErrTop_wren_msk_top,rw,1,0,1,2,1,Enables setting the mask for the err_data_top register [1: enable mask; 0: disable mask].
ErrTop,Global,wr_data_top,,0x039b,ErrTop_wr_data_top,rw,2,0,4095,0,4095,Value to be written into either error mask or error status registers. For example to set the mask of err_dat_top: write into wr_data_top and then set wren_msk_top to (1->0). For masks: (0: error bit will be masked or ignored; 1: error will not be masked and will be used in the last bit of err_dat_top). For error status written for debugging purposes: write the error bits into wr_data_top and then set wren_err_top to (1->0).
ErrTop,Global,err_wr_data,,0x039d,ErrTop_err_wr_data,rw,1,0,63,0,63,Value to be written into ChErr_*msk registers.
ErrTop,Global,msk_dat_top,,0x039e,ErrTop_msk_dat_top,ro,2,0,4095,0,4095,Reads the mask for the err_dat error signals.
ErrTop,Global,err_dat_top,,0x03a0,ErrTop_err_dat_top,ro,2,0,4095,0,4095,The ChErr__err_dat error signals (bits num_CH:0). The last bit contains the common aligner error status (OR of all ChErr__err_dat signals). The errors are latched such that even if the individual ChErr signals get cleared; the corresponding bit in err_dat_top remains uncleared.
ErrTop,Global,err_out_top,,0x03a0,ErrTop_err_out_top,ro,2,0,1,12,1,Reads the OR of all bits in err_dat_top.
ErrTop,Global,tmr_err_cnt_err_top,,0x03a2,ErrTop_tmr_err_cnt_err_top,ro,1,0,255,0,255,
FCtrl,Global,spare_fcmd_count,00,0x03b9,FCtrl_spare_fcmd_count_00,ro,1,0,255,0,255,8-bit wrap-around counter of observed SPARE_0 fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,spare_fcmd_count,01,0x03ba,FCtrl_spare_fcmd_count_01,ro,1,0,255,0,255,8-bit wrap-around counter of observed SPARE_1 fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,spare_fcmd_count,02,0x03bb,FCtrl_spare_fcmd_count_02,ro,1,0,255,0,255,8-bit wrap-around counter of observed SPARE_2 fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,spare_fcmd_count,03,0x03bc,FCtrl_spare_fcmd_count_03,ro,1,0,255,0,255,8-bit wrap-around counter of observed SPARE_3 fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,spare_fcmd_count,04,0x03bd,FCtrl_spare_fcmd_count_04,ro,1,0,255,0,255,8-bit wrap-around counter of observed SPARE_4 fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,spare_fcmd_count,05,0x03be,FCtrl_spare_fcmd_count_05,ro,1,0,255,0,255,8-bit wrap-around counter of observed SPARE_5 fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,spare_fcmd_count,06,0x03bf,FCtrl_spare_fcmd_count_06,ro,1,0,255,0,255,8-bit wrap-around counter of observed SPARE_6 fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,spare_fcmd_count,07,0x03c0,FCtrl_spare_fcmd_count_07,ro,1,0,255,0,255,8-bit wrap-around counter of observed SPARE_7 fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,edge_sel_t1,,0x03a7,FCtrl_edge_sel_t1,rw,1,1,1,0,1,Fast command clock edge sampling selection. Data input is sampled on the fast command clock rising (==1) or falling (==0) edge.
FCtrl,Global,pre_l1a_offset,,0x03a7,FCtrl_pre_l1a_offset,rw,1,0,3,1,3,Number of BC between PRE L1A and corresponding L1A. PreL1AOffset==2'b00 disables the feature.
FCtrl,Global,invert_command_rx,,0x03a7,FCtrl_invert_command_rx,rw,1,0,1,3,1,Fast command data polarity. Data is considered active-high (==1) or active-low (==0).
FCtrl,Global,capture_fcmd_ctrl,,0x03a8,FCtrl_capture_fcmd_ctrl,rw,3,0,4194303,0,4194303,Bitwise assignment of which fast command signals will trigger a status capture signal [0: BCR; 1: OCR; 2: L1A; 3: NZS; 4: CalPulseInt; 5: CalPulseExt; 6: EBR; 7: ECR; 8: LINK_RESET_ROC_T; 9: LINK_RESET_ROC_D; 10: LINK_RESET_ECON_T; 11: LINK_RESET_ECON_D; 12: SPARE_0; 13: SPARE_1; 14: SPARE_2; 15: SPARE_3; 16: SPARE_4; 17: SPARE_5; 18: SPARE_6; 19: SPARE_7; 20: UNASSIGNED; 21: fc_error]
FCtrl,Global,command_rx_inverted,,0x03ab,FCtrl_command_rx_inverted,ro,1,0,1,0,1,Asserted if the fast command data is inverted. Only samples IDLE words.
FCtrl,Global,locked,,0x03ab,FCtrl_locked,ro,1,0,1,1,1,Fast command data stream is locked. Instantaneous indicator.
FCtrl,Global,lock_count,,0x03ac,FCtrl_lock_count,ro,1,0,255,0,255,Running count of number of times the phase lock is successful.
FCtrl,Global,bcr_fcmd_count,,0x03ad,FCtrl_bcr_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed BCR fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,ocr_fcmd_count,,0x03ae,FCtrl_ocr_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed OCR fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,l1a_fcmd_count,,0x03af,FCtrl_l1a_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed L1A fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,nzs_fcmd_count,,0x03b0,FCtrl_nzs_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed NZS fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,cal_pulse_int_fcmd_count,,0x03b1,FCtrl_cal_pulse_int_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed CALPULSE_INT fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,cal_pulse_ext_fcmd_count,,0x03b2,FCtrl_cal_pulse_ext_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed CALPULSE_EXT fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,ebr_fcmd_count,,0x03b3,FCtrl_ebr_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed EBR fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,ecr_fcmd_count,,0x03b4,FCtrl_ecr_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed ECR fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,link_reset_roc_t_fcmd_count,,0x03b5,FCtrl_link_reset_roc_t_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed LINK_RESET_ROC_T fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,link_reset_roc_d_fcmd_count,,0x03b6,FCtrl_link_reset_roc_d_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed LINK_RESET_ROC_D fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,link_reset_econ_t_fcmd_count,,0x03b7,FCtrl_link_reset_econ_t_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed LINK_RESET_ECON_T fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,link_reset_econ_d_fcmd_count,,0x03b8,FCtrl_link_reset_econ_d_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed LINK_RESET_ECON_D fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,unassigned_fcmd_count,,0x03c1,FCtrl_unassigned_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around counter of observed UNASSIGNED fast commands. Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,fc_error_fcmd_count,,0x03c2,FCtrl_fc_error_fcmd_count,ro,1,0,255,0,255,8-bit wrap-around count of number of times the decoded command is not valid.  Counter sampled by Strobes_2_Status_Capture (or status capture fast command). Reset by Strobes_0_Status_Clear (as well as hard or soft reset or chipsync).
FCtrl,Global,tmr_err_cnt_fast_ctrl_decoder,,0x03c3,FCtrl_tmr_err_cnt_fast_ctrl_decoder,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
FormatterBuffer,Global,buffer_status,00,0x0f21,FormatterBuffer_buffer_status_00,rw,1,32,255,0,255,8-bit output buffer memory address threshold for Buffer status == 0
FormatterBuffer,Global,align_serializer,00,0x0f29,FormatterBuffer_align_serializer_00,rw,3,0,63,0,63,6-bit programmable bit-shift at 1.28 GHz for serializer[0]
FormatterBuffer,Global,buffer_status,01,0x0f22,FormatterBuffer_buffer_status_01,rw,1,64,255,0,255,8-bit output buffer memory address threshold for Buffer status == 1 (any value below Buffer_Status_0 will results in Buffer_Status_0 being used)
FormatterBuffer,Global,align_serializer,01,0x0f29,FormatterBuffer_align_serializer_01,rw,3,0,63,6,63,6-bit programmable bit-shift at 1.28 GHz for serializer[1]
FormatterBuffer,Global,ob_bist_result_test,01,0x0f35,FormatterBuffer_ob_bist_result_test_01,ro,3,0,4095,0,4095,12-bits (one per memory) BIST test results for address test
FormatterBuffer,Global,buffer_status,02,0x0f23,FormatterBuffer_buffer_status_02,rw,1,96,255,0,255,8-bit output buffer memory address threshold for Buffer status == 2 (any value below Buffer_Status_1 will results in Buffer_Status_1 being used)
FormatterBuffer,Global,align_serializer,02,0x0f29,FormatterBuffer_align_serializer_02,rw,3,0,63,12,63,6-bit programmable bit-shift at 1.28 GHz for serializer[2]
FormatterBuffer,Global,ob_bist_result_test,02,0x0f35,FormatterBuffer_ob_bist_result_test_02,ro,3,0,4095,12,4095,12-bits (one per memory) BIST test results for 5A test
FormatterBuffer,Global,buffer_status,03,0x0f24,FormatterBuffer_buffer_status_03,rw,1,128,255,0,255,8-bit output buffer memory address threshold for Buffer status == 3 (any value below Buffer_Status_2 will results in Buffer_Status_2 being used)
FormatterBuffer,Global,align_serializer,03,0x0f29,FormatterBuffer_align_serializer_03,rw,3,0,63,18,63,6-bit programmable bit-shift at 1.28 GHz for serializer[3]
FormatterBuffer,Global,ob_bist_result_test,03,0x0f38,FormatterBuffer_ob_bist_result_test_03,ro,3,0,4095,0,4095,12-bits (one per memory) BIST test results for A5 test
FormatterBuffer,Global,buffer_status,04,0x0f25,FormatterBuffer_buffer_status_04,rw,1,160,255,0,255,8-bit output buffer memory address threshold for Buffer status == 4 (any value below Buffer_Status_3 will results in Buffer_Status_3 being used)
FormatterBuffer,Global,align_serializer,04,0x0f2c,FormatterBuffer_align_serializer_04,rw,7,0,63,0,63,6-bit programmable bit-shift at 1.28 GHz for serializer[4]
FormatterBuffer,Global,ob_bist_result_test,04,0x0f38,FormatterBuffer_ob_bist_result_test_04,ro,3,0,4095,12,4095,12-bits (one per memory) BIST test results for 00 test
FormatterBuffer,Global,buffer_status,05,0x0f26,FormatterBuffer_buffer_status_05,rw,1,192,255,0,255,8-bit output buffer memory address threshold for Buffer status == 5 (any value below Buffer_Status_4 will results in Buffer_Status_4 being used)
FormatterBuffer,Global,align_serializer,05,0x0f2c,FormatterBuffer_align_serializer_05,rw,7,0,63,6,63,6-bit programmable bit-shift at 1.28 GHz for serializer[5]
FormatterBuffer,Global,buffer_status,06,0x0f27,FormatterBuffer_buffer_status_06,rw,1,224,255,0,255,8-bit output buffer truncation assertion threshold and memory address threshold for Buffer status == 6 ( as buffer status any value below Buffer_Status_5 will results in Buffer_Status_5 being used - as truncation threshold any value above OB_MIN_WORD_N project constant will results in OB_MIN_WORD_N will be used )
FormatterBuffer,Global,errin_mask,,0x0f20,FormatterBuffer_errin_mask,rw,1,0,255,0,255,8-bit mask for ERRIN: 7 econt - 6:0 roc
FormatterBuffer,Global,buffer_status_truncate_threshold_low,,0x0f28,FormatterBuffer_buffer_status_truncate_threshold_low,rw,1,128,255,0,255,8-bit output buffer memory address truncation de-assertion threshold. This value should be either equal to Buffer_Status_6 (no truncation hysteresis) or smaller than Buffer_Status_6-41 (truncation hysteresis)
FormatterBuffer,Global,link_reset_pattern,,0x0f2c,FormatterBuffer_link_reset_pattern,rw,7,290,2047,12,2047,11-bits programmable pattern used during Link_Reset alignment
FormatterBuffer,Global,idle_pattern,,0x0f2c,FormatterBuffer_idle_pattern,rw,7,5592405,16777215,23,16777215,24-bits programmable idle for the output packet
FormatterBuffer,Global,header_marker,,0x0f2c,FormatterBuffer_header_marker,rw,7,486,511,47,511,9-bits programmable header for the output packet
FormatterBuffer,Global,active_etxs,,0x0f33,FormatterBuffer_active_etxs,rw,1,63,63,0,63,6-bits active-high enables for serializers
FormatterBuffer,Global,prbs_on,,0x0f33,FormatterBuffer_prbs_on,rw,1,0,1,6,1,1-bit active-high enable for PRBS mode
FormatterBuffer,Global,errin_roc_error,,0x0f34,FormatterBuffer_errin_roc_error,ro,1,0,127,0,127,7-bit read-only containing the sampled value of roc error input
FormatterBuffer,Global,errin_econt_error,,0x0f34,FormatterBuffer_errin_econt_error,ro,1,0,1,7,1,1-bit read-only containing the sampled value of econt error input
FormatterBuffer,Global,error_count_format,,0x0f3b,FormatterBuffer_error_count_format,ro,1,0,255,0,255,Number of times any of the 12 erxs has a wrong code in byte 0. 8-bit counter. Saturating behaviour. Reset with WO_RocDaqCtrl_ALL.Strobes_0_Clear_Status
FormatterBuffer,Global,error_count_hamming,,0x0f3c,FormatterBuffer_error_count_hamming,ro,1,0,255,0,255,Number of times any of the 12 erxs has Hamming double bit errors in byte 0. 8-bit counter. Saturating behaviour. Reset with WO_RocDaqCtrl_ALL.Strobes_0_Clear_Status
FormatterBuffer,Global,error_count_pass_thru,,0x0f3d,FormatterBuffer_error_count_pass_thru,ro,1,0,255,0,255,Number of times any of the 12 erxs has a code not corresponding to passthrough code in byte 0. Only active if the chips is in passthrough mode. 8-bit counter. Saturating behaviour. Reset with WO_RocDaqCtrl_ALL.Strobes_0_Clear_Status
FormatterBuffer,Global,tmr_err_cnt_formatter_buffer,,0x0f3e,FormatterBuffer_tmr_err_cnt_formatter_buffer,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
Misc,Global,rw_err_clr,00,0x0f3f,Misc_rw_err_clr_00,rw,1,0,1,0,1,
Misc,Global,ro,00,0x0f40,Misc_ro_00,ro,1,0,255,0,255,RESERVED (not used)
Misc,Global,wbmaster_err_wb_adr_cnt,,0x0f41,Misc_wbmaster_err_wb_adr_cnt,ro,1,0,255,0,255,Counter for the number of access to unmapped wishbone registers
Misc_TMRErrCnt,Global,tmr_err_cnt_misc,,0x0f42,Misc_TMRErrCnt_tmr_err_cnt_misc,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
PingPongSRAM,Global,sram_bist_result_test,01,0x0492,PingPongSRAM_sram_bist_result_test_01,ro,3,0,4095,0,4095,12-bit (one for each pingPong SRAM bank) indicating which passed (=1) or failed (=0) BIST Test1 (Data=Addr)
PingPongSRAM,Global,status_interface,01,0x049b,PingPongSRAM_status_interface_01,ro,2,0,65535,0,65535,
PingPongSRAM,Global,sram_bist_result_test,02,0x0492,PingPongSRAM_sram_bist_result_test_02,ro,3,0,4095,12,4095,12-bit (one for each pingPong SRAM bank) indicating which passed (=1) or failed (=0) BIST Test2 (Data=5A)
PingPongSRAM,Global,status_interface,02,0x049d,PingPongSRAM_status_interface_02,ro,2,0,65535,0,65535,
PingPongSRAM,Global,sram_bist_result_test,03,0x0495,PingPongSRAM_sram_bist_result_test_03,ro,3,0,4095,0,4095,12-bit (one for each pingPong SRAM bank) indicating which passed (=1) or failed (=0) BIST Test2 (Data=A5)
PingPongSRAM,Global,status_interface,03,0x049f,PingPongSRAM_status_interface_03,ro,5,0,1099511627775,0,1099511627775,
PingPongSRAM,Global,sram_bist_result_test,04,0x0495,PingPongSRAM_sram_bist_result_test_04,ro,3,0,4095,12,4095,12-bit (one for each pingPong SRAM bank) indicating which passed (=1) or failed (=0) BIST Test2 (Data=00)
PingPongSRAM,Global,interface_select,,0x0491,PingPongSRAM_interface_select,rw,1,0,31,0,31,
PingPongSRAM,Global,status_pp_state,,0x0498,PingPongSRAM_status_pp_state,ro,1,0,3,0,3,
PingPongSRAM,Global,status_read_state,,0x0498,PingPongSRAM_status_read_state,ro,1,0,63,2,63,
PingPongSRAM,Global,status_data_available,,0x0499,PingPongSRAM_status_data_available,ro,2,0,1,0,1,
PingPongSRAM,Global,status_empty_h_available,,0x0499,PingPongSRAM_status_empty_h_available,ro,2,0,1,1,1,
PingPongSRAM,Global,status_pp_finished,,0x0499,PingPongSRAM_status_pp_finished,ro,2,0,1,2,1,
PingPongSRAM,Global,status_start_readout,,0x0499,PingPongSRAM_status_start_readout,ro,2,0,1,3,1,
PingPongSRAM,Global,status_pp_flush,,0x0499,PingPongSRAM_status_pp_flush,ro,2,0,1,4,1,
PingPongSRAM,Global,status_bad_pp_read_state,,0x0499,PingPongSRAM_status_bad_pp_read_state,ro,2,0,1,5,1,
PingPongSRAM,Global,status_empty_h_fifo_read,,0x0499,PingPongSRAM_status_empty_h_fifo_read,ro,2,0,1,6,1,
PingPongSRAM,Global,status_pong_rw,,0x0499,PingPongSRAM_status_pong_rw,ro,2,0,3,7,3,
PingPongSRAM,Global,status_empty_h_fifo_full,,0x0499,PingPongSRAM_status_empty_h_fifo_full,ro,2,0,1,9,1,
PingPongSRAM,Global,status_empty_h_fifo_count,,0x0499,PingPongSRAM_status_empty_h_fifo_count,ro,2,0,7,10,7,
PingPongSRAM,Global,tmr_err_cnt_bist_ctrl,,0x04a4,PingPongSRAM_tmr_err_cnt_bist_ctrl,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
RocDaqCtrl,Global,strobes_status_clear,00,0x040f,RocDaqCtrl_strobes_status_clear_00,wo,1,0,1,0,1,
RocDaqCtrl,Global,hdr_count_x,00,0x0420,RocDaqCtrl_hdr_count_x_00,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,00,0x0438,RocDaqCtrl_confidence_x_00,ro,1,0,255,0,255,
RocDaqCtrl,Global,strobes_start_ping_pong_bist,01,0x040f,RocDaqCtrl_strobes_start_ping_pong_bist_01,wo,1,0,1,1,1,
RocDaqCtrl,Global,hdr_count_x,01,0x0422,RocDaqCtrl_hdr_count_x_01,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,01,0x0439,RocDaqCtrl_confidence_x_01,ro,1,0,255,0,255,
RocDaqCtrl,Global,strobes_status_capture,02,0x040f,RocDaqCtrl_strobes_status_capture_02,wo,1,0,1,2,1,
RocDaqCtrl,Global,hdr_count_x,02,0x0424,RocDaqCtrl_hdr_count_x_02,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,02,0x043a,RocDaqCtrl_confidence_x_02,ro,1,0,255,0,255,
RocDaqCtrl,Global,strobes_start_ob_bist,03,0x040f,RocDaqCtrl_strobes_start_ob_bist_03,wo,1,0,1,3,1,
RocDaqCtrl,Global,hdr_count_x,03,0x0426,RocDaqCtrl_hdr_count_x_03,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,03,0x043b,RocDaqCtrl_confidence_x_03,ro,1,0,255,0,255,
RocDaqCtrl,Global,hdr_count_x,04,0x0428,RocDaqCtrl_hdr_count_x_04,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,04,0x043c,RocDaqCtrl_confidence_x_04,ro,1,0,255,0,255,
RocDaqCtrl,Global,hdr_count_x,05,0x042a,RocDaqCtrl_hdr_count_x_05,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,05,0x043d,RocDaqCtrl_confidence_x_05,ro,1,0,255,0,255,
RocDaqCtrl,Global,hdr_count_x,06,0x042c,RocDaqCtrl_hdr_count_x_06,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,06,0x043e,RocDaqCtrl_confidence_x_06,ro,1,0,255,0,255,
RocDaqCtrl,Global,hdr_count_x,07,0x042e,RocDaqCtrl_hdr_count_x_07,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,07,0x043f,RocDaqCtrl_confidence_x_07,ro,1,0,255,0,255,
RocDaqCtrl,Global,hdr_count_x,08,0x0430,RocDaqCtrl_hdr_count_x_08,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,08,0x0440,RocDaqCtrl_confidence_x_08,ro,1,0,255,0,255,
RocDaqCtrl,Global,hdr_count_x,09,0x0432,RocDaqCtrl_hdr_count_x_09,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,09,0x0441,RocDaqCtrl_confidence_x_09,ro,1,0,255,0,255,
RocDaqCtrl,Global,hdr_count_x,10,0x0434,RocDaqCtrl_hdr_count_x_10,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,10,0x0442,RocDaqCtrl_confidence_x_10,ro,1,0,255,0,255,
RocDaqCtrl,Global,hdr_count_x,11,0x0436,RocDaqCtrl_hdr_count_x_11,ro,2,0,65535,0,65535,
RocDaqCtrl,Global,confidence_x,11,0x0443,RocDaqCtrl_confidence_x_11,ro,1,0,255,0,255,
RocDaqCtrl,Global,bad_word_threshold,,0x0410,RocDaqCtrl_bad_word_threshold,rw,1,20,255,0,255,The number of non-Idle and non-Header words that will be tolerated during a single home state. Above this number and a missed packet error fires.
RocDaqCtrl,Global,bcr_bucket_default,,0x0411,RocDaqCtrl_bcr_bucket_default,rw,2,3514,4095,0,4095,The Bunch Counter resets to a number upon receipt of a BCR Fast Command.  This is the number the Bunch Counter resets to.
RocDaqCtrl,Global,simple_mode,,0x0411,RocDaqCtrl_simple_mode,rw,2,1,1,12,1,1-bit active high 1=Simple Mode 0=Predictive Mode.
RocDaqCtrl,Global,pass_thru_mode,,0x0411,RocDaqCtrl_pass_thru_mode,rw,2,0,1,13,1,1-bit active high 1=Pass-Thru Mode 0=Standard Mode.
RocDaqCtrl,Global,l1a_to_hgcroc_out,,0x0413,RocDaqCtrl_l1a_to_hgcroc_out,rw,2,7,31,0,31,Expected delay (in clock ticks) from the reception of an isolated L1A to the output of its Header by the HGCROC.
RocDaqCtrl,Global,econ_buffer_delay,,0x0413,RocDaqCtrl_econ_buffer_delay,rw,2,7,31,5,31,Expected delay (in clock ticks) from the capture of an HGCROC Header to its output (to the ECON Core) by the Aligner.
RocDaqCtrl,Global,l1a_offset,,0x0413,RocDaqCtrl_l1a_offset,rw,2,0,15,10,15,
RocDaqCtrl,Global,match_threshold,,0x0415,RocDaqCtrl_match_threshold,rw,2,0,15,0,15,Sets the number of erxs that must agree on a Header Word for that word to be considered a Header Word. Should be < 12.
RocDaqCtrl,Global,active_erxs,,0x0415,RocDaqCtrl_active_erxs,rw,2,4095,4095,4,4095,Each bit indicates if the corresponding eLink is active (1) or inactive (0).  This could be made the same as active_eLinks used in eLink Processor Header and elsewhere.
RocDaqCtrl,Global,sync_body,,0x0417,RocDaqCtrl_sync_body,rw,4,178956970,268435455,0,268435455,The value of the body (final 28 bits) of any sync word regardless of its bucket number.
RocDaqCtrl,Global,first_sync_header,,0x0417,RocDaqCtrl_first_sync_header,rw,4,9,15,28,15,The value of the first 4 bits of a sync word if the sync word happens to fall on the first bucket of an orbit.
RocDaqCtrl,Global,sync_header,,0x041b,RocDaqCtrl_sync_header,rw,1,10,15,0,15,The value of the first 4 bits of a sync word if the sync word happens on any other bucket.
RocDaqCtrl,Global,hgcroc_hdr_marker,,0x041b,RocDaqCtrl_hgcroc_hdr_marker,rw,1,15,15,4,15,4-bit header marker transmitted by HGCROC at beginning of packet (programmable for backwards compatibility in HGCROCv3). 4h'5 for HGCROC3 and 4h'F for HGCROC3b.
RocDaqCtrl,Global,ebr_timeout,,0x041c,RocDaqCtrl_ebr_timeout,rw,2,64,65535,0,65535,After an EBR the ROC_DAQ_Controller ignores HGCROC packets with a normal TRL marker in the header while it looks for a reset TRL marker. The timeout ends this operation. Value in BC; if 0 timeout is disabled (infinite).
RocDaqCtrl,Global,prediction_confidence,,0x041e,RocDaqCtrl_prediction_confidence,ro,1,0,255,0,255,Increments by 1 to a maximum of 255 every time there is a good prediction.  Decrements by 16 to a minimum of 0 every time there is a bad prediction.  Default of 128.
RocDaqCtrl,Global,prediction_delay_count,,0x041f,RocDaqCtrl_prediction_delay_count,ro,1,0,255,0,255,A count of the delay (in LHC clock ticks) between receiving an L1A and receiving a Header.
RocDaqCtrl,Global,error_flags_bunch_counter,,0x0444,RocDaqCtrl_error_flags_bunch_counter,ro,1,0,1,0,1,Error indicator: bad bunch counter. Cleared by clear_Errors.
RocDaqCtrl,Global,error_flags_unused_state,,0x0444,RocDaqCtrl_error_flags_unused_state,ro,1,0,1,1,1,Error indicator: entered unused state in ROC. Cleared by clear_Errors.
RocDaqCtrl,Global,error_flags_missed_pkt,,0x0444,RocDaqCtrl_error_flags_missed_pkt,ro,1,0,1,2,1,Error indicator: missed a packet. Cleared by clear_Errors.
RocDaqCtrl,Global,error_flags_predictor_fifo_full,,0x0444,RocDaqCtrl_error_flags_predictor_fifo_full,ro,1,0,1,3,1,Error indicator: predictor _fifo_ Full. Cleared by clear_Errors.
RocDaqCtrl,Global,error_flags_l1a_fifo_full,,0x0444,RocDaqCtrl_error_flags_l1a_fifo_full,ro,1,0,1,4,1,
RocDaqCtrl,Global,status_roc_state,,0x0445,RocDaqCtrl_status_roc_state,ro,3,60,63,0,63,
RocDaqCtrl,Global,status_pred_state,,0x0445,RocDaqCtrl_status_pred_state,ro,3,60,63,6,63,
RocDaqCtrl,Global,status_bucket,,0x0445,RocDaqCtrl_status_bucket,ro,3,0,4095,12,4095,
RocDaqCtrl,Global,status_orbit,,0x0448,RocDaqCtrl_status_orbit,ro,7,0,7,0,7,
RocDaqCtrl,Global,status_l1a_fifo_empty,,0x0448,RocDaqCtrl_status_l1a_fifo_empty,ro,7,0,1,3,1,
RocDaqCtrl,Global,status_l1a_fifo_full,,0x0448,RocDaqCtrl_status_l1a_fifo_full,ro,7,0,1,4,1,
RocDaqCtrl,Global,status_l1a_fifo_cnt,,0x0448,RocDaqCtrl_status_l1a_fifo_cnt,ro,7,0,127,5,127,
RocDaqCtrl,Global,status_predict,,0x0448,RocDaqCtrl_status_predict,ro,7,0,1,12,1,
RocDaqCtrl,Global,status_predict_hgcroc,,0x0448,RocDaqCtrl_status_predict_hgcroc,ro,7,0,1,13,1,
RocDaqCtrl,Global,status_fifo_top_bucket,,0x0448,RocDaqCtrl_status_fifo_top_bucket,ro,7,0,4095,14,4095,
RocDaqCtrl,Global,status_fifo_top_orbit,,0x0448,RocDaqCtrl_status_fifo_top_orbit,ro,7,0,7,26,7,
RocDaqCtrl,Global,status_fifo_top_event,,0x0448,RocDaqCtrl_status_fifo_top_event,ro,7,0,63,29,63,
RocDaqCtrl,Global,status_fifo_top_nzs,,0x0448,RocDaqCtrl_status_fifo_top_nzs,ro,7,0,1,35,1,
RocDaqCtrl,Global,status_idle_word_marker,,0x0448,RocDaqCtrl_status_idle_word_marker,ro,7,0,1,36,1,
RocDaqCtrl,Global,status_roc_header_marker,,0x0448,RocDaqCtrl_status_roc_header_marker,ro,7,0,3,37,3,
RocDaqCtrl,Global,status_fcmd,,0x0448,RocDaqCtrl_status_fcmd,ro,7,0,127,39,127,Instantaneous value of the fast command block output (one bit per fast command). Sampled by Strobes_2_Status_Capture (or status capture fast command). 0:EBR_fcmd; 1:ECR_fcmd; 2:OCR_fcmd; 3:BCR_fcmd; 4:LRST_fcmd; 5:L1A_fcmd; 6:NZS_fcmd.
RocDaqCtrl,Global,status_event,,0x0448,RocDaqCtrl_status_event,ro,7,0,63,46,63,Instantaneous value of the event counter. Sampled by Strobes_2_Status_Capture (or status capture fast command).
RocDaqCtrl,Global,tmr_err_cnt_roc_daq_ctrl,,0x044f,RocDaqCtrl_tmr_err_cnt_roc_daq_ctrl,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
Watchdog,Global,limit_erx_ham,00,0x0d73,Watchdog_limit_erx_ham_00,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,00,0x0d81,Watchdog_limit_erx_subp_crc_00,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,00,0x0d8f,Watchdog_limit_erx_subp_ebo_00,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,00,0x0d9d,Watchdog_limit_erx_subp_ht_00,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,01,0x0d74,Watchdog_limit_erx_ham_01,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,01,0x0d82,Watchdog_limit_erx_subp_crc_01,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,01,0x0d90,Watchdog_limit_erx_subp_ebo_01,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,01,0x0d9e,Watchdog_limit_erx_subp_ht_01,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,02,0x0d75,Watchdog_limit_erx_ham_02,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,02,0x0d83,Watchdog_limit_erx_subp_crc_02,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,02,0x0d91,Watchdog_limit_erx_subp_ebo_02,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,02,0x0d9f,Watchdog_limit_erx_subp_ht_02,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,03,0x0d76,Watchdog_limit_erx_ham_03,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,03,0x0d84,Watchdog_limit_erx_subp_crc_03,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,03,0x0d92,Watchdog_limit_erx_subp_ebo_03,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,03,0x0da0,Watchdog_limit_erx_subp_ht_03,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,04,0x0d77,Watchdog_limit_erx_ham_04,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,04,0x0d85,Watchdog_limit_erx_subp_crc_04,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,04,0x0d93,Watchdog_limit_erx_subp_ebo_04,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,04,0x0da1,Watchdog_limit_erx_subp_ht_04,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,05,0x0d78,Watchdog_limit_erx_ham_05,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,05,0x0d86,Watchdog_limit_erx_subp_crc_05,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,05,0x0d94,Watchdog_limit_erx_subp_ebo_05,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,05,0x0da2,Watchdog_limit_erx_subp_ht_05,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,06,0x0d79,Watchdog_limit_erx_ham_06,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,06,0x0d87,Watchdog_limit_erx_subp_crc_06,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,06,0x0d95,Watchdog_limit_erx_subp_ebo_06,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,06,0x0da3,Watchdog_limit_erx_subp_ht_06,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,07,0x0d7a,Watchdog_limit_erx_ham_07,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,07,0x0d88,Watchdog_limit_erx_subp_crc_07,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,07,0x0d96,Watchdog_limit_erx_subp_ebo_07,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,07,0x0da4,Watchdog_limit_erx_subp_ht_07,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,08,0x0d7b,Watchdog_limit_erx_ham_08,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,08,0x0d89,Watchdog_limit_erx_subp_crc_08,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,08,0x0d97,Watchdog_limit_erx_subp_ebo_08,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,08,0x0da5,Watchdog_limit_erx_subp_ht_08,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,09,0x0d7c,Watchdog_limit_erx_ham_09,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,09,0x0d8a,Watchdog_limit_erx_subp_crc_09,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,09,0x0d98,Watchdog_limit_erx_subp_ebo_09,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,09,0x0da6,Watchdog_limit_erx_subp_ht_09,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,10,0x0d7d,Watchdog_limit_erx_ham_10,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,10,0x0d8b,Watchdog_limit_erx_subp_crc_10,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,10,0x0d99,Watchdog_limit_erx_subp_ebo_10,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,10,0x0da7,Watchdog_limit_erx_subp_ht_10,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_ham,11,0x0d7e,Watchdog_limit_erx_ham_11,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_crc,11,0x0d8c,Watchdog_limit_erx_subp_crc_11,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ebo,11,0x0d9a,Watchdog_limit_erx_subp_ebo_11,rw,1,0,255,0,255,
Watchdog,Global,limit_erx_subp_ht,11,0x0da8,Watchdog_limit_erx_subp_ht_11,rw,1,0,255,0,255,
Watchdog,Global,req_clear,,0x0d55,Watchdog_req_clear,wo,1,0,1,0,1,Slow control command to clear reset requests and watchdog histories. Pulsed register.
Watchdog,Global,cap_clear,,0x0d55,Watchdog_cap_clear,wo,1,0,1,1,1,Slow control command to clear shadow snapshot of watchdog events. Pulsed register.
Watchdog,Global,capture,,0x0d55,Watchdog_capture,wo,1,0,1,2,1,Slow control command to capture shadow snapshot of watchdog events. Pulsed register.
Watchdog,Global,rst_req_a,,0x0d56,Watchdog_rst_req_a,rw,8,0,288230376151711743,0,288230376151711743,58-bit vector selecting each watchdog contributing to RstReq_A. Each i-th bit indicates if the i-th watchdog contributes (==1) or not (==0) to the reset request. 0: packet veto; 1: event EBO reconstruction failure (=10) or ambiguous (=11); 2: event header-trailer reconstruction failure (=10) or ambiguous (=11); 3: ECON HGCROC match; 4: event unexpected; 16:5: SPH Hamming for erx 11:0; 28:17: SPH CRC for erx 11:0; 40:29: SPH EBO for erx 11:0; 52:41: SPH header-trailer for erx 11:0; 53: ROCDAQCTRL bad bunch counter value(==0 or >3564); 54: ROCDAQCTRL unused state; 55: ROCDAQCTRL possible lost packet; 56: ROCDAQCTRL predictor _fifo_ full; 57: ROCDAQCTRL L1A _fifo_ full.
Watchdog,Global,rst_req_b,,0x0d5e,Watchdog_rst_req_b,rw,8,0,288230376151711743,0,288230376151711743,58-bit vector selecting each watchdog contributing to RstReq_B. Each i-th bit indicates if the i-th watchdog contributes (==1) or not (==0) to the reset request. 0: packet veto; 1: event EBO reconstruction failure (=10) or ambiguous (=11); 2: event header-trailer reconstruction failure (=10) or ambiguous (=11); 3: ECON HGCROC match; 4: event unexpected; 16:5: SPH Hamming for erx 11:0; 28:17: SPH CRC for erx 11:0; 40:29: SPH EBO for erx 11:0; 52:41: SPH header-trailer for erx 11:0; 53: ROCDAQCTRL bad bunch counter value(==0 or >3564); 54: ROCDAQCTRL unused state; 55: ROCDAQCTRL possible lost packet; 56: ROCDAQCTRL predictor _fifo_ full; 57: ROCDAQCTRL L1A _fifo_ full.
Watchdog,Global,clearing_fcmd_ctrl,,0x0d66,Watchdog_clearing_fcmd_ctrl,rw,1,0,255,0,255,vector of active-high signals indicating which fast commands contribute to the watchdog clear. Each bit controls one fast command (0:BCR; 1:OCR; 2:L1A; 3:NZS; 4:EBR; 5:ECR; 6:LRST; 7:SPARE_0).
Watchdog,Global,limit_packet_veto,,0x0d67,Watchdog_limit_packet_veto,rw,1,0,255,0,255,vector of active-high signals indicating which algorithm will result in an alert for this watchdog. Each bit controls one algorithm (0:any one; 1:two in a row; 2:four in a row; 3:eight in a row; 4:thirty-two in a row; 5:any eight or more in the last thirty-two; 6:any sixteen or more in the last thirty-two; 7:any twenty-four or more in the last thirty-two).
Watchdog,Global,limit_event_unexpected,,0x0d68,Watchdog_limit_event_unexpected,rw,1,0,255,0,255,vector of active-high signals indicating which algorithm will result in an alert for this watchdog. Each bit controls one algorithm (0:any one; 1:two in a row; 2:four in a row; 3:eight in a row; 4:thirty-two in a row; 5:any eight or more in the last thirty-two; 6:any sixteen or more in the last thirty-two; 7:any twenty-four or more in the last thirty-two).
Watchdog,Global,limit_event_e_h_match,,0x0d69,Watchdog_limit_event_e_h_match,rw,1,0,255,0,255,vector of active-high signals indicating which algorithm will result in an alert for this watchdog. Each bit controls one algorithm (0:any one; 1:two in a row; 2:four in a row; 3:eight in a row; 4:thirty-two in a row; 5:any eight or more in the last thirty-two; 6:any sixteen or more in the last thirty-two; 7:any twenty-four or more in the last thirty-two).
Watchdog,Global,limit_event_ht_recon,,0x0d6a,Watchdog_limit_event_ht_recon,rw,1,0,255,0,255,vector of active-high signals indicating which algorithm will result in an alert for this watchdog. Each bit controls one algorithm (0:any one; 1:two in a row; 2:four in a row; 3:eight in a row; 4:thirty-two in a row; 5:any eight or more in the last thirty-two; 6:any sixteen or more in the last thirty-two; 7:any twenty-four or more in the last thirty-two).
Watchdog,Global,limit_event_ebo_recon,,0x0d6b,Watchdog_limit_event_ebo_recon,rw,1,0,255,0,255,vector of active-high signals indicating which algorithm will result in an alert for this watchdog. Each bit controls one algorithm (0:any one; 1:two in a row; 2:four in a row; 3:eight in a row; 4:thirty-two in a row; 5:any eight or more in the last thirty-two; 6:any sixteen or more in the last thirty-two; 7:any twenty-four or more in the last thirty-two).
Watchdog,Global,enable_packet_veto,,0x0d6c,Watchdog_enable_packet_veto,rw,1,0,1,0,1,1-bit enabling a Packet Veto watchdog alert and reset request [1: enable; 0: disable].
Watchdog,Global,enable_event_unexpected,,0x0d6c,Watchdog_enable_event_unexpected,rw,1,0,1,1,1,1-bit enabling a Unexpected Event watchdog alert and reset request [1: enable; 0: disable].
Watchdog,Global,enable_event_e_h_match,,0x0d6c,Watchdog_enable_event_e_h_match,rw,1,0,1,2,1,1-bit enabling a ECON-vs-HGCROC mismatch watchdog alert and reset request [1: enable; 0: disable].
Watchdog,Global,enable_event_ht_recon,,0x0d6c,Watchdog_enable_event_ht_recon,rw,1,0,1,3,1,1-bit enabling a Header-Trailer reconstruction failure watchdog alert and reset request [1: enable; 0: disable].
Watchdog,Global,enable_event_ebo_recon,,0x0d6c,Watchdog_enable_event_ebo_recon,rw,1,0,1,4,1,1-bit enabling a Event-Bunch-Orbit reconstruction failure watchdog alert and reset request [1: enable; 0: disable].
Watchdog,Global,limit_roc_bunch_counter,,0x0d6d,Watchdog_limit_roc_bunch_counter,rw,1,0,255,0,255,
Watchdog,Global,limit_roc_unused_state,,0x0d6e,Watchdog_limit_roc_unused_state,rw,1,0,255,0,255,
Watchdog,Global,limit_roc_missed_pkt,,0x0d6f,Watchdog_limit_roc_missed_pkt,rw,1,0,255,0,255,
Watchdog,Global,limit_roc_predictor_fifo_full,,0x0d70,Watchdog_limit_roc_predictor_fifo_full,rw,1,0,255,0,255,
Watchdog,Global,limit_roc_l1a_fifo_full,,0x0d71,Watchdog_limit_roc_l1a_fifo_full,rw,1,0,255,0,255,
Watchdog,Global,enable_roc_bunch_counter,,0x0d72,Watchdog_enable_roc_bunch_counter,rw,1,0,1,0,1,
Watchdog,Global,enable_roc_unused_state,,0x0d72,Watchdog_enable_roc_unused_state,rw,1,0,1,1,1,
Watchdog,Global,enable_roc_missed_pkt,,0x0d72,Watchdog_enable_roc_missed_pkt,rw,1,0,1,2,1,
Watchdog,Global,enable_roc_predictor_fifo_full,,0x0d72,Watchdog_enable_roc_predictor_fifo_full,rw,1,0,1,3,1,
Watchdog,Global,enable_roc_l1a_fifo_full,,0x0d72,Watchdog_enable_roc_l1a_fifo_full,rw,1,0,1,4,1,
Watchdog,Global,enable_erx_ham,,0x0d7f,Watchdog_enable_erx_ham,rw,2,0,4095,0,4095,1-bit enabling a Sub-packet Hamming watchdog alert and reset request
Watchdog,Global,enable_erx_subp_crc,,0x0d8d,Watchdog_enable_erx_subp_crc,rw,2,0,4095,0,4095,1-bit enabling a Sub-packet CRC matching watchdog alert and reset request
Watchdog,Global,enable_erx_subp_ebo,,0x0d9b,Watchdog_enable_erx_subp_ebo,rw,2,0,4095,0,4095,1-bit enabling a Sub-packet EBO matching watchdog alert and reset request
Watchdog,Global,enable_erx_subp_ht,,0x0da9,Watchdog_enable_erx_subp_ht,rw,2,0,4095,0,4095,1-bit enabling a Sub-packet HT matching watchdog alert and reset request
WatchdogHam,Global,count_erx_ham,00,0x0dbb,WatchdogHam_count_erx_ham_00,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,00,0x0dd3,WatchdogHam_history_erx_ham_00,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,01,0x0dbd,WatchdogHam_count_erx_ham_01,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,01,0x0dd7,WatchdogHam_history_erx_ham_01,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,02,0x0dbf,WatchdogHam_count_erx_ham_02,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,02,0x0ddb,WatchdogHam_history_erx_ham_02,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,03,0x0dc1,WatchdogHam_count_erx_ham_03,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,03,0x0ddf,WatchdogHam_history_erx_ham_03,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,04,0x0dc3,WatchdogHam_count_erx_ham_04,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,04,0x0de3,WatchdogHam_history_erx_ham_04,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,05,0x0dc5,WatchdogHam_count_erx_ham_05,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,05,0x0de7,WatchdogHam_history_erx_ham_05,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,06,0x0dc7,WatchdogHam_count_erx_ham_06,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,06,0x0deb,WatchdogHam_history_erx_ham_06,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,07,0x0dc9,WatchdogHam_count_erx_ham_07,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,07,0x0def,WatchdogHam_history_erx_ham_07,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,08,0x0dcb,WatchdogHam_count_erx_ham_08,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,08,0x0df3,WatchdogHam_history_erx_ham_08,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,09,0x0dcd,WatchdogHam_count_erx_ham_09,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,09,0x0df7,WatchdogHam_history_erx_ham_09,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,10,0x0dcf,WatchdogHam_count_erx_ham_10,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,10,0x0dfb,WatchdogHam_history_erx_ham_10,ro,4,0,4294967295,0,4294967295,
WatchdogHam,Global,count_erx_ham,11,0x0dd1,WatchdogHam_count_erx_ham_11,ro,2,0,65535,0,65535,
WatchdogHam,Global,history_erx_ham,11,0x0dff,WatchdogHam_history_erx_ham_11,ro,4,0,4294967295,0,4294967295,
WatchdogSP,Global,erx_status,00,0x0dab,WatchdogSP_erx_status_00,ro,1,0,15,0,15,
WatchdogSP,Global,erx_status,01,0x0dab,WatchdogSP_erx_status_01,ro,1,0,15,4,15,
WatchdogSP,Global,erx_status,02,0x0dac,WatchdogSP_erx_status_02,ro,1,0,15,0,15,
WatchdogSP,Global,erx_status,03,0x0dac,WatchdogSP_erx_status_03,ro,1,0,15,4,15,
WatchdogSP,Global,erx_status,04,0x0dad,WatchdogSP_erx_status_04,ro,1,0,15,0,15,
WatchdogSP,Global,erx_status,05,0x0dad,WatchdogSP_erx_status_05,ro,1,0,15,4,15,
WatchdogSP,Global,erx_status,06,0x0dae,WatchdogSP_erx_status_06,ro,1,0,15,0,15,
WatchdogSP,Global,erx_status,07,0x0dae,WatchdogSP_erx_status_07,ro,1,0,15,4,15,
WatchdogSP,Global,erx_status,08,0x0daf,WatchdogSP_erx_status_08,ro,1,0,15,0,15,
WatchdogSP,Global,erx_status,09,0x0daf,WatchdogSP_erx_status_09,ro,1,0,15,4,15,
WatchdogSP,Global,erx_status,10,0x0db0,WatchdogSP_erx_status_10,ro,1,0,15,0,15,
WatchdogSP,Global,erx_status,11,0x0db0,WatchdogSP_erx_status_11,ro,1,0,15,4,15,
WatchdogSP,Global,event_status,,0x0db1,WatchdogSP_event_status,ro,2,0,31,0,31,(Requires Watchdog_Capture) 5-bit per erx indicating watchdogs for (bit 4)Unexpected/(bit 3)E-H Match/(bit 2)EBO recon/(bit 2)HT recon/(bit 1)Packet Veto
WatchdogSP,Global,roc_daq,,0x0db1,WatchdogSP_roc_daq,ro,2,0,31,5,31,
WatchdogSP,Global,persistent,,0x0db3,WatchdogSP_persistent,ro,8,0,18446744073709551615,0,18446744073709551615,(Requires Watchdog_Capture) 53-bit state of all watchdogs
WatchdogSubPCRC,00,count_erx_subp_crc,,0x0e03,WatchdogSubPCRC_00_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,00,history_erx_subp_crc,,0x0e1b,WatchdogSubPCRC_00_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,01,count_erx_subp_crc,,0x0e05,WatchdogSubPCRC_01_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,01,history_erx_subp_crc,,0x0e1f,WatchdogSubPCRC_01_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,02,count_erx_subp_crc,,0x0e07,WatchdogSubPCRC_02_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,02,history_erx_subp_crc,,0x0e23,WatchdogSubPCRC_02_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,03,count_erx_subp_crc,,0x0e09,WatchdogSubPCRC_03_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,03,history_erx_subp_crc,,0x0e27,WatchdogSubPCRC_03_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,04,count_erx_subp_crc,,0x0e0b,WatchdogSubPCRC_04_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,04,history_erx_subp_crc,,0x0e2b,WatchdogSubPCRC_04_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,05,count_erx_subp_crc,,0x0e0d,WatchdogSubPCRC_05_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,05,history_erx_subp_crc,,0x0e2f,WatchdogSubPCRC_05_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,06,count_erx_subp_crc,,0x0e0f,WatchdogSubPCRC_06_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,06,history_erx_subp_crc,,0x0e33,WatchdogSubPCRC_06_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,07,count_erx_subp_crc,,0x0e11,WatchdogSubPCRC_07_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,07,history_erx_subp_crc,,0x0e37,WatchdogSubPCRC_07_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,08,count_erx_subp_crc,,0x0e13,WatchdogSubPCRC_08_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,08,history_erx_subp_crc,,0x0e3b,WatchdogSubPCRC_08_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,09,count_erx_subp_crc,,0x0e15,WatchdogSubPCRC_09_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,09,history_erx_subp_crc,,0x0e3f,WatchdogSubPCRC_09_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,10,count_erx_subp_crc,,0x0e17,WatchdogSubPCRC_10_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,10,history_erx_subp_crc,,0x0e43,WatchdogSubPCRC_10_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPCRC,11,count_erx_subp_crc,,0x0e19,WatchdogSubPCRC_11_count_erx_subp_crc,ro,2,0,65535,0,65535,
WatchdogSubPCRC,11,history_erx_subp_crc,,0x0e47,WatchdogSubPCRC_11_history_erx_subp_crc,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,00,count_erx_subp_ebo,,0x0e4b,WatchdogSubPEBO_00_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,00,history_erx_subp_ebo,,0x0e63,WatchdogSubPEBO_00_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,01,count_erx_subp_ebo,,0x0e4d,WatchdogSubPEBO_01_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,01,history_erx_subp_ebo,,0x0e67,WatchdogSubPEBO_01_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,02,count_erx_subp_ebo,,0x0e4f,WatchdogSubPEBO_02_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,02,history_erx_subp_ebo,,0x0e6b,WatchdogSubPEBO_02_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,03,count_erx_subp_ebo,,0x0e51,WatchdogSubPEBO_03_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,03,history_erx_subp_ebo,,0x0e6f,WatchdogSubPEBO_03_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,04,count_erx_subp_ebo,,0x0e53,WatchdogSubPEBO_04_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,04,history_erx_subp_ebo,,0x0e73,WatchdogSubPEBO_04_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,05,count_erx_subp_ebo,,0x0e55,WatchdogSubPEBO_05_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,05,history_erx_subp_ebo,,0x0e77,WatchdogSubPEBO_05_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,06,count_erx_subp_ebo,,0x0e57,WatchdogSubPEBO_06_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,06,history_erx_subp_ebo,,0x0e7b,WatchdogSubPEBO_06_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,07,count_erx_subp_ebo,,0x0e59,WatchdogSubPEBO_07_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,07,history_erx_subp_ebo,,0x0e7f,WatchdogSubPEBO_07_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,08,count_erx_subp_ebo,,0x0e5b,WatchdogSubPEBO_08_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,08,history_erx_subp_ebo,,0x0e83,WatchdogSubPEBO_08_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,09,count_erx_subp_ebo,,0x0e5d,WatchdogSubPEBO_09_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,09,history_erx_subp_ebo,,0x0e87,WatchdogSubPEBO_09_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,10,count_erx_subp_ebo,,0x0e5f,WatchdogSubPEBO_10_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,10,history_erx_subp_ebo,,0x0e8b,WatchdogSubPEBO_10_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPEBO,11,count_erx_subp_ebo,,0x0e61,WatchdogSubPEBO_11_count_erx_subp_ebo,ro,2,0,65535,0,65535,
WatchdogSubPEBO,11,history_erx_subp_ebo,,0x0e8f,WatchdogSubPEBO_11_history_erx_subp_ebo,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,00,count_erx_subp_ht,,0x0e93,WatchdogSubPHT_00_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,00,history_erx_subp_ht,,0x0eab,WatchdogSubPHT_00_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,01,count_erx_subp_ht,,0x0e95,WatchdogSubPHT_01_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,01,history_erx_subp_ht,,0x0eaf,WatchdogSubPHT_01_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,02,count_erx_subp_ht,,0x0e97,WatchdogSubPHT_02_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,02,history_erx_subp_ht,,0x0eb3,WatchdogSubPHT_02_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,03,count_erx_subp_ht,,0x0e99,WatchdogSubPHT_03_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,03,history_erx_subp_ht,,0x0eb7,WatchdogSubPHT_03_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,04,count_erx_subp_ht,,0x0e9b,WatchdogSubPHT_04_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,04,history_erx_subp_ht,,0x0ebb,WatchdogSubPHT_04_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,05,count_erx_subp_ht,,0x0e9d,WatchdogSubPHT_05_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,05,history_erx_subp_ht,,0x0ebf,WatchdogSubPHT_05_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,06,count_erx_subp_ht,,0x0e9f,WatchdogSubPHT_06_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,06,history_erx_subp_ht,,0x0ec3,WatchdogSubPHT_06_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,07,count_erx_subp_ht,,0x0ea1,WatchdogSubPHT_07_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,07,history_erx_subp_ht,,0x0ec7,WatchdogSubPHT_07_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,08,count_erx_subp_ht,,0x0ea3,WatchdogSubPHT_08_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,08,history_erx_subp_ht,,0x0ecb,WatchdogSubPHT_08_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,09,count_erx_subp_ht,,0x0ea5,WatchdogSubPHT_09_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,09,history_erx_subp_ht,,0x0ecf,WatchdogSubPHT_09_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,10,count_erx_subp_ht,,0x0ea7,WatchdogSubPHT_10_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,10,history_erx_subp_ht,,0x0ed3,WatchdogSubPHT_10_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
WatchdogSubPHT,11,count_erx_subp_ht,,0x0ea9,WatchdogSubPHT_11_count_erx_subp_ht,ro,2,0,65535,0,65535,
WatchdogSubPHT,11,history_erx_subp_ht,,0x0ed7,WatchdogSubPHT_11_history_erx_subp_ht,ro,4,0,4294967295,0,4294967295,
Watchdog_Misc,Global,count_packet_veto,,0x0edb,Watchdog_Misc_count_packet_veto,ro,2,0,65535,0,65535,(Requires Watchdog_Capture) count of packets causing Packet Veto watchdogs
Watchdog_Misc,Global,count_event_unexpected,,0x0edd,Watchdog_Misc_count_event_unexpected,ro,2,0,65535,0,65535,(Requires Watchdog_Capture) count of packets causing Unexpected event watchdog
Watchdog_Misc,Global,count_e_h_match,,0x0edf,Watchdog_Misc_count_e_h_match,ro,2,0,65535,0,65535,(Requires Watchdog_Capture) count of packets causing ECON vs HGCROC Mismatch watchdogs
Watchdog_Misc,Global,count_ht_recon,,0x0ee1,Watchdog_Misc_count_ht_recon,ro,2,0,65535,0,65535,(Requires Watchdog_Capture) count of packets causing HT Reconstruction watchdogs
Watchdog_Misc,Global,count_ebo_recon,,0x0ee3,Watchdog_Misc_count_ebo_recon,ro,2,0,65535,0,65535,(Requires Watchdog_Capture) count of packets causing EBO Reconstruction watchdogs
Watchdog_Misc,Global,count_roc_bunch_counter,,0x0ee5,Watchdog_Misc_count_roc_bunch_counter,ro,2,0,65535,0,65535,
Watchdog_Misc,Global,count_roc_unused_state,,0x0ee7,Watchdog_Misc_count_roc_unused_state,ro,2,0,65535,0,65535,
Watchdog_Misc,Global,count_roc_missed_pkt,,0x0ee9,Watchdog_Misc_count_roc_missed_pkt,ro,2,0,65535,0,65535,
Watchdog_Misc,Global,count_roc_predictor_fifo_full,,0x0eeb,Watchdog_Misc_count_roc_predictor_fifo_full,ro,2,0,65535,0,65535,
Watchdog_Misc,Global,count_roc_l1a_fifo_full,,0x0eed,Watchdog_Misc_count_roc_l1a_fifo_full,ro,2,0,65535,0,65535,
Watchdog_Misc,Global,history_packet_veto,,0x0eef,Watchdog_Misc_history_packet_veto,ro,4,0,4294967295,0,4294967295,(Requires Watchdog_Capture) history Packet Veto watchdogs over last 32 packets
Watchdog_Misc,Global,history_event_unexpected,,0x0ef3,Watchdog_Misc_history_event_unexpected,ro,4,0,4294967295,0,4294967295,(Requires Watchdog_Capture) history Unexpected event watchdogs over last 32 packets
Watchdog_Misc,Global,history_e_h_match,,0x0ef7,Watchdog_Misc_history_e_h_match,ro,4,0,4294967295,0,4294967295,(Requires Watchdog_Capture) history ECON vs HGCROC Mismatch watchdogs over last 32 packets
Watchdog_Misc,Global,history_lsb_ht_recon,,0x0efb,Watchdog_Misc_history_lsb_ht_recon,ro,4,0,4294967295,0,4294967295,(Requires Watchdog_Capture) history of MSB of HT Reconstructions over last 32 packets
Watchdog_Misc,Global,history_msb_ht_recon,,0x0eff,Watchdog_Misc_history_msb_ht_recon,ro,4,0,4294967295,0,4294967295,(Requires Watchdog_Capture) history of LSB of HT Reconstructions over last 32 packets
Watchdog_Misc,Global,history_lsb_ebo_recon,,0x0f03,Watchdog_Misc_history_lsb_ebo_recon,ro,4,0,4294967295,0,4294967295,(Requires Watchdog_Capture) history of MSB of EBO Reconstructions over last 32 packets
Watchdog_Misc,Global,history_msb_ebo_recon,,0x0f07,Watchdog_Misc_history_msb_ebo_recon,ro,4,0,4294967295,0,4294967295,(Requires Watchdog_Capture) history of LSB of EBO Reconstructions over last 32 packets
Watchdog_Misc,Global,history_roc_bunch_counter,,0x0f0b,Watchdog_Misc_history_roc_bunch_counter,ro,4,0,4294967295,0,4294967295,
Watchdog_Misc,Global,history_roc_unused_state,,0x0f0f,Watchdog_Misc_history_roc_unused_state,ro,4,0,4294967295,0,4294967295,
Watchdog_Misc,Global,history_roc_missed_pkt,,0x0f13,Watchdog_Misc_history_roc_missed_pkt,ro,4,0,4294967295,0,4294967295,
Watchdog_Misc,Global,history_roc_predictor_fifo_full,,0x0f17,Watchdog_Misc_history_roc_predictor_fifo_full,ro,4,0,4294967295,0,4294967295,
Watchdog_Misc,Global,history_roc_l1a_fifo_full,,0x0f1b,Watchdog_Misc_history_roc_l1a_fifo_full,ro,4,0,4294967295,0,4294967295,
Watchdog_Misc,Global,tmr_err_cnt_reset_request,,0x0f1f,Watchdog_Misc_tmr_err_cnt_reset_request,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
ZS,00,zs_lambda,00,0x04a7,ZS_00_zs_lambda_00,rw,3,32,127,0,127,
ZS,00,zs_kappa,00,0x04a7,ZS_00_zs_kappa_00,rw,3,32,63,7,63,
ZS,00,zs_c_i,00,0x04a7,ZS_00_zs_c_i_00,rw,3,255,255,13,255,
ZS,00,zs_pass_i,00,0x04a7,ZS_00_zs_pass_i_00,rw,3,0,1,21,1,
ZS,00,zs_mask_i,00,0x04a7,ZS_00_zs_mask_i_00,rw,3,0,1,22,1,
ZS,00,zs_lambda,01,0x04aa,ZS_00_zs_lambda_01,rw,3,32,127,0,127,
ZS,00,zs_kappa,01,0x04aa,ZS_00_zs_kappa_01,rw,3,32,63,7,63,
ZS,00,zs_c_i,01,0x04aa,ZS_00_zs_c_i_01,rw,3,255,255,13,255,
ZS,00,zs_pass_i,01,0x04aa,ZS_00_zs_pass_i_01,rw,3,0,1,21,1,
ZS,00,zs_mask_i,01,0x04aa,ZS_00_zs_mask_i_01,rw,3,0,1,22,1,
ZS,00,zs_lambda,02,0x04ad,ZS_00_zs_lambda_02,rw,3,32,127,0,127,
ZS,00,zs_kappa,02,0x04ad,ZS_00_zs_kappa_02,rw,3,32,63,7,63,
ZS,00,zs_c_i,02,0x04ad,ZS_00_zs_c_i_02,rw,3,255,255,13,255,
ZS,00,zs_pass_i,02,0x04ad,ZS_00_zs_pass_i_02,rw,3,0,1,21,1,
ZS,00,zs_mask_i,02,0x04ad,ZS_00_zs_mask_i_02,rw,3,0,1,22,1,
ZS,00,zs_lambda,03,0x04b0,ZS_00_zs_lambda_03,rw,3,32,127,0,127,
ZS,00,zs_kappa,03,0x04b0,ZS_00_zs_kappa_03,rw,3,32,63,7,63,
ZS,00,zs_c_i,03,0x04b0,ZS_00_zs_c_i_03,rw,3,255,255,13,255,
ZS,00,zs_pass_i,03,0x04b0,ZS_00_zs_pass_i_03,rw,3,0,1,21,1,
ZS,00,zs_mask_i,03,0x04b0,ZS_00_zs_mask_i_03,rw,3,0,1,22,1,
ZS,00,zs_lambda,04,0x04b3,ZS_00_zs_lambda_04,rw,3,32,127,0,127,
ZS,00,zs_kappa,04,0x04b3,ZS_00_zs_kappa_04,rw,3,32,63,7,63,
ZS,00,zs_c_i,04,0x04b3,ZS_00_zs_c_i_04,rw,3,255,255,13,255,
ZS,00,zs_pass_i,04,0x04b3,ZS_00_zs_pass_i_04,rw,3,0,1,21,1,
ZS,00,zs_mask_i,04,0x04b3,ZS_00_zs_mask_i_04,rw,3,0,1,22,1,
ZS,00,zs_lambda,05,0x04b6,ZS_00_zs_lambda_05,rw,3,32,127,0,127,
ZS,00,zs_kappa,05,0x04b6,ZS_00_zs_kappa_05,rw,3,32,63,7,63,
ZS,00,zs_c_i,05,0x04b6,ZS_00_zs_c_i_05,rw,3,255,255,13,255,
ZS,00,zs_pass_i,05,0x04b6,ZS_00_zs_pass_i_05,rw,3,0,1,21,1,
ZS,00,zs_mask_i,05,0x04b6,ZS_00_zs_mask_i_05,rw,3,0,1,22,1,
ZS,00,zs_lambda,06,0x04b9,ZS_00_zs_lambda_06,rw,3,32,127,0,127,
ZS,00,zs_kappa,06,0x04b9,ZS_00_zs_kappa_06,rw,3,32,63,7,63,
ZS,00,zs_c_i,06,0x04b9,ZS_00_zs_c_i_06,rw,3,255,255,13,255,
ZS,00,zs_pass_i,06,0x04b9,ZS_00_zs_pass_i_06,rw,3,0,1,21,1,
ZS,00,zs_mask_i,06,0x04b9,ZS_00_zs_mask_i_06,rw,3,0,1,22,1,
ZS,00,zs_lambda,07,0x04bc,ZS_00_zs_lambda_07,rw,3,32,127,0,127,
ZS,00,zs_kappa,07,0x04bc,ZS_00_zs_kappa_07,rw,3,32,63,7,63,
ZS,00,zs_c_i,07,0x04bc,ZS_00_zs_c_i_07,rw,3,255,255,13,255,
ZS,00,zs_pass_i,07,0x04bc,ZS_00_zs_pass_i_07,rw,3,0,1,21,1,
ZS,00,zs_mask_i,07,0x04bc,ZS_00_zs_mask_i_07,rw,3,0,1,22,1,
ZS,00,zs_lambda,08,0x04bf,ZS_00_zs_lambda_08,rw,3,32,127,0,127,
ZS,00,zs_kappa,08,0x04bf,ZS_00_zs_kappa_08,rw,3,32,63,7,63,
ZS,00,zs_c_i,08,0x04bf,ZS_00_zs_c_i_08,rw,3,255,255,13,255,
ZS,00,zs_pass_i,08,0x04bf,ZS_00_zs_pass_i_08,rw,3,0,1,21,1,
ZS,00,zs_mask_i,08,0x04bf,ZS_00_zs_mask_i_08,rw,3,0,1,22,1,
ZS,00,zs_lambda,09,0x04c2,ZS_00_zs_lambda_09,rw,3,32,127,0,127,
ZS,00,zs_kappa,09,0x04c2,ZS_00_zs_kappa_09,rw,3,32,63,7,63,
ZS,00,zs_c_i,09,0x04c2,ZS_00_zs_c_i_09,rw,3,255,255,13,255,
ZS,00,zs_pass_i,09,0x04c2,ZS_00_zs_pass_i_09,rw,3,0,1,21,1,
ZS,00,zs_mask_i,09,0x04c2,ZS_00_zs_mask_i_09,rw,3,0,1,22,1,
ZS,00,zs_lambda,10,0x04c5,ZS_00_zs_lambda_10,rw,3,32,127,0,127,
ZS,00,zs_kappa,10,0x04c5,ZS_00_zs_kappa_10,rw,3,32,63,7,63,
ZS,00,zs_c_i,10,0x04c5,ZS_00_zs_c_i_10,rw,3,255,255,13,255,
ZS,00,zs_pass_i,10,0x04c5,ZS_00_zs_pass_i_10,rw,3,0,1,21,1,
ZS,00,zs_mask_i,10,0x04c5,ZS_00_zs_mask_i_10,rw,3,0,1,22,1,
ZS,00,zs_lambda,11,0x04c8,ZS_00_zs_lambda_11,rw,3,32,127,0,127,
ZS,00,zs_kappa,11,0x04c8,ZS_00_zs_kappa_11,rw,3,32,63,7,63,
ZS,00,zs_c_i,11,0x04c8,ZS_00_zs_c_i_11,rw,3,255,255,13,255,
ZS,00,zs_pass_i,11,0x04c8,ZS_00_zs_pass_i_11,rw,3,0,1,21,1,
ZS,00,zs_mask_i,11,0x04c8,ZS_00_zs_mask_i_11,rw,3,0,1,22,1,
ZS,00,zs_lambda,12,0x04cb,ZS_00_zs_lambda_12,rw,3,32,127,0,127,
ZS,00,zs_kappa,12,0x04cb,ZS_00_zs_kappa_12,rw,3,32,63,7,63,
ZS,00,zs_c_i,12,0x04cb,ZS_00_zs_c_i_12,rw,3,255,255,13,255,
ZS,00,zs_pass_i,12,0x04cb,ZS_00_zs_pass_i_12,rw,3,0,1,21,1,
ZS,00,zs_mask_i,12,0x04cb,ZS_00_zs_mask_i_12,rw,3,0,1,22,1,
ZS,00,zs_lambda,13,0x04ce,ZS_00_zs_lambda_13,rw,3,32,127,0,127,
ZS,00,zs_kappa,13,0x04ce,ZS_00_zs_kappa_13,rw,3,32,63,7,63,
ZS,00,zs_c_i,13,0x04ce,ZS_00_zs_c_i_13,rw,3,255,255,13,255,
ZS,00,zs_pass_i,13,0x04ce,ZS_00_zs_pass_i_13,rw,3,0,1,21,1,
ZS,00,zs_mask_i,13,0x04ce,ZS_00_zs_mask_i_13,rw,3,0,1,22,1,
ZS,00,zs_lambda,14,0x04d1,ZS_00_zs_lambda_14,rw,3,32,127,0,127,
ZS,00,zs_kappa,14,0x04d1,ZS_00_zs_kappa_14,rw,3,32,63,7,63,
ZS,00,zs_c_i,14,0x04d1,ZS_00_zs_c_i_14,rw,3,255,255,13,255,
ZS,00,zs_pass_i,14,0x04d1,ZS_00_zs_pass_i_14,rw,3,0,1,21,1,
ZS,00,zs_mask_i,14,0x04d1,ZS_00_zs_mask_i_14,rw,3,0,1,22,1,
ZS,00,zs_lambda,15,0x04d4,ZS_00_zs_lambda_15,rw,3,32,127,0,127,
ZS,00,zs_kappa,15,0x04d4,ZS_00_zs_kappa_15,rw,3,32,63,7,63,
ZS,00,zs_c_i,15,0x04d4,ZS_00_zs_c_i_15,rw,3,255,255,13,255,
ZS,00,zs_pass_i,15,0x04d4,ZS_00_zs_pass_i_15,rw,3,0,1,21,1,
ZS,00,zs_mask_i,15,0x04d4,ZS_00_zs_mask_i_15,rw,3,0,1,22,1,
ZS,00,zs_lambda,16,0x04d7,ZS_00_zs_lambda_16,rw,3,32,127,0,127,
ZS,00,zs_kappa,16,0x04d7,ZS_00_zs_kappa_16,rw,3,32,63,7,63,
ZS,00,zs_c_i,16,0x04d7,ZS_00_zs_c_i_16,rw,3,255,255,13,255,
ZS,00,zs_pass_i,16,0x04d7,ZS_00_zs_pass_i_16,rw,3,0,1,21,1,
ZS,00,zs_mask_i,16,0x04d7,ZS_00_zs_mask_i_16,rw,3,0,1,22,1,
ZS,00,zs_lambda,17,0x04da,ZS_00_zs_lambda_17,rw,3,32,127,0,127,
ZS,00,zs_kappa,17,0x04da,ZS_00_zs_kappa_17,rw,3,32,63,7,63,
ZS,00,zs_c_i,17,0x04da,ZS_00_zs_c_i_17,rw,3,255,255,13,255,
ZS,00,zs_pass_i,17,0x04da,ZS_00_zs_pass_i_17,rw,3,0,1,21,1,
ZS,00,zs_mask_i,17,0x04da,ZS_00_zs_mask_i_17,rw,3,0,1,22,1,
ZS,00,zs_lambda,18,0x04dd,ZS_00_zs_lambda_18,rw,3,32,127,0,127,
ZS,00,zs_kappa,18,0x04dd,ZS_00_zs_kappa_18,rw,3,32,63,7,63,
ZS,00,zs_c_i,18,0x04dd,ZS_00_zs_c_i_18,rw,3,255,255,13,255,
ZS,00,zs_pass_i,18,0x04dd,ZS_00_zs_pass_i_18,rw,3,0,1,21,1,
ZS,00,zs_mask_i,18,0x04dd,ZS_00_zs_mask_i_18,rw,3,0,1,22,1,
ZS,00,zs_lambda,19,0x04e0,ZS_00_zs_lambda_19,rw,3,32,127,0,127,
ZS,00,zs_kappa,19,0x04e0,ZS_00_zs_kappa_19,rw,3,32,63,7,63,
ZS,00,zs_c_i,19,0x04e0,ZS_00_zs_c_i_19,rw,3,255,255,13,255,
ZS,00,zs_pass_i,19,0x04e0,ZS_00_zs_pass_i_19,rw,3,0,1,21,1,
ZS,00,zs_mask_i,19,0x04e0,ZS_00_zs_mask_i_19,rw,3,0,1,22,1,
ZS,00,zs_lambda,20,0x04e3,ZS_00_zs_lambda_20,rw,3,32,127,0,127,
ZS,00,zs_kappa,20,0x04e3,ZS_00_zs_kappa_20,rw,3,32,63,7,63,
ZS,00,zs_c_i,20,0x04e3,ZS_00_zs_c_i_20,rw,3,255,255,13,255,
ZS,00,zs_pass_i,20,0x04e3,ZS_00_zs_pass_i_20,rw,3,0,1,21,1,
ZS,00,zs_mask_i,20,0x04e3,ZS_00_zs_mask_i_20,rw,3,0,1,22,1,
ZS,00,zs_lambda,21,0x04e6,ZS_00_zs_lambda_21,rw,3,32,127,0,127,
ZS,00,zs_kappa,21,0x04e6,ZS_00_zs_kappa_21,rw,3,32,63,7,63,
ZS,00,zs_c_i,21,0x04e6,ZS_00_zs_c_i_21,rw,3,255,255,13,255,
ZS,00,zs_pass_i,21,0x04e6,ZS_00_zs_pass_i_21,rw,3,0,1,21,1,
ZS,00,zs_mask_i,21,0x04e6,ZS_00_zs_mask_i_21,rw,3,0,1,22,1,
ZS,00,zs_lambda,22,0x04e9,ZS_00_zs_lambda_22,rw,3,32,127,0,127,
ZS,00,zs_kappa,22,0x04e9,ZS_00_zs_kappa_22,rw,3,32,63,7,63,
ZS,00,zs_c_i,22,0x04e9,ZS_00_zs_c_i_22,rw,3,255,255,13,255,
ZS,00,zs_pass_i,22,0x04e9,ZS_00_zs_pass_i_22,rw,3,0,1,21,1,
ZS,00,zs_mask_i,22,0x04e9,ZS_00_zs_mask_i_22,rw,3,0,1,22,1,
ZS,00,zs_lambda,23,0x04ec,ZS_00_zs_lambda_23,rw,3,32,127,0,127,
ZS,00,zs_kappa,23,0x04ec,ZS_00_zs_kappa_23,rw,3,32,63,7,63,
ZS,00,zs_c_i,23,0x04ec,ZS_00_zs_c_i_23,rw,3,255,255,13,255,
ZS,00,zs_pass_i,23,0x04ec,ZS_00_zs_pass_i_23,rw,3,0,1,21,1,
ZS,00,zs_mask_i,23,0x04ec,ZS_00_zs_mask_i_23,rw,3,0,1,22,1,
ZS,00,zs_lambda,24,0x04ef,ZS_00_zs_lambda_24,rw,3,32,127,0,127,
ZS,00,zs_kappa,24,0x04ef,ZS_00_zs_kappa_24,rw,3,32,63,7,63,
ZS,00,zs_c_i,24,0x04ef,ZS_00_zs_c_i_24,rw,3,255,255,13,255,
ZS,00,zs_pass_i,24,0x04ef,ZS_00_zs_pass_i_24,rw,3,0,1,21,1,
ZS,00,zs_mask_i,24,0x04ef,ZS_00_zs_mask_i_24,rw,3,0,1,22,1,
ZS,00,zs_lambda,25,0x04f2,ZS_00_zs_lambda_25,rw,3,32,127,0,127,
ZS,00,zs_kappa,25,0x04f2,ZS_00_zs_kappa_25,rw,3,32,63,7,63,
ZS,00,zs_c_i,25,0x04f2,ZS_00_zs_c_i_25,rw,3,255,255,13,255,
ZS,00,zs_pass_i,25,0x04f2,ZS_00_zs_pass_i_25,rw,3,0,1,21,1,
ZS,00,zs_mask_i,25,0x04f2,ZS_00_zs_mask_i_25,rw,3,0,1,22,1,
ZS,00,zs_lambda,26,0x04f5,ZS_00_zs_lambda_26,rw,3,32,127,0,127,
ZS,00,zs_kappa,26,0x04f5,ZS_00_zs_kappa_26,rw,3,32,63,7,63,
ZS,00,zs_c_i,26,0x04f5,ZS_00_zs_c_i_26,rw,3,255,255,13,255,
ZS,00,zs_pass_i,26,0x04f5,ZS_00_zs_pass_i_26,rw,3,0,1,21,1,
ZS,00,zs_mask_i,26,0x04f5,ZS_00_zs_mask_i_26,rw,3,0,1,22,1,
ZS,00,zs_lambda,27,0x04f8,ZS_00_zs_lambda_27,rw,3,32,127,0,127,
ZS,00,zs_kappa,27,0x04f8,ZS_00_zs_kappa_27,rw,3,32,63,7,63,
ZS,00,zs_c_i,27,0x04f8,ZS_00_zs_c_i_27,rw,3,255,255,13,255,
ZS,00,zs_pass_i,27,0x04f8,ZS_00_zs_pass_i_27,rw,3,0,1,21,1,
ZS,00,zs_mask_i,27,0x04f8,ZS_00_zs_mask_i_27,rw,3,0,1,22,1,
ZS,00,zs_lambda,28,0x04fb,ZS_00_zs_lambda_28,rw,3,32,127,0,127,
ZS,00,zs_kappa,28,0x04fb,ZS_00_zs_kappa_28,rw,3,32,63,7,63,
ZS,00,zs_c_i,28,0x04fb,ZS_00_zs_c_i_28,rw,3,255,255,13,255,
ZS,00,zs_pass_i,28,0x04fb,ZS_00_zs_pass_i_28,rw,3,0,1,21,1,
ZS,00,zs_mask_i,28,0x04fb,ZS_00_zs_mask_i_28,rw,3,0,1,22,1,
ZS,00,zs_lambda,29,0x04fe,ZS_00_zs_lambda_29,rw,3,32,127,0,127,
ZS,00,zs_kappa,29,0x04fe,ZS_00_zs_kappa_29,rw,3,32,63,7,63,
ZS,00,zs_c_i,29,0x04fe,ZS_00_zs_c_i_29,rw,3,255,255,13,255,
ZS,00,zs_pass_i,29,0x04fe,ZS_00_zs_pass_i_29,rw,3,0,1,21,1,
ZS,00,zs_mask_i,29,0x04fe,ZS_00_zs_mask_i_29,rw,3,0,1,22,1,
ZS,00,zs_lambda,30,0x0501,ZS_00_zs_lambda_30,rw,3,32,127,0,127,
ZS,00,zs_kappa,30,0x0501,ZS_00_zs_kappa_30,rw,3,32,63,7,63,
ZS,00,zs_c_i,30,0x0501,ZS_00_zs_c_i_30,rw,3,255,255,13,255,
ZS,00,zs_pass_i,30,0x0501,ZS_00_zs_pass_i_30,rw,3,0,1,21,1,
ZS,00,zs_mask_i,30,0x0501,ZS_00_zs_mask_i_30,rw,3,0,1,22,1,
ZS,00,zs_lambda,31,0x0504,ZS_00_zs_lambda_31,rw,3,32,127,0,127,
ZS,00,zs_kappa,31,0x0504,ZS_00_zs_kappa_31,rw,3,32,63,7,63,
ZS,00,zs_c_i,31,0x0504,ZS_00_zs_c_i_31,rw,3,255,255,13,255,
ZS,00,zs_pass_i,31,0x0504,ZS_00_zs_pass_i_31,rw,3,0,1,21,1,
ZS,00,zs_mask_i,31,0x0504,ZS_00_zs_mask_i_31,rw,3,0,1,22,1,
ZS,00,zs_lambda,32,0x0507,ZS_00_zs_lambda_32,rw,3,32,127,0,127,
ZS,00,zs_kappa,32,0x0507,ZS_00_zs_kappa_32,rw,3,32,63,7,63,
ZS,00,zs_c_i,32,0x0507,ZS_00_zs_c_i_32,rw,3,255,255,13,255,
ZS,00,zs_pass_i,32,0x0507,ZS_00_zs_pass_i_32,rw,3,0,1,21,1,
ZS,00,zs_mask_i,32,0x0507,ZS_00_zs_mask_i_32,rw,3,0,1,22,1,
ZS,00,zs_lambda,33,0x050a,ZS_00_zs_lambda_33,rw,3,32,127,0,127,
ZS,00,zs_kappa,33,0x050a,ZS_00_zs_kappa_33,rw,3,32,63,7,63,
ZS,00,zs_c_i,33,0x050a,ZS_00_zs_c_i_33,rw,3,255,255,13,255,
ZS,00,zs_pass_i,33,0x050a,ZS_00_zs_pass_i_33,rw,3,0,1,21,1,
ZS,00,zs_mask_i,33,0x050a,ZS_00_zs_mask_i_33,rw,3,0,1,22,1,
ZS,00,zs_lambda,34,0x050d,ZS_00_zs_lambda_34,rw,3,32,127,0,127,
ZS,00,zs_kappa,34,0x050d,ZS_00_zs_kappa_34,rw,3,32,63,7,63,
ZS,00,zs_c_i,34,0x050d,ZS_00_zs_c_i_34,rw,3,255,255,13,255,
ZS,00,zs_pass_i,34,0x050d,ZS_00_zs_pass_i_34,rw,3,0,1,21,1,
ZS,00,zs_mask_i,34,0x050d,ZS_00_zs_mask_i_34,rw,3,0,1,22,1,
ZS,00,zs_lambda,35,0x0510,ZS_00_zs_lambda_35,rw,3,32,127,0,127,
ZS,00,zs_kappa,35,0x0510,ZS_00_zs_kappa_35,rw,3,32,63,7,63,
ZS,00,zs_c_i,35,0x0510,ZS_00_zs_c_i_35,rw,3,255,255,13,255,
ZS,00,zs_pass_i,35,0x0510,ZS_00_zs_pass_i_35,rw,3,0,1,21,1,
ZS,00,zs_mask_i,35,0x0510,ZS_00_zs_mask_i_35,rw,3,0,1,22,1,
ZS,00,zs_lambda,36,0x0513,ZS_00_zs_lambda_36,rw,3,32,127,0,127,
ZS,00,zs_kappa,36,0x0513,ZS_00_zs_kappa_36,rw,3,32,63,7,63,
ZS,00,zs_c_i,36,0x0513,ZS_00_zs_c_i_36,rw,3,255,255,13,255,
ZS,00,zs_pass_i,36,0x0513,ZS_00_zs_pass_i_36,rw,3,0,1,21,1,
ZS,00,zs_mask_i,36,0x0513,ZS_00_zs_mask_i_36,rw,3,0,1,22,1,
ZS,01,zs_lambda,00,0x0516,ZS_01_zs_lambda_00,rw,3,32,127,0,127,
ZS,01,zs_kappa,00,0x0516,ZS_01_zs_kappa_00,rw,3,32,63,7,63,
ZS,01,zs_c_i,00,0x0516,ZS_01_zs_c_i_00,rw,3,255,255,13,255,
ZS,01,zs_pass_i,00,0x0516,ZS_01_zs_pass_i_00,rw,3,0,1,21,1,
ZS,01,zs_mask_i,00,0x0516,ZS_01_zs_mask_i_00,rw,3,0,1,22,1,
ZS,01,zs_lambda,01,0x0519,ZS_01_zs_lambda_01,rw,3,32,127,0,127,
ZS,01,zs_kappa,01,0x0519,ZS_01_zs_kappa_01,rw,3,32,63,7,63,
ZS,01,zs_c_i,01,0x0519,ZS_01_zs_c_i_01,rw,3,255,255,13,255,
ZS,01,zs_pass_i,01,0x0519,ZS_01_zs_pass_i_01,rw,3,0,1,21,1,
ZS,01,zs_mask_i,01,0x0519,ZS_01_zs_mask_i_01,rw,3,0,1,22,1,
ZS,01,zs_lambda,02,0x051c,ZS_01_zs_lambda_02,rw,3,32,127,0,127,
ZS,01,zs_kappa,02,0x051c,ZS_01_zs_kappa_02,rw,3,32,63,7,63,
ZS,01,zs_c_i,02,0x051c,ZS_01_zs_c_i_02,rw,3,255,255,13,255,
ZS,01,zs_pass_i,02,0x051c,ZS_01_zs_pass_i_02,rw,3,0,1,21,1,
ZS,01,zs_mask_i,02,0x051c,ZS_01_zs_mask_i_02,rw,3,0,1,22,1,
ZS,01,zs_lambda,03,0x051f,ZS_01_zs_lambda_03,rw,3,32,127,0,127,
ZS,01,zs_kappa,03,0x051f,ZS_01_zs_kappa_03,rw,3,32,63,7,63,
ZS,01,zs_c_i,03,0x051f,ZS_01_zs_c_i_03,rw,3,255,255,13,255,
ZS,01,zs_pass_i,03,0x051f,ZS_01_zs_pass_i_03,rw,3,0,1,21,1,
ZS,01,zs_mask_i,03,0x051f,ZS_01_zs_mask_i_03,rw,3,0,1,22,1,
ZS,01,zs_lambda,04,0x0522,ZS_01_zs_lambda_04,rw,3,32,127,0,127,
ZS,01,zs_kappa,04,0x0522,ZS_01_zs_kappa_04,rw,3,32,63,7,63,
ZS,01,zs_c_i,04,0x0522,ZS_01_zs_c_i_04,rw,3,255,255,13,255,
ZS,01,zs_pass_i,04,0x0522,ZS_01_zs_pass_i_04,rw,3,0,1,21,1,
ZS,01,zs_mask_i,04,0x0522,ZS_01_zs_mask_i_04,rw,3,0,1,22,1,
ZS,01,zs_lambda,05,0x0525,ZS_01_zs_lambda_05,rw,3,32,127,0,127,
ZS,01,zs_kappa,05,0x0525,ZS_01_zs_kappa_05,rw,3,32,63,7,63,
ZS,01,zs_c_i,05,0x0525,ZS_01_zs_c_i_05,rw,3,255,255,13,255,
ZS,01,zs_pass_i,05,0x0525,ZS_01_zs_pass_i_05,rw,3,0,1,21,1,
ZS,01,zs_mask_i,05,0x0525,ZS_01_zs_mask_i_05,rw,3,0,1,22,1,
ZS,01,zs_lambda,06,0x0528,ZS_01_zs_lambda_06,rw,3,32,127,0,127,
ZS,01,zs_kappa,06,0x0528,ZS_01_zs_kappa_06,rw,3,32,63,7,63,
ZS,01,zs_c_i,06,0x0528,ZS_01_zs_c_i_06,rw,3,255,255,13,255,
ZS,01,zs_pass_i,06,0x0528,ZS_01_zs_pass_i_06,rw,3,0,1,21,1,
ZS,01,zs_mask_i,06,0x0528,ZS_01_zs_mask_i_06,rw,3,0,1,22,1,
ZS,01,zs_lambda,07,0x052b,ZS_01_zs_lambda_07,rw,3,32,127,0,127,
ZS,01,zs_kappa,07,0x052b,ZS_01_zs_kappa_07,rw,3,32,63,7,63,
ZS,01,zs_c_i,07,0x052b,ZS_01_zs_c_i_07,rw,3,255,255,13,255,
ZS,01,zs_pass_i,07,0x052b,ZS_01_zs_pass_i_07,rw,3,0,1,21,1,
ZS,01,zs_mask_i,07,0x052b,ZS_01_zs_mask_i_07,rw,3,0,1,22,1,
ZS,01,zs_lambda,08,0x052e,ZS_01_zs_lambda_08,rw,3,32,127,0,127,
ZS,01,zs_kappa,08,0x052e,ZS_01_zs_kappa_08,rw,3,32,63,7,63,
ZS,01,zs_c_i,08,0x052e,ZS_01_zs_c_i_08,rw,3,255,255,13,255,
ZS,01,zs_pass_i,08,0x052e,ZS_01_zs_pass_i_08,rw,3,0,1,21,1,
ZS,01,zs_mask_i,08,0x052e,ZS_01_zs_mask_i_08,rw,3,0,1,22,1,
ZS,01,zs_lambda,09,0x0531,ZS_01_zs_lambda_09,rw,3,32,127,0,127,
ZS,01,zs_kappa,09,0x0531,ZS_01_zs_kappa_09,rw,3,32,63,7,63,
ZS,01,zs_c_i,09,0x0531,ZS_01_zs_c_i_09,rw,3,255,255,13,255,
ZS,01,zs_pass_i,09,0x0531,ZS_01_zs_pass_i_09,rw,3,0,1,21,1,
ZS,01,zs_mask_i,09,0x0531,ZS_01_zs_mask_i_09,rw,3,0,1,22,1,
ZS,01,zs_lambda,10,0x0534,ZS_01_zs_lambda_10,rw,3,32,127,0,127,
ZS,01,zs_kappa,10,0x0534,ZS_01_zs_kappa_10,rw,3,32,63,7,63,
ZS,01,zs_c_i,10,0x0534,ZS_01_zs_c_i_10,rw,3,255,255,13,255,
ZS,01,zs_pass_i,10,0x0534,ZS_01_zs_pass_i_10,rw,3,0,1,21,1,
ZS,01,zs_mask_i,10,0x0534,ZS_01_zs_mask_i_10,rw,3,0,1,22,1,
ZS,01,zs_lambda,11,0x0537,ZS_01_zs_lambda_11,rw,3,32,127,0,127,
ZS,01,zs_kappa,11,0x0537,ZS_01_zs_kappa_11,rw,3,32,63,7,63,
ZS,01,zs_c_i,11,0x0537,ZS_01_zs_c_i_11,rw,3,255,255,13,255,
ZS,01,zs_pass_i,11,0x0537,ZS_01_zs_pass_i_11,rw,3,0,1,21,1,
ZS,01,zs_mask_i,11,0x0537,ZS_01_zs_mask_i_11,rw,3,0,1,22,1,
ZS,01,zs_lambda,12,0x053a,ZS_01_zs_lambda_12,rw,3,32,127,0,127,
ZS,01,zs_kappa,12,0x053a,ZS_01_zs_kappa_12,rw,3,32,63,7,63,
ZS,01,zs_c_i,12,0x053a,ZS_01_zs_c_i_12,rw,3,255,255,13,255,
ZS,01,zs_pass_i,12,0x053a,ZS_01_zs_pass_i_12,rw,3,0,1,21,1,
ZS,01,zs_mask_i,12,0x053a,ZS_01_zs_mask_i_12,rw,3,0,1,22,1,
ZS,01,zs_lambda,13,0x053d,ZS_01_zs_lambda_13,rw,3,32,127,0,127,
ZS,01,zs_kappa,13,0x053d,ZS_01_zs_kappa_13,rw,3,32,63,7,63,
ZS,01,zs_c_i,13,0x053d,ZS_01_zs_c_i_13,rw,3,255,255,13,255,
ZS,01,zs_pass_i,13,0x053d,ZS_01_zs_pass_i_13,rw,3,0,1,21,1,
ZS,01,zs_mask_i,13,0x053d,ZS_01_zs_mask_i_13,rw,3,0,1,22,1,
ZS,01,zs_lambda,14,0x0540,ZS_01_zs_lambda_14,rw,3,32,127,0,127,
ZS,01,zs_kappa,14,0x0540,ZS_01_zs_kappa_14,rw,3,32,63,7,63,
ZS,01,zs_c_i,14,0x0540,ZS_01_zs_c_i_14,rw,3,255,255,13,255,
ZS,01,zs_pass_i,14,0x0540,ZS_01_zs_pass_i_14,rw,3,0,1,21,1,
ZS,01,zs_mask_i,14,0x0540,ZS_01_zs_mask_i_14,rw,3,0,1,22,1,
ZS,01,zs_lambda,15,0x0543,ZS_01_zs_lambda_15,rw,3,32,127,0,127,
ZS,01,zs_kappa,15,0x0543,ZS_01_zs_kappa_15,rw,3,32,63,7,63,
ZS,01,zs_c_i,15,0x0543,ZS_01_zs_c_i_15,rw,3,255,255,13,255,
ZS,01,zs_pass_i,15,0x0543,ZS_01_zs_pass_i_15,rw,3,0,1,21,1,
ZS,01,zs_mask_i,15,0x0543,ZS_01_zs_mask_i_15,rw,3,0,1,22,1,
ZS,01,zs_lambda,16,0x0546,ZS_01_zs_lambda_16,rw,3,32,127,0,127,
ZS,01,zs_kappa,16,0x0546,ZS_01_zs_kappa_16,rw,3,32,63,7,63,
ZS,01,zs_c_i,16,0x0546,ZS_01_zs_c_i_16,rw,3,255,255,13,255,
ZS,01,zs_pass_i,16,0x0546,ZS_01_zs_pass_i_16,rw,3,0,1,21,1,
ZS,01,zs_mask_i,16,0x0546,ZS_01_zs_mask_i_16,rw,3,0,1,22,1,
ZS,01,zs_lambda,17,0x0549,ZS_01_zs_lambda_17,rw,3,32,127,0,127,
ZS,01,zs_kappa,17,0x0549,ZS_01_zs_kappa_17,rw,3,32,63,7,63,
ZS,01,zs_c_i,17,0x0549,ZS_01_zs_c_i_17,rw,3,255,255,13,255,
ZS,01,zs_pass_i,17,0x0549,ZS_01_zs_pass_i_17,rw,3,0,1,21,1,
ZS,01,zs_mask_i,17,0x0549,ZS_01_zs_mask_i_17,rw,3,0,1,22,1,
ZS,01,zs_lambda,18,0x054c,ZS_01_zs_lambda_18,rw,3,32,127,0,127,
ZS,01,zs_kappa,18,0x054c,ZS_01_zs_kappa_18,rw,3,32,63,7,63,
ZS,01,zs_c_i,18,0x054c,ZS_01_zs_c_i_18,rw,3,255,255,13,255,
ZS,01,zs_pass_i,18,0x054c,ZS_01_zs_pass_i_18,rw,3,0,1,21,1,
ZS,01,zs_mask_i,18,0x054c,ZS_01_zs_mask_i_18,rw,3,0,1,22,1,
ZS,01,zs_lambda,19,0x054f,ZS_01_zs_lambda_19,rw,3,32,127,0,127,
ZS,01,zs_kappa,19,0x054f,ZS_01_zs_kappa_19,rw,3,32,63,7,63,
ZS,01,zs_c_i,19,0x054f,ZS_01_zs_c_i_19,rw,3,255,255,13,255,
ZS,01,zs_pass_i,19,0x054f,ZS_01_zs_pass_i_19,rw,3,0,1,21,1,
ZS,01,zs_mask_i,19,0x054f,ZS_01_zs_mask_i_19,rw,3,0,1,22,1,
ZS,01,zs_lambda,20,0x0552,ZS_01_zs_lambda_20,rw,3,32,127,0,127,
ZS,01,zs_kappa,20,0x0552,ZS_01_zs_kappa_20,rw,3,32,63,7,63,
ZS,01,zs_c_i,20,0x0552,ZS_01_zs_c_i_20,rw,3,255,255,13,255,
ZS,01,zs_pass_i,20,0x0552,ZS_01_zs_pass_i_20,rw,3,0,1,21,1,
ZS,01,zs_mask_i,20,0x0552,ZS_01_zs_mask_i_20,rw,3,0,1,22,1,
ZS,01,zs_lambda,21,0x0555,ZS_01_zs_lambda_21,rw,3,32,127,0,127,
ZS,01,zs_kappa,21,0x0555,ZS_01_zs_kappa_21,rw,3,32,63,7,63,
ZS,01,zs_c_i,21,0x0555,ZS_01_zs_c_i_21,rw,3,255,255,13,255,
ZS,01,zs_pass_i,21,0x0555,ZS_01_zs_pass_i_21,rw,3,0,1,21,1,
ZS,01,zs_mask_i,21,0x0555,ZS_01_zs_mask_i_21,rw,3,0,1,22,1,
ZS,01,zs_lambda,22,0x0558,ZS_01_zs_lambda_22,rw,3,32,127,0,127,
ZS,01,zs_kappa,22,0x0558,ZS_01_zs_kappa_22,rw,3,32,63,7,63,
ZS,01,zs_c_i,22,0x0558,ZS_01_zs_c_i_22,rw,3,255,255,13,255,
ZS,01,zs_pass_i,22,0x0558,ZS_01_zs_pass_i_22,rw,3,0,1,21,1,
ZS,01,zs_mask_i,22,0x0558,ZS_01_zs_mask_i_22,rw,3,0,1,22,1,
ZS,01,zs_lambda,23,0x055b,ZS_01_zs_lambda_23,rw,3,32,127,0,127,
ZS,01,zs_kappa,23,0x055b,ZS_01_zs_kappa_23,rw,3,32,63,7,63,
ZS,01,zs_c_i,23,0x055b,ZS_01_zs_c_i_23,rw,3,255,255,13,255,
ZS,01,zs_pass_i,23,0x055b,ZS_01_zs_pass_i_23,rw,3,0,1,21,1,
ZS,01,zs_mask_i,23,0x055b,ZS_01_zs_mask_i_23,rw,3,0,1,22,1,
ZS,01,zs_lambda,24,0x055e,ZS_01_zs_lambda_24,rw,3,32,127,0,127,
ZS,01,zs_kappa,24,0x055e,ZS_01_zs_kappa_24,rw,3,32,63,7,63,
ZS,01,zs_c_i,24,0x055e,ZS_01_zs_c_i_24,rw,3,255,255,13,255,
ZS,01,zs_pass_i,24,0x055e,ZS_01_zs_pass_i_24,rw,3,0,1,21,1,
ZS,01,zs_mask_i,24,0x055e,ZS_01_zs_mask_i_24,rw,3,0,1,22,1,
ZS,01,zs_lambda,25,0x0561,ZS_01_zs_lambda_25,rw,3,32,127,0,127,
ZS,01,zs_kappa,25,0x0561,ZS_01_zs_kappa_25,rw,3,32,63,7,63,
ZS,01,zs_c_i,25,0x0561,ZS_01_zs_c_i_25,rw,3,255,255,13,255,
ZS,01,zs_pass_i,25,0x0561,ZS_01_zs_pass_i_25,rw,3,0,1,21,1,
ZS,01,zs_mask_i,25,0x0561,ZS_01_zs_mask_i_25,rw,3,0,1,22,1,
ZS,01,zs_lambda,26,0x0564,ZS_01_zs_lambda_26,rw,3,32,127,0,127,
ZS,01,zs_kappa,26,0x0564,ZS_01_zs_kappa_26,rw,3,32,63,7,63,
ZS,01,zs_c_i,26,0x0564,ZS_01_zs_c_i_26,rw,3,255,255,13,255,
ZS,01,zs_pass_i,26,0x0564,ZS_01_zs_pass_i_26,rw,3,0,1,21,1,
ZS,01,zs_mask_i,26,0x0564,ZS_01_zs_mask_i_26,rw,3,0,1,22,1,
ZS,01,zs_lambda,27,0x0567,ZS_01_zs_lambda_27,rw,3,32,127,0,127,
ZS,01,zs_kappa,27,0x0567,ZS_01_zs_kappa_27,rw,3,32,63,7,63,
ZS,01,zs_c_i,27,0x0567,ZS_01_zs_c_i_27,rw,3,255,255,13,255,
ZS,01,zs_pass_i,27,0x0567,ZS_01_zs_pass_i_27,rw,3,0,1,21,1,
ZS,01,zs_mask_i,27,0x0567,ZS_01_zs_mask_i_27,rw,3,0,1,22,1,
ZS,01,zs_lambda,28,0x056a,ZS_01_zs_lambda_28,rw,3,32,127,0,127,
ZS,01,zs_kappa,28,0x056a,ZS_01_zs_kappa_28,rw,3,32,63,7,63,
ZS,01,zs_c_i,28,0x056a,ZS_01_zs_c_i_28,rw,3,255,255,13,255,
ZS,01,zs_pass_i,28,0x056a,ZS_01_zs_pass_i_28,rw,3,0,1,21,1,
ZS,01,zs_mask_i,28,0x056a,ZS_01_zs_mask_i_28,rw,3,0,1,22,1,
ZS,01,zs_lambda,29,0x056d,ZS_01_zs_lambda_29,rw,3,32,127,0,127,
ZS,01,zs_kappa,29,0x056d,ZS_01_zs_kappa_29,rw,3,32,63,7,63,
ZS,01,zs_c_i,29,0x056d,ZS_01_zs_c_i_29,rw,3,255,255,13,255,
ZS,01,zs_pass_i,29,0x056d,ZS_01_zs_pass_i_29,rw,3,0,1,21,1,
ZS,01,zs_mask_i,29,0x056d,ZS_01_zs_mask_i_29,rw,3,0,1,22,1,
ZS,01,zs_lambda,30,0x0570,ZS_01_zs_lambda_30,rw,3,32,127,0,127,
ZS,01,zs_kappa,30,0x0570,ZS_01_zs_kappa_30,rw,3,32,63,7,63,
ZS,01,zs_c_i,30,0x0570,ZS_01_zs_c_i_30,rw,3,255,255,13,255,
ZS,01,zs_pass_i,30,0x0570,ZS_01_zs_pass_i_30,rw,3,0,1,21,1,
ZS,01,zs_mask_i,30,0x0570,ZS_01_zs_mask_i_30,rw,3,0,1,22,1,
ZS,01,zs_lambda,31,0x0573,ZS_01_zs_lambda_31,rw,3,32,127,0,127,
ZS,01,zs_kappa,31,0x0573,ZS_01_zs_kappa_31,rw,3,32,63,7,63,
ZS,01,zs_c_i,31,0x0573,ZS_01_zs_c_i_31,rw,3,255,255,13,255,
ZS,01,zs_pass_i,31,0x0573,ZS_01_zs_pass_i_31,rw,3,0,1,21,1,
ZS,01,zs_mask_i,31,0x0573,ZS_01_zs_mask_i_31,rw,3,0,1,22,1,
ZS,01,zs_lambda,32,0x0576,ZS_01_zs_lambda_32,rw,3,32,127,0,127,
ZS,01,zs_kappa,32,0x0576,ZS_01_zs_kappa_32,rw,3,32,63,7,63,
ZS,01,zs_c_i,32,0x0576,ZS_01_zs_c_i_32,rw,3,255,255,13,255,
ZS,01,zs_pass_i,32,0x0576,ZS_01_zs_pass_i_32,rw,3,0,1,21,1,
ZS,01,zs_mask_i,32,0x0576,ZS_01_zs_mask_i_32,rw,3,0,1,22,1,
ZS,01,zs_lambda,33,0x0579,ZS_01_zs_lambda_33,rw,3,32,127,0,127,
ZS,01,zs_kappa,33,0x0579,ZS_01_zs_kappa_33,rw,3,32,63,7,63,
ZS,01,zs_c_i,33,0x0579,ZS_01_zs_c_i_33,rw,3,255,255,13,255,
ZS,01,zs_pass_i,33,0x0579,ZS_01_zs_pass_i_33,rw,3,0,1,21,1,
ZS,01,zs_mask_i,33,0x0579,ZS_01_zs_mask_i_33,rw,3,0,1,22,1,
ZS,01,zs_lambda,34,0x057c,ZS_01_zs_lambda_34,rw,3,32,127,0,127,
ZS,01,zs_kappa,34,0x057c,ZS_01_zs_kappa_34,rw,3,32,63,7,63,
ZS,01,zs_c_i,34,0x057c,ZS_01_zs_c_i_34,rw,3,255,255,13,255,
ZS,01,zs_pass_i,34,0x057c,ZS_01_zs_pass_i_34,rw,3,0,1,21,1,
ZS,01,zs_mask_i,34,0x057c,ZS_01_zs_mask_i_34,rw,3,0,1,22,1,
ZS,01,zs_lambda,35,0x057f,ZS_01_zs_lambda_35,rw,3,32,127,0,127,
ZS,01,zs_kappa,35,0x057f,ZS_01_zs_kappa_35,rw,3,32,63,7,63,
ZS,01,zs_c_i,35,0x057f,ZS_01_zs_c_i_35,rw,3,255,255,13,255,
ZS,01,zs_pass_i,35,0x057f,ZS_01_zs_pass_i_35,rw,3,0,1,21,1,
ZS,01,zs_mask_i,35,0x057f,ZS_01_zs_mask_i_35,rw,3,0,1,22,1,
ZS,01,zs_lambda,36,0x0582,ZS_01_zs_lambda_36,rw,3,32,127,0,127,
ZS,01,zs_kappa,36,0x0582,ZS_01_zs_kappa_36,rw,3,32,63,7,63,
ZS,01,zs_c_i,36,0x0582,ZS_01_zs_c_i_36,rw,3,255,255,13,255,
ZS,01,zs_pass_i,36,0x0582,ZS_01_zs_pass_i_36,rw,3,0,1,21,1,
ZS,01,zs_mask_i,36,0x0582,ZS_01_zs_mask_i_36,rw,3,0,1,22,1,
ZS,02,zs_lambda,00,0x0585,ZS_02_zs_lambda_00,rw,3,32,127,0,127,
ZS,02,zs_kappa,00,0x0585,ZS_02_zs_kappa_00,rw,3,32,63,7,63,
ZS,02,zs_c_i,00,0x0585,ZS_02_zs_c_i_00,rw,3,255,255,13,255,
ZS,02,zs_pass_i,00,0x0585,ZS_02_zs_pass_i_00,rw,3,0,1,21,1,
ZS,02,zs_mask_i,00,0x0585,ZS_02_zs_mask_i_00,rw,3,0,1,22,1,
ZS,02,zs_lambda,01,0x0588,ZS_02_zs_lambda_01,rw,3,32,127,0,127,
ZS,02,zs_kappa,01,0x0588,ZS_02_zs_kappa_01,rw,3,32,63,7,63,
ZS,02,zs_c_i,01,0x0588,ZS_02_zs_c_i_01,rw,3,255,255,13,255,
ZS,02,zs_pass_i,01,0x0588,ZS_02_zs_pass_i_01,rw,3,0,1,21,1,
ZS,02,zs_mask_i,01,0x0588,ZS_02_zs_mask_i_01,rw,3,0,1,22,1,
ZS,02,zs_lambda,02,0x058b,ZS_02_zs_lambda_02,rw,3,32,127,0,127,
ZS,02,zs_kappa,02,0x058b,ZS_02_zs_kappa_02,rw,3,32,63,7,63,
ZS,02,zs_c_i,02,0x058b,ZS_02_zs_c_i_02,rw,3,255,255,13,255,
ZS,02,zs_pass_i,02,0x058b,ZS_02_zs_pass_i_02,rw,3,0,1,21,1,
ZS,02,zs_mask_i,02,0x058b,ZS_02_zs_mask_i_02,rw,3,0,1,22,1,
ZS,02,zs_lambda,03,0x058e,ZS_02_zs_lambda_03,rw,3,32,127,0,127,
ZS,02,zs_kappa,03,0x058e,ZS_02_zs_kappa_03,rw,3,32,63,7,63,
ZS,02,zs_c_i,03,0x058e,ZS_02_zs_c_i_03,rw,3,255,255,13,255,
ZS,02,zs_pass_i,03,0x058e,ZS_02_zs_pass_i_03,rw,3,0,1,21,1,
ZS,02,zs_mask_i,03,0x058e,ZS_02_zs_mask_i_03,rw,3,0,1,22,1,
ZS,02,zs_lambda,04,0x0591,ZS_02_zs_lambda_04,rw,3,32,127,0,127,
ZS,02,zs_kappa,04,0x0591,ZS_02_zs_kappa_04,rw,3,32,63,7,63,
ZS,02,zs_c_i,04,0x0591,ZS_02_zs_c_i_04,rw,3,255,255,13,255,
ZS,02,zs_pass_i,04,0x0591,ZS_02_zs_pass_i_04,rw,3,0,1,21,1,
ZS,02,zs_mask_i,04,0x0591,ZS_02_zs_mask_i_04,rw,3,0,1,22,1,
ZS,02,zs_lambda,05,0x0594,ZS_02_zs_lambda_05,rw,3,32,127,0,127,
ZS,02,zs_kappa,05,0x0594,ZS_02_zs_kappa_05,rw,3,32,63,7,63,
ZS,02,zs_c_i,05,0x0594,ZS_02_zs_c_i_05,rw,3,255,255,13,255,
ZS,02,zs_pass_i,05,0x0594,ZS_02_zs_pass_i_05,rw,3,0,1,21,1,
ZS,02,zs_mask_i,05,0x0594,ZS_02_zs_mask_i_05,rw,3,0,1,22,1,
ZS,02,zs_lambda,06,0x0597,ZS_02_zs_lambda_06,rw,3,32,127,0,127,
ZS,02,zs_kappa,06,0x0597,ZS_02_zs_kappa_06,rw,3,32,63,7,63,
ZS,02,zs_c_i,06,0x0597,ZS_02_zs_c_i_06,rw,3,255,255,13,255,
ZS,02,zs_pass_i,06,0x0597,ZS_02_zs_pass_i_06,rw,3,0,1,21,1,
ZS,02,zs_mask_i,06,0x0597,ZS_02_zs_mask_i_06,rw,3,0,1,22,1,
ZS,02,zs_lambda,07,0x059a,ZS_02_zs_lambda_07,rw,3,32,127,0,127,
ZS,02,zs_kappa,07,0x059a,ZS_02_zs_kappa_07,rw,3,32,63,7,63,
ZS,02,zs_c_i,07,0x059a,ZS_02_zs_c_i_07,rw,3,255,255,13,255,
ZS,02,zs_pass_i,07,0x059a,ZS_02_zs_pass_i_07,rw,3,0,1,21,1,
ZS,02,zs_mask_i,07,0x059a,ZS_02_zs_mask_i_07,rw,3,0,1,22,1,
ZS,02,zs_lambda,08,0x059d,ZS_02_zs_lambda_08,rw,3,32,127,0,127,
ZS,02,zs_kappa,08,0x059d,ZS_02_zs_kappa_08,rw,3,32,63,7,63,
ZS,02,zs_c_i,08,0x059d,ZS_02_zs_c_i_08,rw,3,255,255,13,255,
ZS,02,zs_pass_i,08,0x059d,ZS_02_zs_pass_i_08,rw,3,0,1,21,1,
ZS,02,zs_mask_i,08,0x059d,ZS_02_zs_mask_i_08,rw,3,0,1,22,1,
ZS,02,zs_lambda,09,0x05a0,ZS_02_zs_lambda_09,rw,3,32,127,0,127,
ZS,02,zs_kappa,09,0x05a0,ZS_02_zs_kappa_09,rw,3,32,63,7,63,
ZS,02,zs_c_i,09,0x05a0,ZS_02_zs_c_i_09,rw,3,255,255,13,255,
ZS,02,zs_pass_i,09,0x05a0,ZS_02_zs_pass_i_09,rw,3,0,1,21,1,
ZS,02,zs_mask_i,09,0x05a0,ZS_02_zs_mask_i_09,rw,3,0,1,22,1,
ZS,02,zs_lambda,10,0x05a3,ZS_02_zs_lambda_10,rw,3,32,127,0,127,
ZS,02,zs_kappa,10,0x05a3,ZS_02_zs_kappa_10,rw,3,32,63,7,63,
ZS,02,zs_c_i,10,0x05a3,ZS_02_zs_c_i_10,rw,3,255,255,13,255,
ZS,02,zs_pass_i,10,0x05a3,ZS_02_zs_pass_i_10,rw,3,0,1,21,1,
ZS,02,zs_mask_i,10,0x05a3,ZS_02_zs_mask_i_10,rw,3,0,1,22,1,
ZS,02,zs_lambda,11,0x05a6,ZS_02_zs_lambda_11,rw,3,32,127,0,127,
ZS,02,zs_kappa,11,0x05a6,ZS_02_zs_kappa_11,rw,3,32,63,7,63,
ZS,02,zs_c_i,11,0x05a6,ZS_02_zs_c_i_11,rw,3,255,255,13,255,
ZS,02,zs_pass_i,11,0x05a6,ZS_02_zs_pass_i_11,rw,3,0,1,21,1,
ZS,02,zs_mask_i,11,0x05a6,ZS_02_zs_mask_i_11,rw,3,0,1,22,1,
ZS,02,zs_lambda,12,0x05a9,ZS_02_zs_lambda_12,rw,3,32,127,0,127,
ZS,02,zs_kappa,12,0x05a9,ZS_02_zs_kappa_12,rw,3,32,63,7,63,
ZS,02,zs_c_i,12,0x05a9,ZS_02_zs_c_i_12,rw,3,255,255,13,255,
ZS,02,zs_pass_i,12,0x05a9,ZS_02_zs_pass_i_12,rw,3,0,1,21,1,
ZS,02,zs_mask_i,12,0x05a9,ZS_02_zs_mask_i_12,rw,3,0,1,22,1,
ZS,02,zs_lambda,13,0x05ac,ZS_02_zs_lambda_13,rw,3,32,127,0,127,
ZS,02,zs_kappa,13,0x05ac,ZS_02_zs_kappa_13,rw,3,32,63,7,63,
ZS,02,zs_c_i,13,0x05ac,ZS_02_zs_c_i_13,rw,3,255,255,13,255,
ZS,02,zs_pass_i,13,0x05ac,ZS_02_zs_pass_i_13,rw,3,0,1,21,1,
ZS,02,zs_mask_i,13,0x05ac,ZS_02_zs_mask_i_13,rw,3,0,1,22,1,
ZS,02,zs_lambda,14,0x05af,ZS_02_zs_lambda_14,rw,3,32,127,0,127,
ZS,02,zs_kappa,14,0x05af,ZS_02_zs_kappa_14,rw,3,32,63,7,63,
ZS,02,zs_c_i,14,0x05af,ZS_02_zs_c_i_14,rw,3,255,255,13,255,
ZS,02,zs_pass_i,14,0x05af,ZS_02_zs_pass_i_14,rw,3,0,1,21,1,
ZS,02,zs_mask_i,14,0x05af,ZS_02_zs_mask_i_14,rw,3,0,1,22,1,
ZS,02,zs_lambda,15,0x05b2,ZS_02_zs_lambda_15,rw,3,32,127,0,127,
ZS,02,zs_kappa,15,0x05b2,ZS_02_zs_kappa_15,rw,3,32,63,7,63,
ZS,02,zs_c_i,15,0x05b2,ZS_02_zs_c_i_15,rw,3,255,255,13,255,
ZS,02,zs_pass_i,15,0x05b2,ZS_02_zs_pass_i_15,rw,3,0,1,21,1,
ZS,02,zs_mask_i,15,0x05b2,ZS_02_zs_mask_i_15,rw,3,0,1,22,1,
ZS,02,zs_lambda,16,0x05b5,ZS_02_zs_lambda_16,rw,3,32,127,0,127,
ZS,02,zs_kappa,16,0x05b5,ZS_02_zs_kappa_16,rw,3,32,63,7,63,
ZS,02,zs_c_i,16,0x05b5,ZS_02_zs_c_i_16,rw,3,255,255,13,255,
ZS,02,zs_pass_i,16,0x05b5,ZS_02_zs_pass_i_16,rw,3,0,1,21,1,
ZS,02,zs_mask_i,16,0x05b5,ZS_02_zs_mask_i_16,rw,3,0,1,22,1,
ZS,02,zs_lambda,17,0x05b8,ZS_02_zs_lambda_17,rw,3,32,127,0,127,
ZS,02,zs_kappa,17,0x05b8,ZS_02_zs_kappa_17,rw,3,32,63,7,63,
ZS,02,zs_c_i,17,0x05b8,ZS_02_zs_c_i_17,rw,3,255,255,13,255,
ZS,02,zs_pass_i,17,0x05b8,ZS_02_zs_pass_i_17,rw,3,0,1,21,1,
ZS,02,zs_mask_i,17,0x05b8,ZS_02_zs_mask_i_17,rw,3,0,1,22,1,
ZS,02,zs_lambda,18,0x05bb,ZS_02_zs_lambda_18,rw,3,32,127,0,127,
ZS,02,zs_kappa,18,0x05bb,ZS_02_zs_kappa_18,rw,3,32,63,7,63,
ZS,02,zs_c_i,18,0x05bb,ZS_02_zs_c_i_18,rw,3,255,255,13,255,
ZS,02,zs_pass_i,18,0x05bb,ZS_02_zs_pass_i_18,rw,3,0,1,21,1,
ZS,02,zs_mask_i,18,0x05bb,ZS_02_zs_mask_i_18,rw,3,0,1,22,1,
ZS,02,zs_lambda,19,0x05be,ZS_02_zs_lambda_19,rw,3,32,127,0,127,
ZS,02,zs_kappa,19,0x05be,ZS_02_zs_kappa_19,rw,3,32,63,7,63,
ZS,02,zs_c_i,19,0x05be,ZS_02_zs_c_i_19,rw,3,255,255,13,255,
ZS,02,zs_pass_i,19,0x05be,ZS_02_zs_pass_i_19,rw,3,0,1,21,1,
ZS,02,zs_mask_i,19,0x05be,ZS_02_zs_mask_i_19,rw,3,0,1,22,1,
ZS,02,zs_lambda,20,0x05c1,ZS_02_zs_lambda_20,rw,3,32,127,0,127,
ZS,02,zs_kappa,20,0x05c1,ZS_02_zs_kappa_20,rw,3,32,63,7,63,
ZS,02,zs_c_i,20,0x05c1,ZS_02_zs_c_i_20,rw,3,255,255,13,255,
ZS,02,zs_pass_i,20,0x05c1,ZS_02_zs_pass_i_20,rw,3,0,1,21,1,
ZS,02,zs_mask_i,20,0x05c1,ZS_02_zs_mask_i_20,rw,3,0,1,22,1,
ZS,02,zs_lambda,21,0x05c4,ZS_02_zs_lambda_21,rw,3,32,127,0,127,
ZS,02,zs_kappa,21,0x05c4,ZS_02_zs_kappa_21,rw,3,32,63,7,63,
ZS,02,zs_c_i,21,0x05c4,ZS_02_zs_c_i_21,rw,3,255,255,13,255,
ZS,02,zs_pass_i,21,0x05c4,ZS_02_zs_pass_i_21,rw,3,0,1,21,1,
ZS,02,zs_mask_i,21,0x05c4,ZS_02_zs_mask_i_21,rw,3,0,1,22,1,
ZS,02,zs_lambda,22,0x05c7,ZS_02_zs_lambda_22,rw,3,32,127,0,127,
ZS,02,zs_kappa,22,0x05c7,ZS_02_zs_kappa_22,rw,3,32,63,7,63,
ZS,02,zs_c_i,22,0x05c7,ZS_02_zs_c_i_22,rw,3,255,255,13,255,
ZS,02,zs_pass_i,22,0x05c7,ZS_02_zs_pass_i_22,rw,3,0,1,21,1,
ZS,02,zs_mask_i,22,0x05c7,ZS_02_zs_mask_i_22,rw,3,0,1,22,1,
ZS,02,zs_lambda,23,0x05ca,ZS_02_zs_lambda_23,rw,3,32,127,0,127,
ZS,02,zs_kappa,23,0x05ca,ZS_02_zs_kappa_23,rw,3,32,63,7,63,
ZS,02,zs_c_i,23,0x05ca,ZS_02_zs_c_i_23,rw,3,255,255,13,255,
ZS,02,zs_pass_i,23,0x05ca,ZS_02_zs_pass_i_23,rw,3,0,1,21,1,
ZS,02,zs_mask_i,23,0x05ca,ZS_02_zs_mask_i_23,rw,3,0,1,22,1,
ZS,02,zs_lambda,24,0x05cd,ZS_02_zs_lambda_24,rw,3,32,127,0,127,
ZS,02,zs_kappa,24,0x05cd,ZS_02_zs_kappa_24,rw,3,32,63,7,63,
ZS,02,zs_c_i,24,0x05cd,ZS_02_zs_c_i_24,rw,3,255,255,13,255,
ZS,02,zs_pass_i,24,0x05cd,ZS_02_zs_pass_i_24,rw,3,0,1,21,1,
ZS,02,zs_mask_i,24,0x05cd,ZS_02_zs_mask_i_24,rw,3,0,1,22,1,
ZS,02,zs_lambda,25,0x05d0,ZS_02_zs_lambda_25,rw,3,32,127,0,127,
ZS,02,zs_kappa,25,0x05d0,ZS_02_zs_kappa_25,rw,3,32,63,7,63,
ZS,02,zs_c_i,25,0x05d0,ZS_02_zs_c_i_25,rw,3,255,255,13,255,
ZS,02,zs_pass_i,25,0x05d0,ZS_02_zs_pass_i_25,rw,3,0,1,21,1,
ZS,02,zs_mask_i,25,0x05d0,ZS_02_zs_mask_i_25,rw,3,0,1,22,1,
ZS,02,zs_lambda,26,0x05d3,ZS_02_zs_lambda_26,rw,3,32,127,0,127,
ZS,02,zs_kappa,26,0x05d3,ZS_02_zs_kappa_26,rw,3,32,63,7,63,
ZS,02,zs_c_i,26,0x05d3,ZS_02_zs_c_i_26,rw,3,255,255,13,255,
ZS,02,zs_pass_i,26,0x05d3,ZS_02_zs_pass_i_26,rw,3,0,1,21,1,
ZS,02,zs_mask_i,26,0x05d3,ZS_02_zs_mask_i_26,rw,3,0,1,22,1,
ZS,02,zs_lambda,27,0x05d6,ZS_02_zs_lambda_27,rw,3,32,127,0,127,
ZS,02,zs_kappa,27,0x05d6,ZS_02_zs_kappa_27,rw,3,32,63,7,63,
ZS,02,zs_c_i,27,0x05d6,ZS_02_zs_c_i_27,rw,3,255,255,13,255,
ZS,02,zs_pass_i,27,0x05d6,ZS_02_zs_pass_i_27,rw,3,0,1,21,1,
ZS,02,zs_mask_i,27,0x05d6,ZS_02_zs_mask_i_27,rw,3,0,1,22,1,
ZS,02,zs_lambda,28,0x05d9,ZS_02_zs_lambda_28,rw,3,32,127,0,127,
ZS,02,zs_kappa,28,0x05d9,ZS_02_zs_kappa_28,rw,3,32,63,7,63,
ZS,02,zs_c_i,28,0x05d9,ZS_02_zs_c_i_28,rw,3,255,255,13,255,
ZS,02,zs_pass_i,28,0x05d9,ZS_02_zs_pass_i_28,rw,3,0,1,21,1,
ZS,02,zs_mask_i,28,0x05d9,ZS_02_zs_mask_i_28,rw,3,0,1,22,1,
ZS,02,zs_lambda,29,0x05dc,ZS_02_zs_lambda_29,rw,3,32,127,0,127,
ZS,02,zs_kappa,29,0x05dc,ZS_02_zs_kappa_29,rw,3,32,63,7,63,
ZS,02,zs_c_i,29,0x05dc,ZS_02_zs_c_i_29,rw,3,255,255,13,255,
ZS,02,zs_pass_i,29,0x05dc,ZS_02_zs_pass_i_29,rw,3,0,1,21,1,
ZS,02,zs_mask_i,29,0x05dc,ZS_02_zs_mask_i_29,rw,3,0,1,22,1,
ZS,02,zs_lambda,30,0x05df,ZS_02_zs_lambda_30,rw,3,32,127,0,127,
ZS,02,zs_kappa,30,0x05df,ZS_02_zs_kappa_30,rw,3,32,63,7,63,
ZS,02,zs_c_i,30,0x05df,ZS_02_zs_c_i_30,rw,3,255,255,13,255,
ZS,02,zs_pass_i,30,0x05df,ZS_02_zs_pass_i_30,rw,3,0,1,21,1,
ZS,02,zs_mask_i,30,0x05df,ZS_02_zs_mask_i_30,rw,3,0,1,22,1,
ZS,02,zs_lambda,31,0x05e2,ZS_02_zs_lambda_31,rw,3,32,127,0,127,
ZS,02,zs_kappa,31,0x05e2,ZS_02_zs_kappa_31,rw,3,32,63,7,63,
ZS,02,zs_c_i,31,0x05e2,ZS_02_zs_c_i_31,rw,3,255,255,13,255,
ZS,02,zs_pass_i,31,0x05e2,ZS_02_zs_pass_i_31,rw,3,0,1,21,1,
ZS,02,zs_mask_i,31,0x05e2,ZS_02_zs_mask_i_31,rw,3,0,1,22,1,
ZS,02,zs_lambda,32,0x05e5,ZS_02_zs_lambda_32,rw,3,32,127,0,127,
ZS,02,zs_kappa,32,0x05e5,ZS_02_zs_kappa_32,rw,3,32,63,7,63,
ZS,02,zs_c_i,32,0x05e5,ZS_02_zs_c_i_32,rw,3,255,255,13,255,
ZS,02,zs_pass_i,32,0x05e5,ZS_02_zs_pass_i_32,rw,3,0,1,21,1,
ZS,02,zs_mask_i,32,0x05e5,ZS_02_zs_mask_i_32,rw,3,0,1,22,1,
ZS,02,zs_lambda,33,0x05e8,ZS_02_zs_lambda_33,rw,3,32,127,0,127,
ZS,02,zs_kappa,33,0x05e8,ZS_02_zs_kappa_33,rw,3,32,63,7,63,
ZS,02,zs_c_i,33,0x05e8,ZS_02_zs_c_i_33,rw,3,255,255,13,255,
ZS,02,zs_pass_i,33,0x05e8,ZS_02_zs_pass_i_33,rw,3,0,1,21,1,
ZS,02,zs_mask_i,33,0x05e8,ZS_02_zs_mask_i_33,rw,3,0,1,22,1,
ZS,02,zs_lambda,34,0x05eb,ZS_02_zs_lambda_34,rw,3,32,127,0,127,
ZS,02,zs_kappa,34,0x05eb,ZS_02_zs_kappa_34,rw,3,32,63,7,63,
ZS,02,zs_c_i,34,0x05eb,ZS_02_zs_c_i_34,rw,3,255,255,13,255,
ZS,02,zs_pass_i,34,0x05eb,ZS_02_zs_pass_i_34,rw,3,0,1,21,1,
ZS,02,zs_mask_i,34,0x05eb,ZS_02_zs_mask_i_34,rw,3,0,1,22,1,
ZS,02,zs_lambda,35,0x05ee,ZS_02_zs_lambda_35,rw,3,32,127,0,127,
ZS,02,zs_kappa,35,0x05ee,ZS_02_zs_kappa_35,rw,3,32,63,7,63,
ZS,02,zs_c_i,35,0x05ee,ZS_02_zs_c_i_35,rw,3,255,255,13,255,
ZS,02,zs_pass_i,35,0x05ee,ZS_02_zs_pass_i_35,rw,3,0,1,21,1,
ZS,02,zs_mask_i,35,0x05ee,ZS_02_zs_mask_i_35,rw,3,0,1,22,1,
ZS,02,zs_lambda,36,0x05f1,ZS_02_zs_lambda_36,rw,3,32,127,0,127,
ZS,02,zs_kappa,36,0x05f1,ZS_02_zs_kappa_36,rw,3,32,63,7,63,
ZS,02,zs_c_i,36,0x05f1,ZS_02_zs_c_i_36,rw,3,255,255,13,255,
ZS,02,zs_pass_i,36,0x05f1,ZS_02_zs_pass_i_36,rw,3,0,1,21,1,
ZS,02,zs_mask_i,36,0x05f1,ZS_02_zs_mask_i_36,rw,3,0,1,22,1,
ZS,03,zs_lambda,00,0x05f4,ZS_03_zs_lambda_00,rw,3,32,127,0,127,
ZS,03,zs_kappa,00,0x05f4,ZS_03_zs_kappa_00,rw,3,32,63,7,63,
ZS,03,zs_c_i,00,0x05f4,ZS_03_zs_c_i_00,rw,3,255,255,13,255,
ZS,03,zs_pass_i,00,0x05f4,ZS_03_zs_pass_i_00,rw,3,0,1,21,1,
ZS,03,zs_mask_i,00,0x05f4,ZS_03_zs_mask_i_00,rw,3,0,1,22,1,
ZS,03,zs_lambda,01,0x05f7,ZS_03_zs_lambda_01,rw,3,32,127,0,127,
ZS,03,zs_kappa,01,0x05f7,ZS_03_zs_kappa_01,rw,3,32,63,7,63,
ZS,03,zs_c_i,01,0x05f7,ZS_03_zs_c_i_01,rw,3,255,255,13,255,
ZS,03,zs_pass_i,01,0x05f7,ZS_03_zs_pass_i_01,rw,3,0,1,21,1,
ZS,03,zs_mask_i,01,0x05f7,ZS_03_zs_mask_i_01,rw,3,0,1,22,1,
ZS,03,zs_lambda,02,0x05fa,ZS_03_zs_lambda_02,rw,3,32,127,0,127,
ZS,03,zs_kappa,02,0x05fa,ZS_03_zs_kappa_02,rw,3,32,63,7,63,
ZS,03,zs_c_i,02,0x05fa,ZS_03_zs_c_i_02,rw,3,255,255,13,255,
ZS,03,zs_pass_i,02,0x05fa,ZS_03_zs_pass_i_02,rw,3,0,1,21,1,
ZS,03,zs_mask_i,02,0x05fa,ZS_03_zs_mask_i_02,rw,3,0,1,22,1,
ZS,03,zs_lambda,03,0x05fd,ZS_03_zs_lambda_03,rw,3,32,127,0,127,
ZS,03,zs_kappa,03,0x05fd,ZS_03_zs_kappa_03,rw,3,32,63,7,63,
ZS,03,zs_c_i,03,0x05fd,ZS_03_zs_c_i_03,rw,3,255,255,13,255,
ZS,03,zs_pass_i,03,0x05fd,ZS_03_zs_pass_i_03,rw,3,0,1,21,1,
ZS,03,zs_mask_i,03,0x05fd,ZS_03_zs_mask_i_03,rw,3,0,1,22,1,
ZS,03,zs_lambda,04,0x0600,ZS_03_zs_lambda_04,rw,3,32,127,0,127,
ZS,03,zs_kappa,04,0x0600,ZS_03_zs_kappa_04,rw,3,32,63,7,63,
ZS,03,zs_c_i,04,0x0600,ZS_03_zs_c_i_04,rw,3,255,255,13,255,
ZS,03,zs_pass_i,04,0x0600,ZS_03_zs_pass_i_04,rw,3,0,1,21,1,
ZS,03,zs_mask_i,04,0x0600,ZS_03_zs_mask_i_04,rw,3,0,1,22,1,
ZS,03,zs_lambda,05,0x0603,ZS_03_zs_lambda_05,rw,3,32,127,0,127,
ZS,03,zs_kappa,05,0x0603,ZS_03_zs_kappa_05,rw,3,32,63,7,63,
ZS,03,zs_c_i,05,0x0603,ZS_03_zs_c_i_05,rw,3,255,255,13,255,
ZS,03,zs_pass_i,05,0x0603,ZS_03_zs_pass_i_05,rw,3,0,1,21,1,
ZS,03,zs_mask_i,05,0x0603,ZS_03_zs_mask_i_05,rw,3,0,1,22,1,
ZS,03,zs_lambda,06,0x0606,ZS_03_zs_lambda_06,rw,3,32,127,0,127,
ZS,03,zs_kappa,06,0x0606,ZS_03_zs_kappa_06,rw,3,32,63,7,63,
ZS,03,zs_c_i,06,0x0606,ZS_03_zs_c_i_06,rw,3,255,255,13,255,
ZS,03,zs_pass_i,06,0x0606,ZS_03_zs_pass_i_06,rw,3,0,1,21,1,
ZS,03,zs_mask_i,06,0x0606,ZS_03_zs_mask_i_06,rw,3,0,1,22,1,
ZS,03,zs_lambda,07,0x0609,ZS_03_zs_lambda_07,rw,3,32,127,0,127,
ZS,03,zs_kappa,07,0x0609,ZS_03_zs_kappa_07,rw,3,32,63,7,63,
ZS,03,zs_c_i,07,0x0609,ZS_03_zs_c_i_07,rw,3,255,255,13,255,
ZS,03,zs_pass_i,07,0x0609,ZS_03_zs_pass_i_07,rw,3,0,1,21,1,
ZS,03,zs_mask_i,07,0x0609,ZS_03_zs_mask_i_07,rw,3,0,1,22,1,
ZS,03,zs_lambda,08,0x060c,ZS_03_zs_lambda_08,rw,3,32,127,0,127,
ZS,03,zs_kappa,08,0x060c,ZS_03_zs_kappa_08,rw,3,32,63,7,63,
ZS,03,zs_c_i,08,0x060c,ZS_03_zs_c_i_08,rw,3,255,255,13,255,
ZS,03,zs_pass_i,08,0x060c,ZS_03_zs_pass_i_08,rw,3,0,1,21,1,
ZS,03,zs_mask_i,08,0x060c,ZS_03_zs_mask_i_08,rw,3,0,1,22,1,
ZS,03,zs_lambda,09,0x060f,ZS_03_zs_lambda_09,rw,3,32,127,0,127,
ZS,03,zs_kappa,09,0x060f,ZS_03_zs_kappa_09,rw,3,32,63,7,63,
ZS,03,zs_c_i,09,0x060f,ZS_03_zs_c_i_09,rw,3,255,255,13,255,
ZS,03,zs_pass_i,09,0x060f,ZS_03_zs_pass_i_09,rw,3,0,1,21,1,
ZS,03,zs_mask_i,09,0x060f,ZS_03_zs_mask_i_09,rw,3,0,1,22,1,
ZS,03,zs_lambda,10,0x0612,ZS_03_zs_lambda_10,rw,3,32,127,0,127,
ZS,03,zs_kappa,10,0x0612,ZS_03_zs_kappa_10,rw,3,32,63,7,63,
ZS,03,zs_c_i,10,0x0612,ZS_03_zs_c_i_10,rw,3,255,255,13,255,
ZS,03,zs_pass_i,10,0x0612,ZS_03_zs_pass_i_10,rw,3,0,1,21,1,
ZS,03,zs_mask_i,10,0x0612,ZS_03_zs_mask_i_10,rw,3,0,1,22,1,
ZS,03,zs_lambda,11,0x0615,ZS_03_zs_lambda_11,rw,3,32,127,0,127,
ZS,03,zs_kappa,11,0x0615,ZS_03_zs_kappa_11,rw,3,32,63,7,63,
ZS,03,zs_c_i,11,0x0615,ZS_03_zs_c_i_11,rw,3,255,255,13,255,
ZS,03,zs_pass_i,11,0x0615,ZS_03_zs_pass_i_11,rw,3,0,1,21,1,
ZS,03,zs_mask_i,11,0x0615,ZS_03_zs_mask_i_11,rw,3,0,1,22,1,
ZS,03,zs_lambda,12,0x0618,ZS_03_zs_lambda_12,rw,3,32,127,0,127,
ZS,03,zs_kappa,12,0x0618,ZS_03_zs_kappa_12,rw,3,32,63,7,63,
ZS,03,zs_c_i,12,0x0618,ZS_03_zs_c_i_12,rw,3,255,255,13,255,
ZS,03,zs_pass_i,12,0x0618,ZS_03_zs_pass_i_12,rw,3,0,1,21,1,
ZS,03,zs_mask_i,12,0x0618,ZS_03_zs_mask_i_12,rw,3,0,1,22,1,
ZS,03,zs_lambda,13,0x061b,ZS_03_zs_lambda_13,rw,3,32,127,0,127,
ZS,03,zs_kappa,13,0x061b,ZS_03_zs_kappa_13,rw,3,32,63,7,63,
ZS,03,zs_c_i,13,0x061b,ZS_03_zs_c_i_13,rw,3,255,255,13,255,
ZS,03,zs_pass_i,13,0x061b,ZS_03_zs_pass_i_13,rw,3,0,1,21,1,
ZS,03,zs_mask_i,13,0x061b,ZS_03_zs_mask_i_13,rw,3,0,1,22,1,
ZS,03,zs_lambda,14,0x061e,ZS_03_zs_lambda_14,rw,3,32,127,0,127,
ZS,03,zs_kappa,14,0x061e,ZS_03_zs_kappa_14,rw,3,32,63,7,63,
ZS,03,zs_c_i,14,0x061e,ZS_03_zs_c_i_14,rw,3,255,255,13,255,
ZS,03,zs_pass_i,14,0x061e,ZS_03_zs_pass_i_14,rw,3,0,1,21,1,
ZS,03,zs_mask_i,14,0x061e,ZS_03_zs_mask_i_14,rw,3,0,1,22,1,
ZS,03,zs_lambda,15,0x0621,ZS_03_zs_lambda_15,rw,3,32,127,0,127,
ZS,03,zs_kappa,15,0x0621,ZS_03_zs_kappa_15,rw,3,32,63,7,63,
ZS,03,zs_c_i,15,0x0621,ZS_03_zs_c_i_15,rw,3,255,255,13,255,
ZS,03,zs_pass_i,15,0x0621,ZS_03_zs_pass_i_15,rw,3,0,1,21,1,
ZS,03,zs_mask_i,15,0x0621,ZS_03_zs_mask_i_15,rw,3,0,1,22,1,
ZS,03,zs_lambda,16,0x0624,ZS_03_zs_lambda_16,rw,3,32,127,0,127,
ZS,03,zs_kappa,16,0x0624,ZS_03_zs_kappa_16,rw,3,32,63,7,63,
ZS,03,zs_c_i,16,0x0624,ZS_03_zs_c_i_16,rw,3,255,255,13,255,
ZS,03,zs_pass_i,16,0x0624,ZS_03_zs_pass_i_16,rw,3,0,1,21,1,
ZS,03,zs_mask_i,16,0x0624,ZS_03_zs_mask_i_16,rw,3,0,1,22,1,
ZS,03,zs_lambda,17,0x0627,ZS_03_zs_lambda_17,rw,3,32,127,0,127,
ZS,03,zs_kappa,17,0x0627,ZS_03_zs_kappa_17,rw,3,32,63,7,63,
ZS,03,zs_c_i,17,0x0627,ZS_03_zs_c_i_17,rw,3,255,255,13,255,
ZS,03,zs_pass_i,17,0x0627,ZS_03_zs_pass_i_17,rw,3,0,1,21,1,
ZS,03,zs_mask_i,17,0x0627,ZS_03_zs_mask_i_17,rw,3,0,1,22,1,
ZS,03,zs_lambda,18,0x062a,ZS_03_zs_lambda_18,rw,3,32,127,0,127,
ZS,03,zs_kappa,18,0x062a,ZS_03_zs_kappa_18,rw,3,32,63,7,63,
ZS,03,zs_c_i,18,0x062a,ZS_03_zs_c_i_18,rw,3,255,255,13,255,
ZS,03,zs_pass_i,18,0x062a,ZS_03_zs_pass_i_18,rw,3,0,1,21,1,
ZS,03,zs_mask_i,18,0x062a,ZS_03_zs_mask_i_18,rw,3,0,1,22,1,
ZS,03,zs_lambda,19,0x062d,ZS_03_zs_lambda_19,rw,3,32,127,0,127,
ZS,03,zs_kappa,19,0x062d,ZS_03_zs_kappa_19,rw,3,32,63,7,63,
ZS,03,zs_c_i,19,0x062d,ZS_03_zs_c_i_19,rw,3,255,255,13,255,
ZS,03,zs_pass_i,19,0x062d,ZS_03_zs_pass_i_19,rw,3,0,1,21,1,
ZS,03,zs_mask_i,19,0x062d,ZS_03_zs_mask_i_19,rw,3,0,1,22,1,
ZS,03,zs_lambda,20,0x0630,ZS_03_zs_lambda_20,rw,3,32,127,0,127,
ZS,03,zs_kappa,20,0x0630,ZS_03_zs_kappa_20,rw,3,32,63,7,63,
ZS,03,zs_c_i,20,0x0630,ZS_03_zs_c_i_20,rw,3,255,255,13,255,
ZS,03,zs_pass_i,20,0x0630,ZS_03_zs_pass_i_20,rw,3,0,1,21,1,
ZS,03,zs_mask_i,20,0x0630,ZS_03_zs_mask_i_20,rw,3,0,1,22,1,
ZS,03,zs_lambda,21,0x0633,ZS_03_zs_lambda_21,rw,3,32,127,0,127,
ZS,03,zs_kappa,21,0x0633,ZS_03_zs_kappa_21,rw,3,32,63,7,63,
ZS,03,zs_c_i,21,0x0633,ZS_03_zs_c_i_21,rw,3,255,255,13,255,
ZS,03,zs_pass_i,21,0x0633,ZS_03_zs_pass_i_21,rw,3,0,1,21,1,
ZS,03,zs_mask_i,21,0x0633,ZS_03_zs_mask_i_21,rw,3,0,1,22,1,
ZS,03,zs_lambda,22,0x0636,ZS_03_zs_lambda_22,rw,3,32,127,0,127,
ZS,03,zs_kappa,22,0x0636,ZS_03_zs_kappa_22,rw,3,32,63,7,63,
ZS,03,zs_c_i,22,0x0636,ZS_03_zs_c_i_22,rw,3,255,255,13,255,
ZS,03,zs_pass_i,22,0x0636,ZS_03_zs_pass_i_22,rw,3,0,1,21,1,
ZS,03,zs_mask_i,22,0x0636,ZS_03_zs_mask_i_22,rw,3,0,1,22,1,
ZS,03,zs_lambda,23,0x0639,ZS_03_zs_lambda_23,rw,3,32,127,0,127,
ZS,03,zs_kappa,23,0x0639,ZS_03_zs_kappa_23,rw,3,32,63,7,63,
ZS,03,zs_c_i,23,0x0639,ZS_03_zs_c_i_23,rw,3,255,255,13,255,
ZS,03,zs_pass_i,23,0x0639,ZS_03_zs_pass_i_23,rw,3,0,1,21,1,
ZS,03,zs_mask_i,23,0x0639,ZS_03_zs_mask_i_23,rw,3,0,1,22,1,
ZS,03,zs_lambda,24,0x063c,ZS_03_zs_lambda_24,rw,3,32,127,0,127,
ZS,03,zs_kappa,24,0x063c,ZS_03_zs_kappa_24,rw,3,32,63,7,63,
ZS,03,zs_c_i,24,0x063c,ZS_03_zs_c_i_24,rw,3,255,255,13,255,
ZS,03,zs_pass_i,24,0x063c,ZS_03_zs_pass_i_24,rw,3,0,1,21,1,
ZS,03,zs_mask_i,24,0x063c,ZS_03_zs_mask_i_24,rw,3,0,1,22,1,
ZS,03,zs_lambda,25,0x063f,ZS_03_zs_lambda_25,rw,3,32,127,0,127,
ZS,03,zs_kappa,25,0x063f,ZS_03_zs_kappa_25,rw,3,32,63,7,63,
ZS,03,zs_c_i,25,0x063f,ZS_03_zs_c_i_25,rw,3,255,255,13,255,
ZS,03,zs_pass_i,25,0x063f,ZS_03_zs_pass_i_25,rw,3,0,1,21,1,
ZS,03,zs_mask_i,25,0x063f,ZS_03_zs_mask_i_25,rw,3,0,1,22,1,
ZS,03,zs_lambda,26,0x0642,ZS_03_zs_lambda_26,rw,3,32,127,0,127,
ZS,03,zs_kappa,26,0x0642,ZS_03_zs_kappa_26,rw,3,32,63,7,63,
ZS,03,zs_c_i,26,0x0642,ZS_03_zs_c_i_26,rw,3,255,255,13,255,
ZS,03,zs_pass_i,26,0x0642,ZS_03_zs_pass_i_26,rw,3,0,1,21,1,
ZS,03,zs_mask_i,26,0x0642,ZS_03_zs_mask_i_26,rw,3,0,1,22,1,
ZS,03,zs_lambda,27,0x0645,ZS_03_zs_lambda_27,rw,3,32,127,0,127,
ZS,03,zs_kappa,27,0x0645,ZS_03_zs_kappa_27,rw,3,32,63,7,63,
ZS,03,zs_c_i,27,0x0645,ZS_03_zs_c_i_27,rw,3,255,255,13,255,
ZS,03,zs_pass_i,27,0x0645,ZS_03_zs_pass_i_27,rw,3,0,1,21,1,
ZS,03,zs_mask_i,27,0x0645,ZS_03_zs_mask_i_27,rw,3,0,1,22,1,
ZS,03,zs_lambda,28,0x0648,ZS_03_zs_lambda_28,rw,3,32,127,0,127,
ZS,03,zs_kappa,28,0x0648,ZS_03_zs_kappa_28,rw,3,32,63,7,63,
ZS,03,zs_c_i,28,0x0648,ZS_03_zs_c_i_28,rw,3,255,255,13,255,
ZS,03,zs_pass_i,28,0x0648,ZS_03_zs_pass_i_28,rw,3,0,1,21,1,
ZS,03,zs_mask_i,28,0x0648,ZS_03_zs_mask_i_28,rw,3,0,1,22,1,
ZS,03,zs_lambda,29,0x064b,ZS_03_zs_lambda_29,rw,3,32,127,0,127,
ZS,03,zs_kappa,29,0x064b,ZS_03_zs_kappa_29,rw,3,32,63,7,63,
ZS,03,zs_c_i,29,0x064b,ZS_03_zs_c_i_29,rw,3,255,255,13,255,
ZS,03,zs_pass_i,29,0x064b,ZS_03_zs_pass_i_29,rw,3,0,1,21,1,
ZS,03,zs_mask_i,29,0x064b,ZS_03_zs_mask_i_29,rw,3,0,1,22,1,
ZS,03,zs_lambda,30,0x064e,ZS_03_zs_lambda_30,rw,3,32,127,0,127,
ZS,03,zs_kappa,30,0x064e,ZS_03_zs_kappa_30,rw,3,32,63,7,63,
ZS,03,zs_c_i,30,0x064e,ZS_03_zs_c_i_30,rw,3,255,255,13,255,
ZS,03,zs_pass_i,30,0x064e,ZS_03_zs_pass_i_30,rw,3,0,1,21,1,
ZS,03,zs_mask_i,30,0x064e,ZS_03_zs_mask_i_30,rw,3,0,1,22,1,
ZS,03,zs_lambda,31,0x0651,ZS_03_zs_lambda_31,rw,3,32,127,0,127,
ZS,03,zs_kappa,31,0x0651,ZS_03_zs_kappa_31,rw,3,32,63,7,63,
ZS,03,zs_c_i,31,0x0651,ZS_03_zs_c_i_31,rw,3,255,255,13,255,
ZS,03,zs_pass_i,31,0x0651,ZS_03_zs_pass_i_31,rw,3,0,1,21,1,
ZS,03,zs_mask_i,31,0x0651,ZS_03_zs_mask_i_31,rw,3,0,1,22,1,
ZS,03,zs_lambda,32,0x0654,ZS_03_zs_lambda_32,rw,3,32,127,0,127,
ZS,03,zs_kappa,32,0x0654,ZS_03_zs_kappa_32,rw,3,32,63,7,63,
ZS,03,zs_c_i,32,0x0654,ZS_03_zs_c_i_32,rw,3,255,255,13,255,
ZS,03,zs_pass_i,32,0x0654,ZS_03_zs_pass_i_32,rw,3,0,1,21,1,
ZS,03,zs_mask_i,32,0x0654,ZS_03_zs_mask_i_32,rw,3,0,1,22,1,
ZS,03,zs_lambda,33,0x0657,ZS_03_zs_lambda_33,rw,3,32,127,0,127,
ZS,03,zs_kappa,33,0x0657,ZS_03_zs_kappa_33,rw,3,32,63,7,63,
ZS,03,zs_c_i,33,0x0657,ZS_03_zs_c_i_33,rw,3,255,255,13,255,
ZS,03,zs_pass_i,33,0x0657,ZS_03_zs_pass_i_33,rw,3,0,1,21,1,
ZS,03,zs_mask_i,33,0x0657,ZS_03_zs_mask_i_33,rw,3,0,1,22,1,
ZS,03,zs_lambda,34,0x065a,ZS_03_zs_lambda_34,rw,3,32,127,0,127,
ZS,03,zs_kappa,34,0x065a,ZS_03_zs_kappa_34,rw,3,32,63,7,63,
ZS,03,zs_c_i,34,0x065a,ZS_03_zs_c_i_34,rw,3,255,255,13,255,
ZS,03,zs_pass_i,34,0x065a,ZS_03_zs_pass_i_34,rw,3,0,1,21,1,
ZS,03,zs_mask_i,34,0x065a,ZS_03_zs_mask_i_34,rw,3,0,1,22,1,
ZS,03,zs_lambda,35,0x065d,ZS_03_zs_lambda_35,rw,3,32,127,0,127,
ZS,03,zs_kappa,35,0x065d,ZS_03_zs_kappa_35,rw,3,32,63,7,63,
ZS,03,zs_c_i,35,0x065d,ZS_03_zs_c_i_35,rw,3,255,255,13,255,
ZS,03,zs_pass_i,35,0x065d,ZS_03_zs_pass_i_35,rw,3,0,1,21,1,
ZS,03,zs_mask_i,35,0x065d,ZS_03_zs_mask_i_35,rw,3,0,1,22,1,
ZS,03,zs_lambda,36,0x0660,ZS_03_zs_lambda_36,rw,3,32,127,0,127,
ZS,03,zs_kappa,36,0x0660,ZS_03_zs_kappa_36,rw,3,32,63,7,63,
ZS,03,zs_c_i,36,0x0660,ZS_03_zs_c_i_36,rw,3,255,255,13,255,
ZS,03,zs_pass_i,36,0x0660,ZS_03_zs_pass_i_36,rw,3,0,1,21,1,
ZS,03,zs_mask_i,36,0x0660,ZS_03_zs_mask_i_36,rw,3,0,1,22,1,
ZS,04,zs_lambda,00,0x0663,ZS_04_zs_lambda_00,rw,3,32,127,0,127,
ZS,04,zs_kappa,00,0x0663,ZS_04_zs_kappa_00,rw,3,32,63,7,63,
ZS,04,zs_c_i,00,0x0663,ZS_04_zs_c_i_00,rw,3,255,255,13,255,
ZS,04,zs_pass_i,00,0x0663,ZS_04_zs_pass_i_00,rw,3,0,1,21,1,
ZS,04,zs_mask_i,00,0x0663,ZS_04_zs_mask_i_00,rw,3,0,1,22,1,
ZS,04,zs_lambda,01,0x0666,ZS_04_zs_lambda_01,rw,3,32,127,0,127,
ZS,04,zs_kappa,01,0x0666,ZS_04_zs_kappa_01,rw,3,32,63,7,63,
ZS,04,zs_c_i,01,0x0666,ZS_04_zs_c_i_01,rw,3,255,255,13,255,
ZS,04,zs_pass_i,01,0x0666,ZS_04_zs_pass_i_01,rw,3,0,1,21,1,
ZS,04,zs_mask_i,01,0x0666,ZS_04_zs_mask_i_01,rw,3,0,1,22,1,
ZS,04,zs_lambda,02,0x0669,ZS_04_zs_lambda_02,rw,3,32,127,0,127,
ZS,04,zs_kappa,02,0x0669,ZS_04_zs_kappa_02,rw,3,32,63,7,63,
ZS,04,zs_c_i,02,0x0669,ZS_04_zs_c_i_02,rw,3,255,255,13,255,
ZS,04,zs_pass_i,02,0x0669,ZS_04_zs_pass_i_02,rw,3,0,1,21,1,
ZS,04,zs_mask_i,02,0x0669,ZS_04_zs_mask_i_02,rw,3,0,1,22,1,
ZS,04,zs_lambda,03,0x066c,ZS_04_zs_lambda_03,rw,3,32,127,0,127,
ZS,04,zs_kappa,03,0x066c,ZS_04_zs_kappa_03,rw,3,32,63,7,63,
ZS,04,zs_c_i,03,0x066c,ZS_04_zs_c_i_03,rw,3,255,255,13,255,
ZS,04,zs_pass_i,03,0x066c,ZS_04_zs_pass_i_03,rw,3,0,1,21,1,
ZS,04,zs_mask_i,03,0x066c,ZS_04_zs_mask_i_03,rw,3,0,1,22,1,
ZS,04,zs_lambda,04,0x066f,ZS_04_zs_lambda_04,rw,3,32,127,0,127,
ZS,04,zs_kappa,04,0x066f,ZS_04_zs_kappa_04,rw,3,32,63,7,63,
ZS,04,zs_c_i,04,0x066f,ZS_04_zs_c_i_04,rw,3,255,255,13,255,
ZS,04,zs_pass_i,04,0x066f,ZS_04_zs_pass_i_04,rw,3,0,1,21,1,
ZS,04,zs_mask_i,04,0x066f,ZS_04_zs_mask_i_04,rw,3,0,1,22,1,
ZS,04,zs_lambda,05,0x0672,ZS_04_zs_lambda_05,rw,3,32,127,0,127,
ZS,04,zs_kappa,05,0x0672,ZS_04_zs_kappa_05,rw,3,32,63,7,63,
ZS,04,zs_c_i,05,0x0672,ZS_04_zs_c_i_05,rw,3,255,255,13,255,
ZS,04,zs_pass_i,05,0x0672,ZS_04_zs_pass_i_05,rw,3,0,1,21,1,
ZS,04,zs_mask_i,05,0x0672,ZS_04_zs_mask_i_05,rw,3,0,1,22,1,
ZS,04,zs_lambda,06,0x0675,ZS_04_zs_lambda_06,rw,3,32,127,0,127,
ZS,04,zs_kappa,06,0x0675,ZS_04_zs_kappa_06,rw,3,32,63,7,63,
ZS,04,zs_c_i,06,0x0675,ZS_04_zs_c_i_06,rw,3,255,255,13,255,
ZS,04,zs_pass_i,06,0x0675,ZS_04_zs_pass_i_06,rw,3,0,1,21,1,
ZS,04,zs_mask_i,06,0x0675,ZS_04_zs_mask_i_06,rw,3,0,1,22,1,
ZS,04,zs_lambda,07,0x0678,ZS_04_zs_lambda_07,rw,3,32,127,0,127,
ZS,04,zs_kappa,07,0x0678,ZS_04_zs_kappa_07,rw,3,32,63,7,63,
ZS,04,zs_c_i,07,0x0678,ZS_04_zs_c_i_07,rw,3,255,255,13,255,
ZS,04,zs_pass_i,07,0x0678,ZS_04_zs_pass_i_07,rw,3,0,1,21,1,
ZS,04,zs_mask_i,07,0x0678,ZS_04_zs_mask_i_07,rw,3,0,1,22,1,
ZS,04,zs_lambda,08,0x067b,ZS_04_zs_lambda_08,rw,3,32,127,0,127,
ZS,04,zs_kappa,08,0x067b,ZS_04_zs_kappa_08,rw,3,32,63,7,63,
ZS,04,zs_c_i,08,0x067b,ZS_04_zs_c_i_08,rw,3,255,255,13,255,
ZS,04,zs_pass_i,08,0x067b,ZS_04_zs_pass_i_08,rw,3,0,1,21,1,
ZS,04,zs_mask_i,08,0x067b,ZS_04_zs_mask_i_08,rw,3,0,1,22,1,
ZS,04,zs_lambda,09,0x067e,ZS_04_zs_lambda_09,rw,3,32,127,0,127,
ZS,04,zs_kappa,09,0x067e,ZS_04_zs_kappa_09,rw,3,32,63,7,63,
ZS,04,zs_c_i,09,0x067e,ZS_04_zs_c_i_09,rw,3,255,255,13,255,
ZS,04,zs_pass_i,09,0x067e,ZS_04_zs_pass_i_09,rw,3,0,1,21,1,
ZS,04,zs_mask_i,09,0x067e,ZS_04_zs_mask_i_09,rw,3,0,1,22,1,
ZS,04,zs_lambda,10,0x0681,ZS_04_zs_lambda_10,rw,3,32,127,0,127,
ZS,04,zs_kappa,10,0x0681,ZS_04_zs_kappa_10,rw,3,32,63,7,63,
ZS,04,zs_c_i,10,0x0681,ZS_04_zs_c_i_10,rw,3,255,255,13,255,
ZS,04,zs_pass_i,10,0x0681,ZS_04_zs_pass_i_10,rw,3,0,1,21,1,
ZS,04,zs_mask_i,10,0x0681,ZS_04_zs_mask_i_10,rw,3,0,1,22,1,
ZS,04,zs_lambda,11,0x0684,ZS_04_zs_lambda_11,rw,3,32,127,0,127,
ZS,04,zs_kappa,11,0x0684,ZS_04_zs_kappa_11,rw,3,32,63,7,63,
ZS,04,zs_c_i,11,0x0684,ZS_04_zs_c_i_11,rw,3,255,255,13,255,
ZS,04,zs_pass_i,11,0x0684,ZS_04_zs_pass_i_11,rw,3,0,1,21,1,
ZS,04,zs_mask_i,11,0x0684,ZS_04_zs_mask_i_11,rw,3,0,1,22,1,
ZS,04,zs_lambda,12,0x0687,ZS_04_zs_lambda_12,rw,3,32,127,0,127,
ZS,04,zs_kappa,12,0x0687,ZS_04_zs_kappa_12,rw,3,32,63,7,63,
ZS,04,zs_c_i,12,0x0687,ZS_04_zs_c_i_12,rw,3,255,255,13,255,
ZS,04,zs_pass_i,12,0x0687,ZS_04_zs_pass_i_12,rw,3,0,1,21,1,
ZS,04,zs_mask_i,12,0x0687,ZS_04_zs_mask_i_12,rw,3,0,1,22,1,
ZS,04,zs_lambda,13,0x068a,ZS_04_zs_lambda_13,rw,3,32,127,0,127,
ZS,04,zs_kappa,13,0x068a,ZS_04_zs_kappa_13,rw,3,32,63,7,63,
ZS,04,zs_c_i,13,0x068a,ZS_04_zs_c_i_13,rw,3,255,255,13,255,
ZS,04,zs_pass_i,13,0x068a,ZS_04_zs_pass_i_13,rw,3,0,1,21,1,
ZS,04,zs_mask_i,13,0x068a,ZS_04_zs_mask_i_13,rw,3,0,1,22,1,
ZS,04,zs_lambda,14,0x068d,ZS_04_zs_lambda_14,rw,3,32,127,0,127,
ZS,04,zs_kappa,14,0x068d,ZS_04_zs_kappa_14,rw,3,32,63,7,63,
ZS,04,zs_c_i,14,0x068d,ZS_04_zs_c_i_14,rw,3,255,255,13,255,
ZS,04,zs_pass_i,14,0x068d,ZS_04_zs_pass_i_14,rw,3,0,1,21,1,
ZS,04,zs_mask_i,14,0x068d,ZS_04_zs_mask_i_14,rw,3,0,1,22,1,
ZS,04,zs_lambda,15,0x0690,ZS_04_zs_lambda_15,rw,3,32,127,0,127,
ZS,04,zs_kappa,15,0x0690,ZS_04_zs_kappa_15,rw,3,32,63,7,63,
ZS,04,zs_c_i,15,0x0690,ZS_04_zs_c_i_15,rw,3,255,255,13,255,
ZS,04,zs_pass_i,15,0x0690,ZS_04_zs_pass_i_15,rw,3,0,1,21,1,
ZS,04,zs_mask_i,15,0x0690,ZS_04_zs_mask_i_15,rw,3,0,1,22,1,
ZS,04,zs_lambda,16,0x0693,ZS_04_zs_lambda_16,rw,3,32,127,0,127,
ZS,04,zs_kappa,16,0x0693,ZS_04_zs_kappa_16,rw,3,32,63,7,63,
ZS,04,zs_c_i,16,0x0693,ZS_04_zs_c_i_16,rw,3,255,255,13,255,
ZS,04,zs_pass_i,16,0x0693,ZS_04_zs_pass_i_16,rw,3,0,1,21,1,
ZS,04,zs_mask_i,16,0x0693,ZS_04_zs_mask_i_16,rw,3,0,1,22,1,
ZS,04,zs_lambda,17,0x0696,ZS_04_zs_lambda_17,rw,3,32,127,0,127,
ZS,04,zs_kappa,17,0x0696,ZS_04_zs_kappa_17,rw,3,32,63,7,63,
ZS,04,zs_c_i,17,0x0696,ZS_04_zs_c_i_17,rw,3,255,255,13,255,
ZS,04,zs_pass_i,17,0x0696,ZS_04_zs_pass_i_17,rw,3,0,1,21,1,
ZS,04,zs_mask_i,17,0x0696,ZS_04_zs_mask_i_17,rw,3,0,1,22,1,
ZS,04,zs_lambda,18,0x0699,ZS_04_zs_lambda_18,rw,3,32,127,0,127,
ZS,04,zs_kappa,18,0x0699,ZS_04_zs_kappa_18,rw,3,32,63,7,63,
ZS,04,zs_c_i,18,0x0699,ZS_04_zs_c_i_18,rw,3,255,255,13,255,
ZS,04,zs_pass_i,18,0x0699,ZS_04_zs_pass_i_18,rw,3,0,1,21,1,
ZS,04,zs_mask_i,18,0x0699,ZS_04_zs_mask_i_18,rw,3,0,1,22,1,
ZS,04,zs_lambda,19,0x069c,ZS_04_zs_lambda_19,rw,3,32,127,0,127,
ZS,04,zs_kappa,19,0x069c,ZS_04_zs_kappa_19,rw,3,32,63,7,63,
ZS,04,zs_c_i,19,0x069c,ZS_04_zs_c_i_19,rw,3,255,255,13,255,
ZS,04,zs_pass_i,19,0x069c,ZS_04_zs_pass_i_19,rw,3,0,1,21,1,
ZS,04,zs_mask_i,19,0x069c,ZS_04_zs_mask_i_19,rw,3,0,1,22,1,
ZS,04,zs_lambda,20,0x069f,ZS_04_zs_lambda_20,rw,3,32,127,0,127,
ZS,04,zs_kappa,20,0x069f,ZS_04_zs_kappa_20,rw,3,32,63,7,63,
ZS,04,zs_c_i,20,0x069f,ZS_04_zs_c_i_20,rw,3,255,255,13,255,
ZS,04,zs_pass_i,20,0x069f,ZS_04_zs_pass_i_20,rw,3,0,1,21,1,
ZS,04,zs_mask_i,20,0x069f,ZS_04_zs_mask_i_20,rw,3,0,1,22,1,
ZS,04,zs_lambda,21,0x06a2,ZS_04_zs_lambda_21,rw,3,32,127,0,127,
ZS,04,zs_kappa,21,0x06a2,ZS_04_zs_kappa_21,rw,3,32,63,7,63,
ZS,04,zs_c_i,21,0x06a2,ZS_04_zs_c_i_21,rw,3,255,255,13,255,
ZS,04,zs_pass_i,21,0x06a2,ZS_04_zs_pass_i_21,rw,3,0,1,21,1,
ZS,04,zs_mask_i,21,0x06a2,ZS_04_zs_mask_i_21,rw,3,0,1,22,1,
ZS,04,zs_lambda,22,0x06a5,ZS_04_zs_lambda_22,rw,3,32,127,0,127,
ZS,04,zs_kappa,22,0x06a5,ZS_04_zs_kappa_22,rw,3,32,63,7,63,
ZS,04,zs_c_i,22,0x06a5,ZS_04_zs_c_i_22,rw,3,255,255,13,255,
ZS,04,zs_pass_i,22,0x06a5,ZS_04_zs_pass_i_22,rw,3,0,1,21,1,
ZS,04,zs_mask_i,22,0x06a5,ZS_04_zs_mask_i_22,rw,3,0,1,22,1,
ZS,04,zs_lambda,23,0x06a8,ZS_04_zs_lambda_23,rw,3,32,127,0,127,
ZS,04,zs_kappa,23,0x06a8,ZS_04_zs_kappa_23,rw,3,32,63,7,63,
ZS,04,zs_c_i,23,0x06a8,ZS_04_zs_c_i_23,rw,3,255,255,13,255,
ZS,04,zs_pass_i,23,0x06a8,ZS_04_zs_pass_i_23,rw,3,0,1,21,1,
ZS,04,zs_mask_i,23,0x06a8,ZS_04_zs_mask_i_23,rw,3,0,1,22,1,
ZS,04,zs_lambda,24,0x06ab,ZS_04_zs_lambda_24,rw,3,32,127,0,127,
ZS,04,zs_kappa,24,0x06ab,ZS_04_zs_kappa_24,rw,3,32,63,7,63,
ZS,04,zs_c_i,24,0x06ab,ZS_04_zs_c_i_24,rw,3,255,255,13,255,
ZS,04,zs_pass_i,24,0x06ab,ZS_04_zs_pass_i_24,rw,3,0,1,21,1,
ZS,04,zs_mask_i,24,0x06ab,ZS_04_zs_mask_i_24,rw,3,0,1,22,1,
ZS,04,zs_lambda,25,0x06ae,ZS_04_zs_lambda_25,rw,3,32,127,0,127,
ZS,04,zs_kappa,25,0x06ae,ZS_04_zs_kappa_25,rw,3,32,63,7,63,
ZS,04,zs_c_i,25,0x06ae,ZS_04_zs_c_i_25,rw,3,255,255,13,255,
ZS,04,zs_pass_i,25,0x06ae,ZS_04_zs_pass_i_25,rw,3,0,1,21,1,
ZS,04,zs_mask_i,25,0x06ae,ZS_04_zs_mask_i_25,rw,3,0,1,22,1,
ZS,04,zs_lambda,26,0x06b1,ZS_04_zs_lambda_26,rw,3,32,127,0,127,
ZS,04,zs_kappa,26,0x06b1,ZS_04_zs_kappa_26,rw,3,32,63,7,63,
ZS,04,zs_c_i,26,0x06b1,ZS_04_zs_c_i_26,rw,3,255,255,13,255,
ZS,04,zs_pass_i,26,0x06b1,ZS_04_zs_pass_i_26,rw,3,0,1,21,1,
ZS,04,zs_mask_i,26,0x06b1,ZS_04_zs_mask_i_26,rw,3,0,1,22,1,
ZS,04,zs_lambda,27,0x06b4,ZS_04_zs_lambda_27,rw,3,32,127,0,127,
ZS,04,zs_kappa,27,0x06b4,ZS_04_zs_kappa_27,rw,3,32,63,7,63,
ZS,04,zs_c_i,27,0x06b4,ZS_04_zs_c_i_27,rw,3,255,255,13,255,
ZS,04,zs_pass_i,27,0x06b4,ZS_04_zs_pass_i_27,rw,3,0,1,21,1,
ZS,04,zs_mask_i,27,0x06b4,ZS_04_zs_mask_i_27,rw,3,0,1,22,1,
ZS,04,zs_lambda,28,0x06b7,ZS_04_zs_lambda_28,rw,3,32,127,0,127,
ZS,04,zs_kappa,28,0x06b7,ZS_04_zs_kappa_28,rw,3,32,63,7,63,
ZS,04,zs_c_i,28,0x06b7,ZS_04_zs_c_i_28,rw,3,255,255,13,255,
ZS,04,zs_pass_i,28,0x06b7,ZS_04_zs_pass_i_28,rw,3,0,1,21,1,
ZS,04,zs_mask_i,28,0x06b7,ZS_04_zs_mask_i_28,rw,3,0,1,22,1,
ZS,04,zs_lambda,29,0x06ba,ZS_04_zs_lambda_29,rw,3,32,127,0,127,
ZS,04,zs_kappa,29,0x06ba,ZS_04_zs_kappa_29,rw,3,32,63,7,63,
ZS,04,zs_c_i,29,0x06ba,ZS_04_zs_c_i_29,rw,3,255,255,13,255,
ZS,04,zs_pass_i,29,0x06ba,ZS_04_zs_pass_i_29,rw,3,0,1,21,1,
ZS,04,zs_mask_i,29,0x06ba,ZS_04_zs_mask_i_29,rw,3,0,1,22,1,
ZS,04,zs_lambda,30,0x06bd,ZS_04_zs_lambda_30,rw,3,32,127,0,127,
ZS,04,zs_kappa,30,0x06bd,ZS_04_zs_kappa_30,rw,3,32,63,7,63,
ZS,04,zs_c_i,30,0x06bd,ZS_04_zs_c_i_30,rw,3,255,255,13,255,
ZS,04,zs_pass_i,30,0x06bd,ZS_04_zs_pass_i_30,rw,3,0,1,21,1,
ZS,04,zs_mask_i,30,0x06bd,ZS_04_zs_mask_i_30,rw,3,0,1,22,1,
ZS,04,zs_lambda,31,0x06c0,ZS_04_zs_lambda_31,rw,3,32,127,0,127,
ZS,04,zs_kappa,31,0x06c0,ZS_04_zs_kappa_31,rw,3,32,63,7,63,
ZS,04,zs_c_i,31,0x06c0,ZS_04_zs_c_i_31,rw,3,255,255,13,255,
ZS,04,zs_pass_i,31,0x06c0,ZS_04_zs_pass_i_31,rw,3,0,1,21,1,
ZS,04,zs_mask_i,31,0x06c0,ZS_04_zs_mask_i_31,rw,3,0,1,22,1,
ZS,04,zs_lambda,32,0x06c3,ZS_04_zs_lambda_32,rw,3,32,127,0,127,
ZS,04,zs_kappa,32,0x06c3,ZS_04_zs_kappa_32,rw,3,32,63,7,63,
ZS,04,zs_c_i,32,0x06c3,ZS_04_zs_c_i_32,rw,3,255,255,13,255,
ZS,04,zs_pass_i,32,0x06c3,ZS_04_zs_pass_i_32,rw,3,0,1,21,1,
ZS,04,zs_mask_i,32,0x06c3,ZS_04_zs_mask_i_32,rw,3,0,1,22,1,
ZS,04,zs_lambda,33,0x06c6,ZS_04_zs_lambda_33,rw,3,32,127,0,127,
ZS,04,zs_kappa,33,0x06c6,ZS_04_zs_kappa_33,rw,3,32,63,7,63,
ZS,04,zs_c_i,33,0x06c6,ZS_04_zs_c_i_33,rw,3,255,255,13,255,
ZS,04,zs_pass_i,33,0x06c6,ZS_04_zs_pass_i_33,rw,3,0,1,21,1,
ZS,04,zs_mask_i,33,0x06c6,ZS_04_zs_mask_i_33,rw,3,0,1,22,1,
ZS,04,zs_lambda,34,0x06c9,ZS_04_zs_lambda_34,rw,3,32,127,0,127,
ZS,04,zs_kappa,34,0x06c9,ZS_04_zs_kappa_34,rw,3,32,63,7,63,
ZS,04,zs_c_i,34,0x06c9,ZS_04_zs_c_i_34,rw,3,255,255,13,255,
ZS,04,zs_pass_i,34,0x06c9,ZS_04_zs_pass_i_34,rw,3,0,1,21,1,
ZS,04,zs_mask_i,34,0x06c9,ZS_04_zs_mask_i_34,rw,3,0,1,22,1,
ZS,04,zs_lambda,35,0x06cc,ZS_04_zs_lambda_35,rw,3,32,127,0,127,
ZS,04,zs_kappa,35,0x06cc,ZS_04_zs_kappa_35,rw,3,32,63,7,63,
ZS,04,zs_c_i,35,0x06cc,ZS_04_zs_c_i_35,rw,3,255,255,13,255,
ZS,04,zs_pass_i,35,0x06cc,ZS_04_zs_pass_i_35,rw,3,0,1,21,1,
ZS,04,zs_mask_i,35,0x06cc,ZS_04_zs_mask_i_35,rw,3,0,1,22,1,
ZS,04,zs_lambda,36,0x06cf,ZS_04_zs_lambda_36,rw,3,32,127,0,127,
ZS,04,zs_kappa,36,0x06cf,ZS_04_zs_kappa_36,rw,3,32,63,7,63,
ZS,04,zs_c_i,36,0x06cf,ZS_04_zs_c_i_36,rw,3,255,255,13,255,
ZS,04,zs_pass_i,36,0x06cf,ZS_04_zs_pass_i_36,rw,3,0,1,21,1,
ZS,04,zs_mask_i,36,0x06cf,ZS_04_zs_mask_i_36,rw,3,0,1,22,1,
ZS,05,zs_lambda,00,0x06d2,ZS_05_zs_lambda_00,rw,3,32,127,0,127,
ZS,05,zs_kappa,00,0x06d2,ZS_05_zs_kappa_00,rw,3,32,63,7,63,
ZS,05,zs_c_i,00,0x06d2,ZS_05_zs_c_i_00,rw,3,255,255,13,255,
ZS,05,zs_pass_i,00,0x06d2,ZS_05_zs_pass_i_00,rw,3,0,1,21,1,
ZS,05,zs_mask_i,00,0x06d2,ZS_05_zs_mask_i_00,rw,3,0,1,22,1,
ZS,05,zs_lambda,01,0x06d5,ZS_05_zs_lambda_01,rw,3,32,127,0,127,
ZS,05,zs_kappa,01,0x06d5,ZS_05_zs_kappa_01,rw,3,32,63,7,63,
ZS,05,zs_c_i,01,0x06d5,ZS_05_zs_c_i_01,rw,3,255,255,13,255,
ZS,05,zs_pass_i,01,0x06d5,ZS_05_zs_pass_i_01,rw,3,0,1,21,1,
ZS,05,zs_mask_i,01,0x06d5,ZS_05_zs_mask_i_01,rw,3,0,1,22,1,
ZS,05,zs_lambda,02,0x06d8,ZS_05_zs_lambda_02,rw,3,32,127,0,127,
ZS,05,zs_kappa,02,0x06d8,ZS_05_zs_kappa_02,rw,3,32,63,7,63,
ZS,05,zs_c_i,02,0x06d8,ZS_05_zs_c_i_02,rw,3,255,255,13,255,
ZS,05,zs_pass_i,02,0x06d8,ZS_05_zs_pass_i_02,rw,3,0,1,21,1,
ZS,05,zs_mask_i,02,0x06d8,ZS_05_zs_mask_i_02,rw,3,0,1,22,1,
ZS,05,zs_lambda,03,0x06db,ZS_05_zs_lambda_03,rw,3,32,127,0,127,
ZS,05,zs_kappa,03,0x06db,ZS_05_zs_kappa_03,rw,3,32,63,7,63,
ZS,05,zs_c_i,03,0x06db,ZS_05_zs_c_i_03,rw,3,255,255,13,255,
ZS,05,zs_pass_i,03,0x06db,ZS_05_zs_pass_i_03,rw,3,0,1,21,1,
ZS,05,zs_mask_i,03,0x06db,ZS_05_zs_mask_i_03,rw,3,0,1,22,1,
ZS,05,zs_lambda,04,0x06de,ZS_05_zs_lambda_04,rw,3,32,127,0,127,
ZS,05,zs_kappa,04,0x06de,ZS_05_zs_kappa_04,rw,3,32,63,7,63,
ZS,05,zs_c_i,04,0x06de,ZS_05_zs_c_i_04,rw,3,255,255,13,255,
ZS,05,zs_pass_i,04,0x06de,ZS_05_zs_pass_i_04,rw,3,0,1,21,1,
ZS,05,zs_mask_i,04,0x06de,ZS_05_zs_mask_i_04,rw,3,0,1,22,1,
ZS,05,zs_lambda,05,0x06e1,ZS_05_zs_lambda_05,rw,3,32,127,0,127,
ZS,05,zs_kappa,05,0x06e1,ZS_05_zs_kappa_05,rw,3,32,63,7,63,
ZS,05,zs_c_i,05,0x06e1,ZS_05_zs_c_i_05,rw,3,255,255,13,255,
ZS,05,zs_pass_i,05,0x06e1,ZS_05_zs_pass_i_05,rw,3,0,1,21,1,
ZS,05,zs_mask_i,05,0x06e1,ZS_05_zs_mask_i_05,rw,3,0,1,22,1,
ZS,05,zs_lambda,06,0x06e4,ZS_05_zs_lambda_06,rw,3,32,127,0,127,
ZS,05,zs_kappa,06,0x06e4,ZS_05_zs_kappa_06,rw,3,32,63,7,63,
ZS,05,zs_c_i,06,0x06e4,ZS_05_zs_c_i_06,rw,3,255,255,13,255,
ZS,05,zs_pass_i,06,0x06e4,ZS_05_zs_pass_i_06,rw,3,0,1,21,1,
ZS,05,zs_mask_i,06,0x06e4,ZS_05_zs_mask_i_06,rw,3,0,1,22,1,
ZS,05,zs_lambda,07,0x06e7,ZS_05_zs_lambda_07,rw,3,32,127,0,127,
ZS,05,zs_kappa,07,0x06e7,ZS_05_zs_kappa_07,rw,3,32,63,7,63,
ZS,05,zs_c_i,07,0x06e7,ZS_05_zs_c_i_07,rw,3,255,255,13,255,
ZS,05,zs_pass_i,07,0x06e7,ZS_05_zs_pass_i_07,rw,3,0,1,21,1,
ZS,05,zs_mask_i,07,0x06e7,ZS_05_zs_mask_i_07,rw,3,0,1,22,1,
ZS,05,zs_lambda,08,0x06ea,ZS_05_zs_lambda_08,rw,3,32,127,0,127,
ZS,05,zs_kappa,08,0x06ea,ZS_05_zs_kappa_08,rw,3,32,63,7,63,
ZS,05,zs_c_i,08,0x06ea,ZS_05_zs_c_i_08,rw,3,255,255,13,255,
ZS,05,zs_pass_i,08,0x06ea,ZS_05_zs_pass_i_08,rw,3,0,1,21,1,
ZS,05,zs_mask_i,08,0x06ea,ZS_05_zs_mask_i_08,rw,3,0,1,22,1,
ZS,05,zs_lambda,09,0x06ed,ZS_05_zs_lambda_09,rw,3,32,127,0,127,
ZS,05,zs_kappa,09,0x06ed,ZS_05_zs_kappa_09,rw,3,32,63,7,63,
ZS,05,zs_c_i,09,0x06ed,ZS_05_zs_c_i_09,rw,3,255,255,13,255,
ZS,05,zs_pass_i,09,0x06ed,ZS_05_zs_pass_i_09,rw,3,0,1,21,1,
ZS,05,zs_mask_i,09,0x06ed,ZS_05_zs_mask_i_09,rw,3,0,1,22,1,
ZS,05,zs_lambda,10,0x06f0,ZS_05_zs_lambda_10,rw,3,32,127,0,127,
ZS,05,zs_kappa,10,0x06f0,ZS_05_zs_kappa_10,rw,3,32,63,7,63,
ZS,05,zs_c_i,10,0x06f0,ZS_05_zs_c_i_10,rw,3,255,255,13,255,
ZS,05,zs_pass_i,10,0x06f0,ZS_05_zs_pass_i_10,rw,3,0,1,21,1,
ZS,05,zs_mask_i,10,0x06f0,ZS_05_zs_mask_i_10,rw,3,0,1,22,1,
ZS,05,zs_lambda,11,0x06f3,ZS_05_zs_lambda_11,rw,3,32,127,0,127,
ZS,05,zs_kappa,11,0x06f3,ZS_05_zs_kappa_11,rw,3,32,63,7,63,
ZS,05,zs_c_i,11,0x06f3,ZS_05_zs_c_i_11,rw,3,255,255,13,255,
ZS,05,zs_pass_i,11,0x06f3,ZS_05_zs_pass_i_11,rw,3,0,1,21,1,
ZS,05,zs_mask_i,11,0x06f3,ZS_05_zs_mask_i_11,rw,3,0,1,22,1,
ZS,05,zs_lambda,12,0x06f6,ZS_05_zs_lambda_12,rw,3,32,127,0,127,
ZS,05,zs_kappa,12,0x06f6,ZS_05_zs_kappa_12,rw,3,32,63,7,63,
ZS,05,zs_c_i,12,0x06f6,ZS_05_zs_c_i_12,rw,3,255,255,13,255,
ZS,05,zs_pass_i,12,0x06f6,ZS_05_zs_pass_i_12,rw,3,0,1,21,1,
ZS,05,zs_mask_i,12,0x06f6,ZS_05_zs_mask_i_12,rw,3,0,1,22,1,
ZS,05,zs_lambda,13,0x06f9,ZS_05_zs_lambda_13,rw,3,32,127,0,127,
ZS,05,zs_kappa,13,0x06f9,ZS_05_zs_kappa_13,rw,3,32,63,7,63,
ZS,05,zs_c_i,13,0x06f9,ZS_05_zs_c_i_13,rw,3,255,255,13,255,
ZS,05,zs_pass_i,13,0x06f9,ZS_05_zs_pass_i_13,rw,3,0,1,21,1,
ZS,05,zs_mask_i,13,0x06f9,ZS_05_zs_mask_i_13,rw,3,0,1,22,1,
ZS,05,zs_lambda,14,0x06fc,ZS_05_zs_lambda_14,rw,3,32,127,0,127,
ZS,05,zs_kappa,14,0x06fc,ZS_05_zs_kappa_14,rw,3,32,63,7,63,
ZS,05,zs_c_i,14,0x06fc,ZS_05_zs_c_i_14,rw,3,255,255,13,255,
ZS,05,zs_pass_i,14,0x06fc,ZS_05_zs_pass_i_14,rw,3,0,1,21,1,
ZS,05,zs_mask_i,14,0x06fc,ZS_05_zs_mask_i_14,rw,3,0,1,22,1,
ZS,05,zs_lambda,15,0x06ff,ZS_05_zs_lambda_15,rw,3,32,127,0,127,
ZS,05,zs_kappa,15,0x06ff,ZS_05_zs_kappa_15,rw,3,32,63,7,63,
ZS,05,zs_c_i,15,0x06ff,ZS_05_zs_c_i_15,rw,3,255,255,13,255,
ZS,05,zs_pass_i,15,0x06ff,ZS_05_zs_pass_i_15,rw,3,0,1,21,1,
ZS,05,zs_mask_i,15,0x06ff,ZS_05_zs_mask_i_15,rw,3,0,1,22,1,
ZS,05,zs_lambda,16,0x0702,ZS_05_zs_lambda_16,rw,3,32,127,0,127,
ZS,05,zs_kappa,16,0x0702,ZS_05_zs_kappa_16,rw,3,32,63,7,63,
ZS,05,zs_c_i,16,0x0702,ZS_05_zs_c_i_16,rw,3,255,255,13,255,
ZS,05,zs_pass_i,16,0x0702,ZS_05_zs_pass_i_16,rw,3,0,1,21,1,
ZS,05,zs_mask_i,16,0x0702,ZS_05_zs_mask_i_16,rw,3,0,1,22,1,
ZS,05,zs_lambda,17,0x0705,ZS_05_zs_lambda_17,rw,3,32,127,0,127,
ZS,05,zs_kappa,17,0x0705,ZS_05_zs_kappa_17,rw,3,32,63,7,63,
ZS,05,zs_c_i,17,0x0705,ZS_05_zs_c_i_17,rw,3,255,255,13,255,
ZS,05,zs_pass_i,17,0x0705,ZS_05_zs_pass_i_17,rw,3,0,1,21,1,
ZS,05,zs_mask_i,17,0x0705,ZS_05_zs_mask_i_17,rw,3,0,1,22,1,
ZS,05,zs_lambda,18,0x0708,ZS_05_zs_lambda_18,rw,3,32,127,0,127,
ZS,05,zs_kappa,18,0x0708,ZS_05_zs_kappa_18,rw,3,32,63,7,63,
ZS,05,zs_c_i,18,0x0708,ZS_05_zs_c_i_18,rw,3,255,255,13,255,
ZS,05,zs_pass_i,18,0x0708,ZS_05_zs_pass_i_18,rw,3,0,1,21,1,
ZS,05,zs_mask_i,18,0x0708,ZS_05_zs_mask_i_18,rw,3,0,1,22,1,
ZS,05,zs_lambda,19,0x070b,ZS_05_zs_lambda_19,rw,3,32,127,0,127,
ZS,05,zs_kappa,19,0x070b,ZS_05_zs_kappa_19,rw,3,32,63,7,63,
ZS,05,zs_c_i,19,0x070b,ZS_05_zs_c_i_19,rw,3,255,255,13,255,
ZS,05,zs_pass_i,19,0x070b,ZS_05_zs_pass_i_19,rw,3,0,1,21,1,
ZS,05,zs_mask_i,19,0x070b,ZS_05_zs_mask_i_19,rw,3,0,1,22,1,
ZS,05,zs_lambda,20,0x070e,ZS_05_zs_lambda_20,rw,3,32,127,0,127,
ZS,05,zs_kappa,20,0x070e,ZS_05_zs_kappa_20,rw,3,32,63,7,63,
ZS,05,zs_c_i,20,0x070e,ZS_05_zs_c_i_20,rw,3,255,255,13,255,
ZS,05,zs_pass_i,20,0x070e,ZS_05_zs_pass_i_20,rw,3,0,1,21,1,
ZS,05,zs_mask_i,20,0x070e,ZS_05_zs_mask_i_20,rw,3,0,1,22,1,
ZS,05,zs_lambda,21,0x0711,ZS_05_zs_lambda_21,rw,3,32,127,0,127,
ZS,05,zs_kappa,21,0x0711,ZS_05_zs_kappa_21,rw,3,32,63,7,63,
ZS,05,zs_c_i,21,0x0711,ZS_05_zs_c_i_21,rw,3,255,255,13,255,
ZS,05,zs_pass_i,21,0x0711,ZS_05_zs_pass_i_21,rw,3,0,1,21,1,
ZS,05,zs_mask_i,21,0x0711,ZS_05_zs_mask_i_21,rw,3,0,1,22,1,
ZS,05,zs_lambda,22,0x0714,ZS_05_zs_lambda_22,rw,3,32,127,0,127,
ZS,05,zs_kappa,22,0x0714,ZS_05_zs_kappa_22,rw,3,32,63,7,63,
ZS,05,zs_c_i,22,0x0714,ZS_05_zs_c_i_22,rw,3,255,255,13,255,
ZS,05,zs_pass_i,22,0x0714,ZS_05_zs_pass_i_22,rw,3,0,1,21,1,
ZS,05,zs_mask_i,22,0x0714,ZS_05_zs_mask_i_22,rw,3,0,1,22,1,
ZS,05,zs_lambda,23,0x0717,ZS_05_zs_lambda_23,rw,3,32,127,0,127,
ZS,05,zs_kappa,23,0x0717,ZS_05_zs_kappa_23,rw,3,32,63,7,63,
ZS,05,zs_c_i,23,0x0717,ZS_05_zs_c_i_23,rw,3,255,255,13,255,
ZS,05,zs_pass_i,23,0x0717,ZS_05_zs_pass_i_23,rw,3,0,1,21,1,
ZS,05,zs_mask_i,23,0x0717,ZS_05_zs_mask_i_23,rw,3,0,1,22,1,
ZS,05,zs_lambda,24,0x071a,ZS_05_zs_lambda_24,rw,3,32,127,0,127,
ZS,05,zs_kappa,24,0x071a,ZS_05_zs_kappa_24,rw,3,32,63,7,63,
ZS,05,zs_c_i,24,0x071a,ZS_05_zs_c_i_24,rw,3,255,255,13,255,
ZS,05,zs_pass_i,24,0x071a,ZS_05_zs_pass_i_24,rw,3,0,1,21,1,
ZS,05,zs_mask_i,24,0x071a,ZS_05_zs_mask_i_24,rw,3,0,1,22,1,
ZS,05,zs_lambda,25,0x071d,ZS_05_zs_lambda_25,rw,3,32,127,0,127,
ZS,05,zs_kappa,25,0x071d,ZS_05_zs_kappa_25,rw,3,32,63,7,63,
ZS,05,zs_c_i,25,0x071d,ZS_05_zs_c_i_25,rw,3,255,255,13,255,
ZS,05,zs_pass_i,25,0x071d,ZS_05_zs_pass_i_25,rw,3,0,1,21,1,
ZS,05,zs_mask_i,25,0x071d,ZS_05_zs_mask_i_25,rw,3,0,1,22,1,
ZS,05,zs_lambda,26,0x0720,ZS_05_zs_lambda_26,rw,3,32,127,0,127,
ZS,05,zs_kappa,26,0x0720,ZS_05_zs_kappa_26,rw,3,32,63,7,63,
ZS,05,zs_c_i,26,0x0720,ZS_05_zs_c_i_26,rw,3,255,255,13,255,
ZS,05,zs_pass_i,26,0x0720,ZS_05_zs_pass_i_26,rw,3,0,1,21,1,
ZS,05,zs_mask_i,26,0x0720,ZS_05_zs_mask_i_26,rw,3,0,1,22,1,
ZS,05,zs_lambda,27,0x0723,ZS_05_zs_lambda_27,rw,3,32,127,0,127,
ZS,05,zs_kappa,27,0x0723,ZS_05_zs_kappa_27,rw,3,32,63,7,63,
ZS,05,zs_c_i,27,0x0723,ZS_05_zs_c_i_27,rw,3,255,255,13,255,
ZS,05,zs_pass_i,27,0x0723,ZS_05_zs_pass_i_27,rw,3,0,1,21,1,
ZS,05,zs_mask_i,27,0x0723,ZS_05_zs_mask_i_27,rw,3,0,1,22,1,
ZS,05,zs_lambda,28,0x0726,ZS_05_zs_lambda_28,rw,3,32,127,0,127,
ZS,05,zs_kappa,28,0x0726,ZS_05_zs_kappa_28,rw,3,32,63,7,63,
ZS,05,zs_c_i,28,0x0726,ZS_05_zs_c_i_28,rw,3,255,255,13,255,
ZS,05,zs_pass_i,28,0x0726,ZS_05_zs_pass_i_28,rw,3,0,1,21,1,
ZS,05,zs_mask_i,28,0x0726,ZS_05_zs_mask_i_28,rw,3,0,1,22,1,
ZS,05,zs_lambda,29,0x0729,ZS_05_zs_lambda_29,rw,3,32,127,0,127,
ZS,05,zs_kappa,29,0x0729,ZS_05_zs_kappa_29,rw,3,32,63,7,63,
ZS,05,zs_c_i,29,0x0729,ZS_05_zs_c_i_29,rw,3,255,255,13,255,
ZS,05,zs_pass_i,29,0x0729,ZS_05_zs_pass_i_29,rw,3,0,1,21,1,
ZS,05,zs_mask_i,29,0x0729,ZS_05_zs_mask_i_29,rw,3,0,1,22,1,
ZS,05,zs_lambda,30,0x072c,ZS_05_zs_lambda_30,rw,3,32,127,0,127,
ZS,05,zs_kappa,30,0x072c,ZS_05_zs_kappa_30,rw,3,32,63,7,63,
ZS,05,zs_c_i,30,0x072c,ZS_05_zs_c_i_30,rw,3,255,255,13,255,
ZS,05,zs_pass_i,30,0x072c,ZS_05_zs_pass_i_30,rw,3,0,1,21,1,
ZS,05,zs_mask_i,30,0x072c,ZS_05_zs_mask_i_30,rw,3,0,1,22,1,
ZS,05,zs_lambda,31,0x072f,ZS_05_zs_lambda_31,rw,3,32,127,0,127,
ZS,05,zs_kappa,31,0x072f,ZS_05_zs_kappa_31,rw,3,32,63,7,63,
ZS,05,zs_c_i,31,0x072f,ZS_05_zs_c_i_31,rw,3,255,255,13,255,
ZS,05,zs_pass_i,31,0x072f,ZS_05_zs_pass_i_31,rw,3,0,1,21,1,
ZS,05,zs_mask_i,31,0x072f,ZS_05_zs_mask_i_31,rw,3,0,1,22,1,
ZS,05,zs_lambda,32,0x0732,ZS_05_zs_lambda_32,rw,3,32,127,0,127,
ZS,05,zs_kappa,32,0x0732,ZS_05_zs_kappa_32,rw,3,32,63,7,63,
ZS,05,zs_c_i,32,0x0732,ZS_05_zs_c_i_32,rw,3,255,255,13,255,
ZS,05,zs_pass_i,32,0x0732,ZS_05_zs_pass_i_32,rw,3,0,1,21,1,
ZS,05,zs_mask_i,32,0x0732,ZS_05_zs_mask_i_32,rw,3,0,1,22,1,
ZS,05,zs_lambda,33,0x0735,ZS_05_zs_lambda_33,rw,3,32,127,0,127,
ZS,05,zs_kappa,33,0x0735,ZS_05_zs_kappa_33,rw,3,32,63,7,63,
ZS,05,zs_c_i,33,0x0735,ZS_05_zs_c_i_33,rw,3,255,255,13,255,
ZS,05,zs_pass_i,33,0x0735,ZS_05_zs_pass_i_33,rw,3,0,1,21,1,
ZS,05,zs_mask_i,33,0x0735,ZS_05_zs_mask_i_33,rw,3,0,1,22,1,
ZS,05,zs_lambda,34,0x0738,ZS_05_zs_lambda_34,rw,3,32,127,0,127,
ZS,05,zs_kappa,34,0x0738,ZS_05_zs_kappa_34,rw,3,32,63,7,63,
ZS,05,zs_c_i,34,0x0738,ZS_05_zs_c_i_34,rw,3,255,255,13,255,
ZS,05,zs_pass_i,34,0x0738,ZS_05_zs_pass_i_34,rw,3,0,1,21,1,
ZS,05,zs_mask_i,34,0x0738,ZS_05_zs_mask_i_34,rw,3,0,1,22,1,
ZS,05,zs_lambda,35,0x073b,ZS_05_zs_lambda_35,rw,3,32,127,0,127,
ZS,05,zs_kappa,35,0x073b,ZS_05_zs_kappa_35,rw,3,32,63,7,63,
ZS,05,zs_c_i,35,0x073b,ZS_05_zs_c_i_35,rw,3,255,255,13,255,
ZS,05,zs_pass_i,35,0x073b,ZS_05_zs_pass_i_35,rw,3,0,1,21,1,
ZS,05,zs_mask_i,35,0x073b,ZS_05_zs_mask_i_35,rw,3,0,1,22,1,
ZS,05,zs_lambda,36,0x073e,ZS_05_zs_lambda_36,rw,3,32,127,0,127,
ZS,05,zs_kappa,36,0x073e,ZS_05_zs_kappa_36,rw,3,32,63,7,63,
ZS,05,zs_c_i,36,0x073e,ZS_05_zs_c_i_36,rw,3,255,255,13,255,
ZS,05,zs_pass_i,36,0x073e,ZS_05_zs_pass_i_36,rw,3,0,1,21,1,
ZS,05,zs_mask_i,36,0x073e,ZS_05_zs_mask_i_36,rw,3,0,1,22,1,
ZS,06,zs_lambda,00,0x0741,ZS_06_zs_lambda_00,rw,3,32,127,0,127,
ZS,06,zs_kappa,00,0x0741,ZS_06_zs_kappa_00,rw,3,32,63,7,63,
ZS,06,zs_c_i,00,0x0741,ZS_06_zs_c_i_00,rw,3,255,255,13,255,
ZS,06,zs_pass_i,00,0x0741,ZS_06_zs_pass_i_00,rw,3,0,1,21,1,
ZS,06,zs_mask_i,00,0x0741,ZS_06_zs_mask_i_00,rw,3,0,1,22,1,
ZS,06,zs_lambda,01,0x0744,ZS_06_zs_lambda_01,rw,3,32,127,0,127,
ZS,06,zs_kappa,01,0x0744,ZS_06_zs_kappa_01,rw,3,32,63,7,63,
ZS,06,zs_c_i,01,0x0744,ZS_06_zs_c_i_01,rw,3,255,255,13,255,
ZS,06,zs_pass_i,01,0x0744,ZS_06_zs_pass_i_01,rw,3,0,1,21,1,
ZS,06,zs_mask_i,01,0x0744,ZS_06_zs_mask_i_01,rw,3,0,1,22,1,
ZS,06,zs_lambda,02,0x0747,ZS_06_zs_lambda_02,rw,3,32,127,0,127,
ZS,06,zs_kappa,02,0x0747,ZS_06_zs_kappa_02,rw,3,32,63,7,63,
ZS,06,zs_c_i,02,0x0747,ZS_06_zs_c_i_02,rw,3,255,255,13,255,
ZS,06,zs_pass_i,02,0x0747,ZS_06_zs_pass_i_02,rw,3,0,1,21,1,
ZS,06,zs_mask_i,02,0x0747,ZS_06_zs_mask_i_02,rw,3,0,1,22,1,
ZS,06,zs_lambda,03,0x074a,ZS_06_zs_lambda_03,rw,3,32,127,0,127,
ZS,06,zs_kappa,03,0x074a,ZS_06_zs_kappa_03,rw,3,32,63,7,63,
ZS,06,zs_c_i,03,0x074a,ZS_06_zs_c_i_03,rw,3,255,255,13,255,
ZS,06,zs_pass_i,03,0x074a,ZS_06_zs_pass_i_03,rw,3,0,1,21,1,
ZS,06,zs_mask_i,03,0x074a,ZS_06_zs_mask_i_03,rw,3,0,1,22,1,
ZS,06,zs_lambda,04,0x074d,ZS_06_zs_lambda_04,rw,3,32,127,0,127,
ZS,06,zs_kappa,04,0x074d,ZS_06_zs_kappa_04,rw,3,32,63,7,63,
ZS,06,zs_c_i,04,0x074d,ZS_06_zs_c_i_04,rw,3,255,255,13,255,
ZS,06,zs_pass_i,04,0x074d,ZS_06_zs_pass_i_04,rw,3,0,1,21,1,
ZS,06,zs_mask_i,04,0x074d,ZS_06_zs_mask_i_04,rw,3,0,1,22,1,
ZS,06,zs_lambda,05,0x0750,ZS_06_zs_lambda_05,rw,3,32,127,0,127,
ZS,06,zs_kappa,05,0x0750,ZS_06_zs_kappa_05,rw,3,32,63,7,63,
ZS,06,zs_c_i,05,0x0750,ZS_06_zs_c_i_05,rw,3,255,255,13,255,
ZS,06,zs_pass_i,05,0x0750,ZS_06_zs_pass_i_05,rw,3,0,1,21,1,
ZS,06,zs_mask_i,05,0x0750,ZS_06_zs_mask_i_05,rw,3,0,1,22,1,
ZS,06,zs_lambda,06,0x0753,ZS_06_zs_lambda_06,rw,3,32,127,0,127,
ZS,06,zs_kappa,06,0x0753,ZS_06_zs_kappa_06,rw,3,32,63,7,63,
ZS,06,zs_c_i,06,0x0753,ZS_06_zs_c_i_06,rw,3,255,255,13,255,
ZS,06,zs_pass_i,06,0x0753,ZS_06_zs_pass_i_06,rw,3,0,1,21,1,
ZS,06,zs_mask_i,06,0x0753,ZS_06_zs_mask_i_06,rw,3,0,1,22,1,
ZS,06,zs_lambda,07,0x0756,ZS_06_zs_lambda_07,rw,3,32,127,0,127,
ZS,06,zs_kappa,07,0x0756,ZS_06_zs_kappa_07,rw,3,32,63,7,63,
ZS,06,zs_c_i,07,0x0756,ZS_06_zs_c_i_07,rw,3,255,255,13,255,
ZS,06,zs_pass_i,07,0x0756,ZS_06_zs_pass_i_07,rw,3,0,1,21,1,
ZS,06,zs_mask_i,07,0x0756,ZS_06_zs_mask_i_07,rw,3,0,1,22,1,
ZS,06,zs_lambda,08,0x0759,ZS_06_zs_lambda_08,rw,3,32,127,0,127,
ZS,06,zs_kappa,08,0x0759,ZS_06_zs_kappa_08,rw,3,32,63,7,63,
ZS,06,zs_c_i,08,0x0759,ZS_06_zs_c_i_08,rw,3,255,255,13,255,
ZS,06,zs_pass_i,08,0x0759,ZS_06_zs_pass_i_08,rw,3,0,1,21,1,
ZS,06,zs_mask_i,08,0x0759,ZS_06_zs_mask_i_08,rw,3,0,1,22,1,
ZS,06,zs_lambda,09,0x075c,ZS_06_zs_lambda_09,rw,3,32,127,0,127,
ZS,06,zs_kappa,09,0x075c,ZS_06_zs_kappa_09,rw,3,32,63,7,63,
ZS,06,zs_c_i,09,0x075c,ZS_06_zs_c_i_09,rw,3,255,255,13,255,
ZS,06,zs_pass_i,09,0x075c,ZS_06_zs_pass_i_09,rw,3,0,1,21,1,
ZS,06,zs_mask_i,09,0x075c,ZS_06_zs_mask_i_09,rw,3,0,1,22,1,
ZS,06,zs_lambda,10,0x075f,ZS_06_zs_lambda_10,rw,3,32,127,0,127,
ZS,06,zs_kappa,10,0x075f,ZS_06_zs_kappa_10,rw,3,32,63,7,63,
ZS,06,zs_c_i,10,0x075f,ZS_06_zs_c_i_10,rw,3,255,255,13,255,
ZS,06,zs_pass_i,10,0x075f,ZS_06_zs_pass_i_10,rw,3,0,1,21,1,
ZS,06,zs_mask_i,10,0x075f,ZS_06_zs_mask_i_10,rw,3,0,1,22,1,
ZS,06,zs_lambda,11,0x0762,ZS_06_zs_lambda_11,rw,3,32,127,0,127,
ZS,06,zs_kappa,11,0x0762,ZS_06_zs_kappa_11,rw,3,32,63,7,63,
ZS,06,zs_c_i,11,0x0762,ZS_06_zs_c_i_11,rw,3,255,255,13,255,
ZS,06,zs_pass_i,11,0x0762,ZS_06_zs_pass_i_11,rw,3,0,1,21,1,
ZS,06,zs_mask_i,11,0x0762,ZS_06_zs_mask_i_11,rw,3,0,1,22,1,
ZS,06,zs_lambda,12,0x0765,ZS_06_zs_lambda_12,rw,3,32,127,0,127,
ZS,06,zs_kappa,12,0x0765,ZS_06_zs_kappa_12,rw,3,32,63,7,63,
ZS,06,zs_c_i,12,0x0765,ZS_06_zs_c_i_12,rw,3,255,255,13,255,
ZS,06,zs_pass_i,12,0x0765,ZS_06_zs_pass_i_12,rw,3,0,1,21,1,
ZS,06,zs_mask_i,12,0x0765,ZS_06_zs_mask_i_12,rw,3,0,1,22,1,
ZS,06,zs_lambda,13,0x0768,ZS_06_zs_lambda_13,rw,3,32,127,0,127,
ZS,06,zs_kappa,13,0x0768,ZS_06_zs_kappa_13,rw,3,32,63,7,63,
ZS,06,zs_c_i,13,0x0768,ZS_06_zs_c_i_13,rw,3,255,255,13,255,
ZS,06,zs_pass_i,13,0x0768,ZS_06_zs_pass_i_13,rw,3,0,1,21,1,
ZS,06,zs_mask_i,13,0x0768,ZS_06_zs_mask_i_13,rw,3,0,1,22,1,
ZS,06,zs_lambda,14,0x076b,ZS_06_zs_lambda_14,rw,3,32,127,0,127,
ZS,06,zs_kappa,14,0x076b,ZS_06_zs_kappa_14,rw,3,32,63,7,63,
ZS,06,zs_c_i,14,0x076b,ZS_06_zs_c_i_14,rw,3,255,255,13,255,
ZS,06,zs_pass_i,14,0x076b,ZS_06_zs_pass_i_14,rw,3,0,1,21,1,
ZS,06,zs_mask_i,14,0x076b,ZS_06_zs_mask_i_14,rw,3,0,1,22,1,
ZS,06,zs_lambda,15,0x076e,ZS_06_zs_lambda_15,rw,3,32,127,0,127,
ZS,06,zs_kappa,15,0x076e,ZS_06_zs_kappa_15,rw,3,32,63,7,63,
ZS,06,zs_c_i,15,0x076e,ZS_06_zs_c_i_15,rw,3,255,255,13,255,
ZS,06,zs_pass_i,15,0x076e,ZS_06_zs_pass_i_15,rw,3,0,1,21,1,
ZS,06,zs_mask_i,15,0x076e,ZS_06_zs_mask_i_15,rw,3,0,1,22,1,
ZS,06,zs_lambda,16,0x0771,ZS_06_zs_lambda_16,rw,3,32,127,0,127,
ZS,06,zs_kappa,16,0x0771,ZS_06_zs_kappa_16,rw,3,32,63,7,63,
ZS,06,zs_c_i,16,0x0771,ZS_06_zs_c_i_16,rw,3,255,255,13,255,
ZS,06,zs_pass_i,16,0x0771,ZS_06_zs_pass_i_16,rw,3,0,1,21,1,
ZS,06,zs_mask_i,16,0x0771,ZS_06_zs_mask_i_16,rw,3,0,1,22,1,
ZS,06,zs_lambda,17,0x0774,ZS_06_zs_lambda_17,rw,3,32,127,0,127,
ZS,06,zs_kappa,17,0x0774,ZS_06_zs_kappa_17,rw,3,32,63,7,63,
ZS,06,zs_c_i,17,0x0774,ZS_06_zs_c_i_17,rw,3,255,255,13,255,
ZS,06,zs_pass_i,17,0x0774,ZS_06_zs_pass_i_17,rw,3,0,1,21,1,
ZS,06,zs_mask_i,17,0x0774,ZS_06_zs_mask_i_17,rw,3,0,1,22,1,
ZS,06,zs_lambda,18,0x0777,ZS_06_zs_lambda_18,rw,3,32,127,0,127,
ZS,06,zs_kappa,18,0x0777,ZS_06_zs_kappa_18,rw,3,32,63,7,63,
ZS,06,zs_c_i,18,0x0777,ZS_06_zs_c_i_18,rw,3,255,255,13,255,
ZS,06,zs_pass_i,18,0x0777,ZS_06_zs_pass_i_18,rw,3,0,1,21,1,
ZS,06,zs_mask_i,18,0x0777,ZS_06_zs_mask_i_18,rw,3,0,1,22,1,
ZS,06,zs_lambda,19,0x077a,ZS_06_zs_lambda_19,rw,3,32,127,0,127,
ZS,06,zs_kappa,19,0x077a,ZS_06_zs_kappa_19,rw,3,32,63,7,63,
ZS,06,zs_c_i,19,0x077a,ZS_06_zs_c_i_19,rw,3,255,255,13,255,
ZS,06,zs_pass_i,19,0x077a,ZS_06_zs_pass_i_19,rw,3,0,1,21,1,
ZS,06,zs_mask_i,19,0x077a,ZS_06_zs_mask_i_19,rw,3,0,1,22,1,
ZS,06,zs_lambda,20,0x077d,ZS_06_zs_lambda_20,rw,3,32,127,0,127,
ZS,06,zs_kappa,20,0x077d,ZS_06_zs_kappa_20,rw,3,32,63,7,63,
ZS,06,zs_c_i,20,0x077d,ZS_06_zs_c_i_20,rw,3,255,255,13,255,
ZS,06,zs_pass_i,20,0x077d,ZS_06_zs_pass_i_20,rw,3,0,1,21,1,
ZS,06,zs_mask_i,20,0x077d,ZS_06_zs_mask_i_20,rw,3,0,1,22,1,
ZS,06,zs_lambda,21,0x0780,ZS_06_zs_lambda_21,rw,3,32,127,0,127,
ZS,06,zs_kappa,21,0x0780,ZS_06_zs_kappa_21,rw,3,32,63,7,63,
ZS,06,zs_c_i,21,0x0780,ZS_06_zs_c_i_21,rw,3,255,255,13,255,
ZS,06,zs_pass_i,21,0x0780,ZS_06_zs_pass_i_21,rw,3,0,1,21,1,
ZS,06,zs_mask_i,21,0x0780,ZS_06_zs_mask_i_21,rw,3,0,1,22,1,
ZS,06,zs_lambda,22,0x0783,ZS_06_zs_lambda_22,rw,3,32,127,0,127,
ZS,06,zs_kappa,22,0x0783,ZS_06_zs_kappa_22,rw,3,32,63,7,63,
ZS,06,zs_c_i,22,0x0783,ZS_06_zs_c_i_22,rw,3,255,255,13,255,
ZS,06,zs_pass_i,22,0x0783,ZS_06_zs_pass_i_22,rw,3,0,1,21,1,
ZS,06,zs_mask_i,22,0x0783,ZS_06_zs_mask_i_22,rw,3,0,1,22,1,
ZS,06,zs_lambda,23,0x0786,ZS_06_zs_lambda_23,rw,3,32,127,0,127,
ZS,06,zs_kappa,23,0x0786,ZS_06_zs_kappa_23,rw,3,32,63,7,63,
ZS,06,zs_c_i,23,0x0786,ZS_06_zs_c_i_23,rw,3,255,255,13,255,
ZS,06,zs_pass_i,23,0x0786,ZS_06_zs_pass_i_23,rw,3,0,1,21,1,
ZS,06,zs_mask_i,23,0x0786,ZS_06_zs_mask_i_23,rw,3,0,1,22,1,
ZS,06,zs_lambda,24,0x0789,ZS_06_zs_lambda_24,rw,3,32,127,0,127,
ZS,06,zs_kappa,24,0x0789,ZS_06_zs_kappa_24,rw,3,32,63,7,63,
ZS,06,zs_c_i,24,0x0789,ZS_06_zs_c_i_24,rw,3,255,255,13,255,
ZS,06,zs_pass_i,24,0x0789,ZS_06_zs_pass_i_24,rw,3,0,1,21,1,
ZS,06,zs_mask_i,24,0x0789,ZS_06_zs_mask_i_24,rw,3,0,1,22,1,
ZS,06,zs_lambda,25,0x078c,ZS_06_zs_lambda_25,rw,3,32,127,0,127,
ZS,06,zs_kappa,25,0x078c,ZS_06_zs_kappa_25,rw,3,32,63,7,63,
ZS,06,zs_c_i,25,0x078c,ZS_06_zs_c_i_25,rw,3,255,255,13,255,
ZS,06,zs_pass_i,25,0x078c,ZS_06_zs_pass_i_25,rw,3,0,1,21,1,
ZS,06,zs_mask_i,25,0x078c,ZS_06_zs_mask_i_25,rw,3,0,1,22,1,
ZS,06,zs_lambda,26,0x078f,ZS_06_zs_lambda_26,rw,3,32,127,0,127,
ZS,06,zs_kappa,26,0x078f,ZS_06_zs_kappa_26,rw,3,32,63,7,63,
ZS,06,zs_c_i,26,0x078f,ZS_06_zs_c_i_26,rw,3,255,255,13,255,
ZS,06,zs_pass_i,26,0x078f,ZS_06_zs_pass_i_26,rw,3,0,1,21,1,
ZS,06,zs_mask_i,26,0x078f,ZS_06_zs_mask_i_26,rw,3,0,1,22,1,
ZS,06,zs_lambda,27,0x0792,ZS_06_zs_lambda_27,rw,3,32,127,0,127,
ZS,06,zs_kappa,27,0x0792,ZS_06_zs_kappa_27,rw,3,32,63,7,63,
ZS,06,zs_c_i,27,0x0792,ZS_06_zs_c_i_27,rw,3,255,255,13,255,
ZS,06,zs_pass_i,27,0x0792,ZS_06_zs_pass_i_27,rw,3,0,1,21,1,
ZS,06,zs_mask_i,27,0x0792,ZS_06_zs_mask_i_27,rw,3,0,1,22,1,
ZS,06,zs_lambda,28,0x0795,ZS_06_zs_lambda_28,rw,3,32,127,0,127,
ZS,06,zs_kappa,28,0x0795,ZS_06_zs_kappa_28,rw,3,32,63,7,63,
ZS,06,zs_c_i,28,0x0795,ZS_06_zs_c_i_28,rw,3,255,255,13,255,
ZS,06,zs_pass_i,28,0x0795,ZS_06_zs_pass_i_28,rw,3,0,1,21,1,
ZS,06,zs_mask_i,28,0x0795,ZS_06_zs_mask_i_28,rw,3,0,1,22,1,
ZS,06,zs_lambda,29,0x0798,ZS_06_zs_lambda_29,rw,3,32,127,0,127,
ZS,06,zs_kappa,29,0x0798,ZS_06_zs_kappa_29,rw,3,32,63,7,63,
ZS,06,zs_c_i,29,0x0798,ZS_06_zs_c_i_29,rw,3,255,255,13,255,
ZS,06,zs_pass_i,29,0x0798,ZS_06_zs_pass_i_29,rw,3,0,1,21,1,
ZS,06,zs_mask_i,29,0x0798,ZS_06_zs_mask_i_29,rw,3,0,1,22,1,
ZS,06,zs_lambda,30,0x079b,ZS_06_zs_lambda_30,rw,3,32,127,0,127,
ZS,06,zs_kappa,30,0x079b,ZS_06_zs_kappa_30,rw,3,32,63,7,63,
ZS,06,zs_c_i,30,0x079b,ZS_06_zs_c_i_30,rw,3,255,255,13,255,
ZS,06,zs_pass_i,30,0x079b,ZS_06_zs_pass_i_30,rw,3,0,1,21,1,
ZS,06,zs_mask_i,30,0x079b,ZS_06_zs_mask_i_30,rw,3,0,1,22,1,
ZS,06,zs_lambda,31,0x079e,ZS_06_zs_lambda_31,rw,3,32,127,0,127,
ZS,06,zs_kappa,31,0x079e,ZS_06_zs_kappa_31,rw,3,32,63,7,63,
ZS,06,zs_c_i,31,0x079e,ZS_06_zs_c_i_31,rw,3,255,255,13,255,
ZS,06,zs_pass_i,31,0x079e,ZS_06_zs_pass_i_31,rw,3,0,1,21,1,
ZS,06,zs_mask_i,31,0x079e,ZS_06_zs_mask_i_31,rw,3,0,1,22,1,
ZS,06,zs_lambda,32,0x07a1,ZS_06_zs_lambda_32,rw,3,32,127,0,127,
ZS,06,zs_kappa,32,0x07a1,ZS_06_zs_kappa_32,rw,3,32,63,7,63,
ZS,06,zs_c_i,32,0x07a1,ZS_06_zs_c_i_32,rw,3,255,255,13,255,
ZS,06,zs_pass_i,32,0x07a1,ZS_06_zs_pass_i_32,rw,3,0,1,21,1,
ZS,06,zs_mask_i,32,0x07a1,ZS_06_zs_mask_i_32,rw,3,0,1,22,1,
ZS,06,zs_lambda,33,0x07a4,ZS_06_zs_lambda_33,rw,3,32,127,0,127,
ZS,06,zs_kappa,33,0x07a4,ZS_06_zs_kappa_33,rw,3,32,63,7,63,
ZS,06,zs_c_i,33,0x07a4,ZS_06_zs_c_i_33,rw,3,255,255,13,255,
ZS,06,zs_pass_i,33,0x07a4,ZS_06_zs_pass_i_33,rw,3,0,1,21,1,
ZS,06,zs_mask_i,33,0x07a4,ZS_06_zs_mask_i_33,rw,3,0,1,22,1,
ZS,06,zs_lambda,34,0x07a7,ZS_06_zs_lambda_34,rw,3,32,127,0,127,
ZS,06,zs_kappa,34,0x07a7,ZS_06_zs_kappa_34,rw,3,32,63,7,63,
ZS,06,zs_c_i,34,0x07a7,ZS_06_zs_c_i_34,rw,3,255,255,13,255,
ZS,06,zs_pass_i,34,0x07a7,ZS_06_zs_pass_i_34,rw,3,0,1,21,1,
ZS,06,zs_mask_i,34,0x07a7,ZS_06_zs_mask_i_34,rw,3,0,1,22,1,
ZS,06,zs_lambda,35,0x07aa,ZS_06_zs_lambda_35,rw,3,32,127,0,127,
ZS,06,zs_kappa,35,0x07aa,ZS_06_zs_kappa_35,rw,3,32,63,7,63,
ZS,06,zs_c_i,35,0x07aa,ZS_06_zs_c_i_35,rw,3,255,255,13,255,
ZS,06,zs_pass_i,35,0x07aa,ZS_06_zs_pass_i_35,rw,3,0,1,21,1,
ZS,06,zs_mask_i,35,0x07aa,ZS_06_zs_mask_i_35,rw,3,0,1,22,1,
ZS,06,zs_lambda,36,0x07ad,ZS_06_zs_lambda_36,rw,3,32,127,0,127,
ZS,06,zs_kappa,36,0x07ad,ZS_06_zs_kappa_36,rw,3,32,63,7,63,
ZS,06,zs_c_i,36,0x07ad,ZS_06_zs_c_i_36,rw,3,255,255,13,255,
ZS,06,zs_pass_i,36,0x07ad,ZS_06_zs_pass_i_36,rw,3,0,1,21,1,
ZS,06,zs_mask_i,36,0x07ad,ZS_06_zs_mask_i_36,rw,3,0,1,22,1,
ZS,07,zs_lambda,00,0x07b0,ZS_07_zs_lambda_00,rw,3,32,127,0,127,
ZS,07,zs_kappa,00,0x07b0,ZS_07_zs_kappa_00,rw,3,32,63,7,63,
ZS,07,zs_c_i,00,0x07b0,ZS_07_zs_c_i_00,rw,3,255,255,13,255,
ZS,07,zs_pass_i,00,0x07b0,ZS_07_zs_pass_i_00,rw,3,0,1,21,1,
ZS,07,zs_mask_i,00,0x07b0,ZS_07_zs_mask_i_00,rw,3,0,1,22,1,
ZS,07,zs_lambda,01,0x07b3,ZS_07_zs_lambda_01,rw,3,32,127,0,127,
ZS,07,zs_kappa,01,0x07b3,ZS_07_zs_kappa_01,rw,3,32,63,7,63,
ZS,07,zs_c_i,01,0x07b3,ZS_07_zs_c_i_01,rw,3,255,255,13,255,
ZS,07,zs_pass_i,01,0x07b3,ZS_07_zs_pass_i_01,rw,3,0,1,21,1,
ZS,07,zs_mask_i,01,0x07b3,ZS_07_zs_mask_i_01,rw,3,0,1,22,1,
ZS,07,zs_lambda,02,0x07b6,ZS_07_zs_lambda_02,rw,3,32,127,0,127,
ZS,07,zs_kappa,02,0x07b6,ZS_07_zs_kappa_02,rw,3,32,63,7,63,
ZS,07,zs_c_i,02,0x07b6,ZS_07_zs_c_i_02,rw,3,255,255,13,255,
ZS,07,zs_pass_i,02,0x07b6,ZS_07_zs_pass_i_02,rw,3,0,1,21,1,
ZS,07,zs_mask_i,02,0x07b6,ZS_07_zs_mask_i_02,rw,3,0,1,22,1,
ZS,07,zs_lambda,03,0x07b9,ZS_07_zs_lambda_03,rw,3,32,127,0,127,
ZS,07,zs_kappa,03,0x07b9,ZS_07_zs_kappa_03,rw,3,32,63,7,63,
ZS,07,zs_c_i,03,0x07b9,ZS_07_zs_c_i_03,rw,3,255,255,13,255,
ZS,07,zs_pass_i,03,0x07b9,ZS_07_zs_pass_i_03,rw,3,0,1,21,1,
ZS,07,zs_mask_i,03,0x07b9,ZS_07_zs_mask_i_03,rw,3,0,1,22,1,
ZS,07,zs_lambda,04,0x07bc,ZS_07_zs_lambda_04,rw,3,32,127,0,127,
ZS,07,zs_kappa,04,0x07bc,ZS_07_zs_kappa_04,rw,3,32,63,7,63,
ZS,07,zs_c_i,04,0x07bc,ZS_07_zs_c_i_04,rw,3,255,255,13,255,
ZS,07,zs_pass_i,04,0x07bc,ZS_07_zs_pass_i_04,rw,3,0,1,21,1,
ZS,07,zs_mask_i,04,0x07bc,ZS_07_zs_mask_i_04,rw,3,0,1,22,1,
ZS,07,zs_lambda,05,0x07bf,ZS_07_zs_lambda_05,rw,3,32,127,0,127,
ZS,07,zs_kappa,05,0x07bf,ZS_07_zs_kappa_05,rw,3,32,63,7,63,
ZS,07,zs_c_i,05,0x07bf,ZS_07_zs_c_i_05,rw,3,255,255,13,255,
ZS,07,zs_pass_i,05,0x07bf,ZS_07_zs_pass_i_05,rw,3,0,1,21,1,
ZS,07,zs_mask_i,05,0x07bf,ZS_07_zs_mask_i_05,rw,3,0,1,22,1,
ZS,07,zs_lambda,06,0x07c2,ZS_07_zs_lambda_06,rw,3,32,127,0,127,
ZS,07,zs_kappa,06,0x07c2,ZS_07_zs_kappa_06,rw,3,32,63,7,63,
ZS,07,zs_c_i,06,0x07c2,ZS_07_zs_c_i_06,rw,3,255,255,13,255,
ZS,07,zs_pass_i,06,0x07c2,ZS_07_zs_pass_i_06,rw,3,0,1,21,1,
ZS,07,zs_mask_i,06,0x07c2,ZS_07_zs_mask_i_06,rw,3,0,1,22,1,
ZS,07,zs_lambda,07,0x07c5,ZS_07_zs_lambda_07,rw,3,32,127,0,127,
ZS,07,zs_kappa,07,0x07c5,ZS_07_zs_kappa_07,rw,3,32,63,7,63,
ZS,07,zs_c_i,07,0x07c5,ZS_07_zs_c_i_07,rw,3,255,255,13,255,
ZS,07,zs_pass_i,07,0x07c5,ZS_07_zs_pass_i_07,rw,3,0,1,21,1,
ZS,07,zs_mask_i,07,0x07c5,ZS_07_zs_mask_i_07,rw,3,0,1,22,1,
ZS,07,zs_lambda,08,0x07c8,ZS_07_zs_lambda_08,rw,3,32,127,0,127,
ZS,07,zs_kappa,08,0x07c8,ZS_07_zs_kappa_08,rw,3,32,63,7,63,
ZS,07,zs_c_i,08,0x07c8,ZS_07_zs_c_i_08,rw,3,255,255,13,255,
ZS,07,zs_pass_i,08,0x07c8,ZS_07_zs_pass_i_08,rw,3,0,1,21,1,
ZS,07,zs_mask_i,08,0x07c8,ZS_07_zs_mask_i_08,rw,3,0,1,22,1,
ZS,07,zs_lambda,09,0x07cb,ZS_07_zs_lambda_09,rw,3,32,127,0,127,
ZS,07,zs_kappa,09,0x07cb,ZS_07_zs_kappa_09,rw,3,32,63,7,63,
ZS,07,zs_c_i,09,0x07cb,ZS_07_zs_c_i_09,rw,3,255,255,13,255,
ZS,07,zs_pass_i,09,0x07cb,ZS_07_zs_pass_i_09,rw,3,0,1,21,1,
ZS,07,zs_mask_i,09,0x07cb,ZS_07_zs_mask_i_09,rw,3,0,1,22,1,
ZS,07,zs_lambda,10,0x07ce,ZS_07_zs_lambda_10,rw,3,32,127,0,127,
ZS,07,zs_kappa,10,0x07ce,ZS_07_zs_kappa_10,rw,3,32,63,7,63,
ZS,07,zs_c_i,10,0x07ce,ZS_07_zs_c_i_10,rw,3,255,255,13,255,
ZS,07,zs_pass_i,10,0x07ce,ZS_07_zs_pass_i_10,rw,3,0,1,21,1,
ZS,07,zs_mask_i,10,0x07ce,ZS_07_zs_mask_i_10,rw,3,0,1,22,1,
ZS,07,zs_lambda,11,0x07d1,ZS_07_zs_lambda_11,rw,3,32,127,0,127,
ZS,07,zs_kappa,11,0x07d1,ZS_07_zs_kappa_11,rw,3,32,63,7,63,
ZS,07,zs_c_i,11,0x07d1,ZS_07_zs_c_i_11,rw,3,255,255,13,255,
ZS,07,zs_pass_i,11,0x07d1,ZS_07_zs_pass_i_11,rw,3,0,1,21,1,
ZS,07,zs_mask_i,11,0x07d1,ZS_07_zs_mask_i_11,rw,3,0,1,22,1,
ZS,07,zs_lambda,12,0x07d4,ZS_07_zs_lambda_12,rw,3,32,127,0,127,
ZS,07,zs_kappa,12,0x07d4,ZS_07_zs_kappa_12,rw,3,32,63,7,63,
ZS,07,zs_c_i,12,0x07d4,ZS_07_zs_c_i_12,rw,3,255,255,13,255,
ZS,07,zs_pass_i,12,0x07d4,ZS_07_zs_pass_i_12,rw,3,0,1,21,1,
ZS,07,zs_mask_i,12,0x07d4,ZS_07_zs_mask_i_12,rw,3,0,1,22,1,
ZS,07,zs_lambda,13,0x07d7,ZS_07_zs_lambda_13,rw,3,32,127,0,127,
ZS,07,zs_kappa,13,0x07d7,ZS_07_zs_kappa_13,rw,3,32,63,7,63,
ZS,07,zs_c_i,13,0x07d7,ZS_07_zs_c_i_13,rw,3,255,255,13,255,
ZS,07,zs_pass_i,13,0x07d7,ZS_07_zs_pass_i_13,rw,3,0,1,21,1,
ZS,07,zs_mask_i,13,0x07d7,ZS_07_zs_mask_i_13,rw,3,0,1,22,1,
ZS,07,zs_lambda,14,0x07da,ZS_07_zs_lambda_14,rw,3,32,127,0,127,
ZS,07,zs_kappa,14,0x07da,ZS_07_zs_kappa_14,rw,3,32,63,7,63,
ZS,07,zs_c_i,14,0x07da,ZS_07_zs_c_i_14,rw,3,255,255,13,255,
ZS,07,zs_pass_i,14,0x07da,ZS_07_zs_pass_i_14,rw,3,0,1,21,1,
ZS,07,zs_mask_i,14,0x07da,ZS_07_zs_mask_i_14,rw,3,0,1,22,1,
ZS,07,zs_lambda,15,0x07dd,ZS_07_zs_lambda_15,rw,3,32,127,0,127,
ZS,07,zs_kappa,15,0x07dd,ZS_07_zs_kappa_15,rw,3,32,63,7,63,
ZS,07,zs_c_i,15,0x07dd,ZS_07_zs_c_i_15,rw,3,255,255,13,255,
ZS,07,zs_pass_i,15,0x07dd,ZS_07_zs_pass_i_15,rw,3,0,1,21,1,
ZS,07,zs_mask_i,15,0x07dd,ZS_07_zs_mask_i_15,rw,3,0,1,22,1,
ZS,07,zs_lambda,16,0x07e0,ZS_07_zs_lambda_16,rw,3,32,127,0,127,
ZS,07,zs_kappa,16,0x07e0,ZS_07_zs_kappa_16,rw,3,32,63,7,63,
ZS,07,zs_c_i,16,0x07e0,ZS_07_zs_c_i_16,rw,3,255,255,13,255,
ZS,07,zs_pass_i,16,0x07e0,ZS_07_zs_pass_i_16,rw,3,0,1,21,1,
ZS,07,zs_mask_i,16,0x07e0,ZS_07_zs_mask_i_16,rw,3,0,1,22,1,
ZS,07,zs_lambda,17,0x07e3,ZS_07_zs_lambda_17,rw,3,32,127,0,127,
ZS,07,zs_kappa,17,0x07e3,ZS_07_zs_kappa_17,rw,3,32,63,7,63,
ZS,07,zs_c_i,17,0x07e3,ZS_07_zs_c_i_17,rw,3,255,255,13,255,
ZS,07,zs_pass_i,17,0x07e3,ZS_07_zs_pass_i_17,rw,3,0,1,21,1,
ZS,07,zs_mask_i,17,0x07e3,ZS_07_zs_mask_i_17,rw,3,0,1,22,1,
ZS,07,zs_lambda,18,0x07e6,ZS_07_zs_lambda_18,rw,3,32,127,0,127,
ZS,07,zs_kappa,18,0x07e6,ZS_07_zs_kappa_18,rw,3,32,63,7,63,
ZS,07,zs_c_i,18,0x07e6,ZS_07_zs_c_i_18,rw,3,255,255,13,255,
ZS,07,zs_pass_i,18,0x07e6,ZS_07_zs_pass_i_18,rw,3,0,1,21,1,
ZS,07,zs_mask_i,18,0x07e6,ZS_07_zs_mask_i_18,rw,3,0,1,22,1,
ZS,07,zs_lambda,19,0x07e9,ZS_07_zs_lambda_19,rw,3,32,127,0,127,
ZS,07,zs_kappa,19,0x07e9,ZS_07_zs_kappa_19,rw,3,32,63,7,63,
ZS,07,zs_c_i,19,0x07e9,ZS_07_zs_c_i_19,rw,3,255,255,13,255,
ZS,07,zs_pass_i,19,0x07e9,ZS_07_zs_pass_i_19,rw,3,0,1,21,1,
ZS,07,zs_mask_i,19,0x07e9,ZS_07_zs_mask_i_19,rw,3,0,1,22,1,
ZS,07,zs_lambda,20,0x07ec,ZS_07_zs_lambda_20,rw,3,32,127,0,127,
ZS,07,zs_kappa,20,0x07ec,ZS_07_zs_kappa_20,rw,3,32,63,7,63,
ZS,07,zs_c_i,20,0x07ec,ZS_07_zs_c_i_20,rw,3,255,255,13,255,
ZS,07,zs_pass_i,20,0x07ec,ZS_07_zs_pass_i_20,rw,3,0,1,21,1,
ZS,07,zs_mask_i,20,0x07ec,ZS_07_zs_mask_i_20,rw,3,0,1,22,1,
ZS,07,zs_lambda,21,0x07ef,ZS_07_zs_lambda_21,rw,3,32,127,0,127,
ZS,07,zs_kappa,21,0x07ef,ZS_07_zs_kappa_21,rw,3,32,63,7,63,
ZS,07,zs_c_i,21,0x07ef,ZS_07_zs_c_i_21,rw,3,255,255,13,255,
ZS,07,zs_pass_i,21,0x07ef,ZS_07_zs_pass_i_21,rw,3,0,1,21,1,
ZS,07,zs_mask_i,21,0x07ef,ZS_07_zs_mask_i_21,rw,3,0,1,22,1,
ZS,07,zs_lambda,22,0x07f2,ZS_07_zs_lambda_22,rw,3,32,127,0,127,
ZS,07,zs_kappa,22,0x07f2,ZS_07_zs_kappa_22,rw,3,32,63,7,63,
ZS,07,zs_c_i,22,0x07f2,ZS_07_zs_c_i_22,rw,3,255,255,13,255,
ZS,07,zs_pass_i,22,0x07f2,ZS_07_zs_pass_i_22,rw,3,0,1,21,1,
ZS,07,zs_mask_i,22,0x07f2,ZS_07_zs_mask_i_22,rw,3,0,1,22,1,
ZS,07,zs_lambda,23,0x07f5,ZS_07_zs_lambda_23,rw,3,32,127,0,127,
ZS,07,zs_kappa,23,0x07f5,ZS_07_zs_kappa_23,rw,3,32,63,7,63,
ZS,07,zs_c_i,23,0x07f5,ZS_07_zs_c_i_23,rw,3,255,255,13,255,
ZS,07,zs_pass_i,23,0x07f5,ZS_07_zs_pass_i_23,rw,3,0,1,21,1,
ZS,07,zs_mask_i,23,0x07f5,ZS_07_zs_mask_i_23,rw,3,0,1,22,1,
ZS,07,zs_lambda,24,0x07f8,ZS_07_zs_lambda_24,rw,3,32,127,0,127,
ZS,07,zs_kappa,24,0x07f8,ZS_07_zs_kappa_24,rw,3,32,63,7,63,
ZS,07,zs_c_i,24,0x07f8,ZS_07_zs_c_i_24,rw,3,255,255,13,255,
ZS,07,zs_pass_i,24,0x07f8,ZS_07_zs_pass_i_24,rw,3,0,1,21,1,
ZS,07,zs_mask_i,24,0x07f8,ZS_07_zs_mask_i_24,rw,3,0,1,22,1,
ZS,07,zs_lambda,25,0x07fb,ZS_07_zs_lambda_25,rw,3,32,127,0,127,
ZS,07,zs_kappa,25,0x07fb,ZS_07_zs_kappa_25,rw,3,32,63,7,63,
ZS,07,zs_c_i,25,0x07fb,ZS_07_zs_c_i_25,rw,3,255,255,13,255,
ZS,07,zs_pass_i,25,0x07fb,ZS_07_zs_pass_i_25,rw,3,0,1,21,1,
ZS,07,zs_mask_i,25,0x07fb,ZS_07_zs_mask_i_25,rw,3,0,1,22,1,
ZS,07,zs_lambda,26,0x07fe,ZS_07_zs_lambda_26,rw,3,32,127,0,127,
ZS,07,zs_kappa,26,0x07fe,ZS_07_zs_kappa_26,rw,3,32,63,7,63,
ZS,07,zs_c_i,26,0x07fe,ZS_07_zs_c_i_26,rw,3,255,255,13,255,
ZS,07,zs_pass_i,26,0x07fe,ZS_07_zs_pass_i_26,rw,3,0,1,21,1,
ZS,07,zs_mask_i,26,0x07fe,ZS_07_zs_mask_i_26,rw,3,0,1,22,1,
ZS,07,zs_lambda,27,0x0801,ZS_07_zs_lambda_27,rw,3,32,127,0,127,
ZS,07,zs_kappa,27,0x0801,ZS_07_zs_kappa_27,rw,3,32,63,7,63,
ZS,07,zs_c_i,27,0x0801,ZS_07_zs_c_i_27,rw,3,255,255,13,255,
ZS,07,zs_pass_i,27,0x0801,ZS_07_zs_pass_i_27,rw,3,0,1,21,1,
ZS,07,zs_mask_i,27,0x0801,ZS_07_zs_mask_i_27,rw,3,0,1,22,1,
ZS,07,zs_lambda,28,0x0804,ZS_07_zs_lambda_28,rw,3,32,127,0,127,
ZS,07,zs_kappa,28,0x0804,ZS_07_zs_kappa_28,rw,3,32,63,7,63,
ZS,07,zs_c_i,28,0x0804,ZS_07_zs_c_i_28,rw,3,255,255,13,255,
ZS,07,zs_pass_i,28,0x0804,ZS_07_zs_pass_i_28,rw,3,0,1,21,1,
ZS,07,zs_mask_i,28,0x0804,ZS_07_zs_mask_i_28,rw,3,0,1,22,1,
ZS,07,zs_lambda,29,0x0807,ZS_07_zs_lambda_29,rw,3,32,127,0,127,
ZS,07,zs_kappa,29,0x0807,ZS_07_zs_kappa_29,rw,3,32,63,7,63,
ZS,07,zs_c_i,29,0x0807,ZS_07_zs_c_i_29,rw,3,255,255,13,255,
ZS,07,zs_pass_i,29,0x0807,ZS_07_zs_pass_i_29,rw,3,0,1,21,1,
ZS,07,zs_mask_i,29,0x0807,ZS_07_zs_mask_i_29,rw,3,0,1,22,1,
ZS,07,zs_lambda,30,0x080a,ZS_07_zs_lambda_30,rw,3,32,127,0,127,
ZS,07,zs_kappa,30,0x080a,ZS_07_zs_kappa_30,rw,3,32,63,7,63,
ZS,07,zs_c_i,30,0x080a,ZS_07_zs_c_i_30,rw,3,255,255,13,255,
ZS,07,zs_pass_i,30,0x080a,ZS_07_zs_pass_i_30,rw,3,0,1,21,1,
ZS,07,zs_mask_i,30,0x080a,ZS_07_zs_mask_i_30,rw,3,0,1,22,1,
ZS,07,zs_lambda,31,0x080d,ZS_07_zs_lambda_31,rw,3,32,127,0,127,
ZS,07,zs_kappa,31,0x080d,ZS_07_zs_kappa_31,rw,3,32,63,7,63,
ZS,07,zs_c_i,31,0x080d,ZS_07_zs_c_i_31,rw,3,255,255,13,255,
ZS,07,zs_pass_i,31,0x080d,ZS_07_zs_pass_i_31,rw,3,0,1,21,1,
ZS,07,zs_mask_i,31,0x080d,ZS_07_zs_mask_i_31,rw,3,0,1,22,1,
ZS,07,zs_lambda,32,0x0810,ZS_07_zs_lambda_32,rw,3,32,127,0,127,
ZS,07,zs_kappa,32,0x0810,ZS_07_zs_kappa_32,rw,3,32,63,7,63,
ZS,07,zs_c_i,32,0x0810,ZS_07_zs_c_i_32,rw,3,255,255,13,255,
ZS,07,zs_pass_i,32,0x0810,ZS_07_zs_pass_i_32,rw,3,0,1,21,1,
ZS,07,zs_mask_i,32,0x0810,ZS_07_zs_mask_i_32,rw,3,0,1,22,1,
ZS,07,zs_lambda,33,0x0813,ZS_07_zs_lambda_33,rw,3,32,127,0,127,
ZS,07,zs_kappa,33,0x0813,ZS_07_zs_kappa_33,rw,3,32,63,7,63,
ZS,07,zs_c_i,33,0x0813,ZS_07_zs_c_i_33,rw,3,255,255,13,255,
ZS,07,zs_pass_i,33,0x0813,ZS_07_zs_pass_i_33,rw,3,0,1,21,1,
ZS,07,zs_mask_i,33,0x0813,ZS_07_zs_mask_i_33,rw,3,0,1,22,1,
ZS,07,zs_lambda,34,0x0816,ZS_07_zs_lambda_34,rw,3,32,127,0,127,
ZS,07,zs_kappa,34,0x0816,ZS_07_zs_kappa_34,rw,3,32,63,7,63,
ZS,07,zs_c_i,34,0x0816,ZS_07_zs_c_i_34,rw,3,255,255,13,255,
ZS,07,zs_pass_i,34,0x0816,ZS_07_zs_pass_i_34,rw,3,0,1,21,1,
ZS,07,zs_mask_i,34,0x0816,ZS_07_zs_mask_i_34,rw,3,0,1,22,1,
ZS,07,zs_lambda,35,0x0819,ZS_07_zs_lambda_35,rw,3,32,127,0,127,
ZS,07,zs_kappa,35,0x0819,ZS_07_zs_kappa_35,rw,3,32,63,7,63,
ZS,07,zs_c_i,35,0x0819,ZS_07_zs_c_i_35,rw,3,255,255,13,255,
ZS,07,zs_pass_i,35,0x0819,ZS_07_zs_pass_i_35,rw,3,0,1,21,1,
ZS,07,zs_mask_i,35,0x0819,ZS_07_zs_mask_i_35,rw,3,0,1,22,1,
ZS,07,zs_lambda,36,0x081c,ZS_07_zs_lambda_36,rw,3,32,127,0,127,
ZS,07,zs_kappa,36,0x081c,ZS_07_zs_kappa_36,rw,3,32,63,7,63,
ZS,07,zs_c_i,36,0x081c,ZS_07_zs_c_i_36,rw,3,255,255,13,255,
ZS,07,zs_pass_i,36,0x081c,ZS_07_zs_pass_i_36,rw,3,0,1,21,1,
ZS,07,zs_mask_i,36,0x081c,ZS_07_zs_mask_i_36,rw,3,0,1,22,1,
ZS,08,zs_lambda,00,0x081f,ZS_08_zs_lambda_00,rw,3,32,127,0,127,
ZS,08,zs_kappa,00,0x081f,ZS_08_zs_kappa_00,rw,3,32,63,7,63,
ZS,08,zs_c_i,00,0x081f,ZS_08_zs_c_i_00,rw,3,255,255,13,255,
ZS,08,zs_pass_i,00,0x081f,ZS_08_zs_pass_i_00,rw,3,0,1,21,1,
ZS,08,zs_mask_i,00,0x081f,ZS_08_zs_mask_i_00,rw,3,0,1,22,1,
ZS,08,zs_lambda,01,0x0822,ZS_08_zs_lambda_01,rw,3,32,127,0,127,
ZS,08,zs_kappa,01,0x0822,ZS_08_zs_kappa_01,rw,3,32,63,7,63,
ZS,08,zs_c_i,01,0x0822,ZS_08_zs_c_i_01,rw,3,255,255,13,255,
ZS,08,zs_pass_i,01,0x0822,ZS_08_zs_pass_i_01,rw,3,0,1,21,1,
ZS,08,zs_mask_i,01,0x0822,ZS_08_zs_mask_i_01,rw,3,0,1,22,1,
ZS,08,zs_lambda,02,0x0825,ZS_08_zs_lambda_02,rw,3,32,127,0,127,
ZS,08,zs_kappa,02,0x0825,ZS_08_zs_kappa_02,rw,3,32,63,7,63,
ZS,08,zs_c_i,02,0x0825,ZS_08_zs_c_i_02,rw,3,255,255,13,255,
ZS,08,zs_pass_i,02,0x0825,ZS_08_zs_pass_i_02,rw,3,0,1,21,1,
ZS,08,zs_mask_i,02,0x0825,ZS_08_zs_mask_i_02,rw,3,0,1,22,1,
ZS,08,zs_lambda,03,0x0828,ZS_08_zs_lambda_03,rw,3,32,127,0,127,
ZS,08,zs_kappa,03,0x0828,ZS_08_zs_kappa_03,rw,3,32,63,7,63,
ZS,08,zs_c_i,03,0x0828,ZS_08_zs_c_i_03,rw,3,255,255,13,255,
ZS,08,zs_pass_i,03,0x0828,ZS_08_zs_pass_i_03,rw,3,0,1,21,1,
ZS,08,zs_mask_i,03,0x0828,ZS_08_zs_mask_i_03,rw,3,0,1,22,1,
ZS,08,zs_lambda,04,0x082b,ZS_08_zs_lambda_04,rw,3,32,127,0,127,
ZS,08,zs_kappa,04,0x082b,ZS_08_zs_kappa_04,rw,3,32,63,7,63,
ZS,08,zs_c_i,04,0x082b,ZS_08_zs_c_i_04,rw,3,255,255,13,255,
ZS,08,zs_pass_i,04,0x082b,ZS_08_zs_pass_i_04,rw,3,0,1,21,1,
ZS,08,zs_mask_i,04,0x082b,ZS_08_zs_mask_i_04,rw,3,0,1,22,1,
ZS,08,zs_lambda,05,0x082e,ZS_08_zs_lambda_05,rw,3,32,127,0,127,
ZS,08,zs_kappa,05,0x082e,ZS_08_zs_kappa_05,rw,3,32,63,7,63,
ZS,08,zs_c_i,05,0x082e,ZS_08_zs_c_i_05,rw,3,255,255,13,255,
ZS,08,zs_pass_i,05,0x082e,ZS_08_zs_pass_i_05,rw,3,0,1,21,1,
ZS,08,zs_mask_i,05,0x082e,ZS_08_zs_mask_i_05,rw,3,0,1,22,1,
ZS,08,zs_lambda,06,0x0831,ZS_08_zs_lambda_06,rw,3,32,127,0,127,
ZS,08,zs_kappa,06,0x0831,ZS_08_zs_kappa_06,rw,3,32,63,7,63,
ZS,08,zs_c_i,06,0x0831,ZS_08_zs_c_i_06,rw,3,255,255,13,255,
ZS,08,zs_pass_i,06,0x0831,ZS_08_zs_pass_i_06,rw,3,0,1,21,1,
ZS,08,zs_mask_i,06,0x0831,ZS_08_zs_mask_i_06,rw,3,0,1,22,1,
ZS,08,zs_lambda,07,0x0834,ZS_08_zs_lambda_07,rw,3,32,127,0,127,
ZS,08,zs_kappa,07,0x0834,ZS_08_zs_kappa_07,rw,3,32,63,7,63,
ZS,08,zs_c_i,07,0x0834,ZS_08_zs_c_i_07,rw,3,255,255,13,255,
ZS,08,zs_pass_i,07,0x0834,ZS_08_zs_pass_i_07,rw,3,0,1,21,1,
ZS,08,zs_mask_i,07,0x0834,ZS_08_zs_mask_i_07,rw,3,0,1,22,1,
ZS,08,zs_lambda,08,0x0837,ZS_08_zs_lambda_08,rw,3,32,127,0,127,
ZS,08,zs_kappa,08,0x0837,ZS_08_zs_kappa_08,rw,3,32,63,7,63,
ZS,08,zs_c_i,08,0x0837,ZS_08_zs_c_i_08,rw,3,255,255,13,255,
ZS,08,zs_pass_i,08,0x0837,ZS_08_zs_pass_i_08,rw,3,0,1,21,1,
ZS,08,zs_mask_i,08,0x0837,ZS_08_zs_mask_i_08,rw,3,0,1,22,1,
ZS,08,zs_lambda,09,0x083a,ZS_08_zs_lambda_09,rw,3,32,127,0,127,
ZS,08,zs_kappa,09,0x083a,ZS_08_zs_kappa_09,rw,3,32,63,7,63,
ZS,08,zs_c_i,09,0x083a,ZS_08_zs_c_i_09,rw,3,255,255,13,255,
ZS,08,zs_pass_i,09,0x083a,ZS_08_zs_pass_i_09,rw,3,0,1,21,1,
ZS,08,zs_mask_i,09,0x083a,ZS_08_zs_mask_i_09,rw,3,0,1,22,1,
ZS,08,zs_lambda,10,0x083d,ZS_08_zs_lambda_10,rw,3,32,127,0,127,
ZS,08,zs_kappa,10,0x083d,ZS_08_zs_kappa_10,rw,3,32,63,7,63,
ZS,08,zs_c_i,10,0x083d,ZS_08_zs_c_i_10,rw,3,255,255,13,255,
ZS,08,zs_pass_i,10,0x083d,ZS_08_zs_pass_i_10,rw,3,0,1,21,1,
ZS,08,zs_mask_i,10,0x083d,ZS_08_zs_mask_i_10,rw,3,0,1,22,1,
ZS,08,zs_lambda,11,0x0840,ZS_08_zs_lambda_11,rw,3,32,127,0,127,
ZS,08,zs_kappa,11,0x0840,ZS_08_zs_kappa_11,rw,3,32,63,7,63,
ZS,08,zs_c_i,11,0x0840,ZS_08_zs_c_i_11,rw,3,255,255,13,255,
ZS,08,zs_pass_i,11,0x0840,ZS_08_zs_pass_i_11,rw,3,0,1,21,1,
ZS,08,zs_mask_i,11,0x0840,ZS_08_zs_mask_i_11,rw,3,0,1,22,1,
ZS,08,zs_lambda,12,0x0843,ZS_08_zs_lambda_12,rw,3,32,127,0,127,
ZS,08,zs_kappa,12,0x0843,ZS_08_zs_kappa_12,rw,3,32,63,7,63,
ZS,08,zs_c_i,12,0x0843,ZS_08_zs_c_i_12,rw,3,255,255,13,255,
ZS,08,zs_pass_i,12,0x0843,ZS_08_zs_pass_i_12,rw,3,0,1,21,1,
ZS,08,zs_mask_i,12,0x0843,ZS_08_zs_mask_i_12,rw,3,0,1,22,1,
ZS,08,zs_lambda,13,0x0846,ZS_08_zs_lambda_13,rw,3,32,127,0,127,
ZS,08,zs_kappa,13,0x0846,ZS_08_zs_kappa_13,rw,3,32,63,7,63,
ZS,08,zs_c_i,13,0x0846,ZS_08_zs_c_i_13,rw,3,255,255,13,255,
ZS,08,zs_pass_i,13,0x0846,ZS_08_zs_pass_i_13,rw,3,0,1,21,1,
ZS,08,zs_mask_i,13,0x0846,ZS_08_zs_mask_i_13,rw,3,0,1,22,1,
ZS,08,zs_lambda,14,0x0849,ZS_08_zs_lambda_14,rw,3,32,127,0,127,
ZS,08,zs_kappa,14,0x0849,ZS_08_zs_kappa_14,rw,3,32,63,7,63,
ZS,08,zs_c_i,14,0x0849,ZS_08_zs_c_i_14,rw,3,255,255,13,255,
ZS,08,zs_pass_i,14,0x0849,ZS_08_zs_pass_i_14,rw,3,0,1,21,1,
ZS,08,zs_mask_i,14,0x0849,ZS_08_zs_mask_i_14,rw,3,0,1,22,1,
ZS,08,zs_lambda,15,0x084c,ZS_08_zs_lambda_15,rw,3,32,127,0,127,
ZS,08,zs_kappa,15,0x084c,ZS_08_zs_kappa_15,rw,3,32,63,7,63,
ZS,08,zs_c_i,15,0x084c,ZS_08_zs_c_i_15,rw,3,255,255,13,255,
ZS,08,zs_pass_i,15,0x084c,ZS_08_zs_pass_i_15,rw,3,0,1,21,1,
ZS,08,zs_mask_i,15,0x084c,ZS_08_zs_mask_i_15,rw,3,0,1,22,1,
ZS,08,zs_lambda,16,0x084f,ZS_08_zs_lambda_16,rw,3,32,127,0,127,
ZS,08,zs_kappa,16,0x084f,ZS_08_zs_kappa_16,rw,3,32,63,7,63,
ZS,08,zs_c_i,16,0x084f,ZS_08_zs_c_i_16,rw,3,255,255,13,255,
ZS,08,zs_pass_i,16,0x084f,ZS_08_zs_pass_i_16,rw,3,0,1,21,1,
ZS,08,zs_mask_i,16,0x084f,ZS_08_zs_mask_i_16,rw,3,0,1,22,1,
ZS,08,zs_lambda,17,0x0852,ZS_08_zs_lambda_17,rw,3,32,127,0,127,
ZS,08,zs_kappa,17,0x0852,ZS_08_zs_kappa_17,rw,3,32,63,7,63,
ZS,08,zs_c_i,17,0x0852,ZS_08_zs_c_i_17,rw,3,255,255,13,255,
ZS,08,zs_pass_i,17,0x0852,ZS_08_zs_pass_i_17,rw,3,0,1,21,1,
ZS,08,zs_mask_i,17,0x0852,ZS_08_zs_mask_i_17,rw,3,0,1,22,1,
ZS,08,zs_lambda,18,0x0855,ZS_08_zs_lambda_18,rw,3,32,127,0,127,
ZS,08,zs_kappa,18,0x0855,ZS_08_zs_kappa_18,rw,3,32,63,7,63,
ZS,08,zs_c_i,18,0x0855,ZS_08_zs_c_i_18,rw,3,255,255,13,255,
ZS,08,zs_pass_i,18,0x0855,ZS_08_zs_pass_i_18,rw,3,0,1,21,1,
ZS,08,zs_mask_i,18,0x0855,ZS_08_zs_mask_i_18,rw,3,0,1,22,1,
ZS,08,zs_lambda,19,0x0858,ZS_08_zs_lambda_19,rw,3,32,127,0,127,
ZS,08,zs_kappa,19,0x0858,ZS_08_zs_kappa_19,rw,3,32,63,7,63,
ZS,08,zs_c_i,19,0x0858,ZS_08_zs_c_i_19,rw,3,255,255,13,255,
ZS,08,zs_pass_i,19,0x0858,ZS_08_zs_pass_i_19,rw,3,0,1,21,1,
ZS,08,zs_mask_i,19,0x0858,ZS_08_zs_mask_i_19,rw,3,0,1,22,1,
ZS,08,zs_lambda,20,0x085b,ZS_08_zs_lambda_20,rw,3,32,127,0,127,
ZS,08,zs_kappa,20,0x085b,ZS_08_zs_kappa_20,rw,3,32,63,7,63,
ZS,08,zs_c_i,20,0x085b,ZS_08_zs_c_i_20,rw,3,255,255,13,255,
ZS,08,zs_pass_i,20,0x085b,ZS_08_zs_pass_i_20,rw,3,0,1,21,1,
ZS,08,zs_mask_i,20,0x085b,ZS_08_zs_mask_i_20,rw,3,0,1,22,1,
ZS,08,zs_lambda,21,0x085e,ZS_08_zs_lambda_21,rw,3,32,127,0,127,
ZS,08,zs_kappa,21,0x085e,ZS_08_zs_kappa_21,rw,3,32,63,7,63,
ZS,08,zs_c_i,21,0x085e,ZS_08_zs_c_i_21,rw,3,255,255,13,255,
ZS,08,zs_pass_i,21,0x085e,ZS_08_zs_pass_i_21,rw,3,0,1,21,1,
ZS,08,zs_mask_i,21,0x085e,ZS_08_zs_mask_i_21,rw,3,0,1,22,1,
ZS,08,zs_lambda,22,0x0861,ZS_08_zs_lambda_22,rw,3,32,127,0,127,
ZS,08,zs_kappa,22,0x0861,ZS_08_zs_kappa_22,rw,3,32,63,7,63,
ZS,08,zs_c_i,22,0x0861,ZS_08_zs_c_i_22,rw,3,255,255,13,255,
ZS,08,zs_pass_i,22,0x0861,ZS_08_zs_pass_i_22,rw,3,0,1,21,1,
ZS,08,zs_mask_i,22,0x0861,ZS_08_zs_mask_i_22,rw,3,0,1,22,1,
ZS,08,zs_lambda,23,0x0864,ZS_08_zs_lambda_23,rw,3,32,127,0,127,
ZS,08,zs_kappa,23,0x0864,ZS_08_zs_kappa_23,rw,3,32,63,7,63,
ZS,08,zs_c_i,23,0x0864,ZS_08_zs_c_i_23,rw,3,255,255,13,255,
ZS,08,zs_pass_i,23,0x0864,ZS_08_zs_pass_i_23,rw,3,0,1,21,1,
ZS,08,zs_mask_i,23,0x0864,ZS_08_zs_mask_i_23,rw,3,0,1,22,1,
ZS,08,zs_lambda,24,0x0867,ZS_08_zs_lambda_24,rw,3,32,127,0,127,
ZS,08,zs_kappa,24,0x0867,ZS_08_zs_kappa_24,rw,3,32,63,7,63,
ZS,08,zs_c_i,24,0x0867,ZS_08_zs_c_i_24,rw,3,255,255,13,255,
ZS,08,zs_pass_i,24,0x0867,ZS_08_zs_pass_i_24,rw,3,0,1,21,1,
ZS,08,zs_mask_i,24,0x0867,ZS_08_zs_mask_i_24,rw,3,0,1,22,1,
ZS,08,zs_lambda,25,0x086a,ZS_08_zs_lambda_25,rw,3,32,127,0,127,
ZS,08,zs_kappa,25,0x086a,ZS_08_zs_kappa_25,rw,3,32,63,7,63,
ZS,08,zs_c_i,25,0x086a,ZS_08_zs_c_i_25,rw,3,255,255,13,255,
ZS,08,zs_pass_i,25,0x086a,ZS_08_zs_pass_i_25,rw,3,0,1,21,1,
ZS,08,zs_mask_i,25,0x086a,ZS_08_zs_mask_i_25,rw,3,0,1,22,1,
ZS,08,zs_lambda,26,0x086d,ZS_08_zs_lambda_26,rw,3,32,127,0,127,
ZS,08,zs_kappa,26,0x086d,ZS_08_zs_kappa_26,rw,3,32,63,7,63,
ZS,08,zs_c_i,26,0x086d,ZS_08_zs_c_i_26,rw,3,255,255,13,255,
ZS,08,zs_pass_i,26,0x086d,ZS_08_zs_pass_i_26,rw,3,0,1,21,1,
ZS,08,zs_mask_i,26,0x086d,ZS_08_zs_mask_i_26,rw,3,0,1,22,1,
ZS,08,zs_lambda,27,0x0870,ZS_08_zs_lambda_27,rw,3,32,127,0,127,
ZS,08,zs_kappa,27,0x0870,ZS_08_zs_kappa_27,rw,3,32,63,7,63,
ZS,08,zs_c_i,27,0x0870,ZS_08_zs_c_i_27,rw,3,255,255,13,255,
ZS,08,zs_pass_i,27,0x0870,ZS_08_zs_pass_i_27,rw,3,0,1,21,1,
ZS,08,zs_mask_i,27,0x0870,ZS_08_zs_mask_i_27,rw,3,0,1,22,1,
ZS,08,zs_lambda,28,0x0873,ZS_08_zs_lambda_28,rw,3,32,127,0,127,
ZS,08,zs_kappa,28,0x0873,ZS_08_zs_kappa_28,rw,3,32,63,7,63,
ZS,08,zs_c_i,28,0x0873,ZS_08_zs_c_i_28,rw,3,255,255,13,255,
ZS,08,zs_pass_i,28,0x0873,ZS_08_zs_pass_i_28,rw,3,0,1,21,1,
ZS,08,zs_mask_i,28,0x0873,ZS_08_zs_mask_i_28,rw,3,0,1,22,1,
ZS,08,zs_lambda,29,0x0876,ZS_08_zs_lambda_29,rw,3,32,127,0,127,
ZS,08,zs_kappa,29,0x0876,ZS_08_zs_kappa_29,rw,3,32,63,7,63,
ZS,08,zs_c_i,29,0x0876,ZS_08_zs_c_i_29,rw,3,255,255,13,255,
ZS,08,zs_pass_i,29,0x0876,ZS_08_zs_pass_i_29,rw,3,0,1,21,1,
ZS,08,zs_mask_i,29,0x0876,ZS_08_zs_mask_i_29,rw,3,0,1,22,1,
ZS,08,zs_lambda,30,0x0879,ZS_08_zs_lambda_30,rw,3,32,127,0,127,
ZS,08,zs_kappa,30,0x0879,ZS_08_zs_kappa_30,rw,3,32,63,7,63,
ZS,08,zs_c_i,30,0x0879,ZS_08_zs_c_i_30,rw,3,255,255,13,255,
ZS,08,zs_pass_i,30,0x0879,ZS_08_zs_pass_i_30,rw,3,0,1,21,1,
ZS,08,zs_mask_i,30,0x0879,ZS_08_zs_mask_i_30,rw,3,0,1,22,1,
ZS,08,zs_lambda,31,0x087c,ZS_08_zs_lambda_31,rw,3,32,127,0,127,
ZS,08,zs_kappa,31,0x087c,ZS_08_zs_kappa_31,rw,3,32,63,7,63,
ZS,08,zs_c_i,31,0x087c,ZS_08_zs_c_i_31,rw,3,255,255,13,255,
ZS,08,zs_pass_i,31,0x087c,ZS_08_zs_pass_i_31,rw,3,0,1,21,1,
ZS,08,zs_mask_i,31,0x087c,ZS_08_zs_mask_i_31,rw,3,0,1,22,1,
ZS,08,zs_lambda,32,0x087f,ZS_08_zs_lambda_32,rw,3,32,127,0,127,
ZS,08,zs_kappa,32,0x087f,ZS_08_zs_kappa_32,rw,3,32,63,7,63,
ZS,08,zs_c_i,32,0x087f,ZS_08_zs_c_i_32,rw,3,255,255,13,255,
ZS,08,zs_pass_i,32,0x087f,ZS_08_zs_pass_i_32,rw,3,0,1,21,1,
ZS,08,zs_mask_i,32,0x087f,ZS_08_zs_mask_i_32,rw,3,0,1,22,1,
ZS,08,zs_lambda,33,0x0882,ZS_08_zs_lambda_33,rw,3,32,127,0,127,
ZS,08,zs_kappa,33,0x0882,ZS_08_zs_kappa_33,rw,3,32,63,7,63,
ZS,08,zs_c_i,33,0x0882,ZS_08_zs_c_i_33,rw,3,255,255,13,255,
ZS,08,zs_pass_i,33,0x0882,ZS_08_zs_pass_i_33,rw,3,0,1,21,1,
ZS,08,zs_mask_i,33,0x0882,ZS_08_zs_mask_i_33,rw,3,0,1,22,1,
ZS,08,zs_lambda,34,0x0885,ZS_08_zs_lambda_34,rw,3,32,127,0,127,
ZS,08,zs_kappa,34,0x0885,ZS_08_zs_kappa_34,rw,3,32,63,7,63,
ZS,08,zs_c_i,34,0x0885,ZS_08_zs_c_i_34,rw,3,255,255,13,255,
ZS,08,zs_pass_i,34,0x0885,ZS_08_zs_pass_i_34,rw,3,0,1,21,1,
ZS,08,zs_mask_i,34,0x0885,ZS_08_zs_mask_i_34,rw,3,0,1,22,1,
ZS,08,zs_lambda,35,0x0888,ZS_08_zs_lambda_35,rw,3,32,127,0,127,
ZS,08,zs_kappa,35,0x0888,ZS_08_zs_kappa_35,rw,3,32,63,7,63,
ZS,08,zs_c_i,35,0x0888,ZS_08_zs_c_i_35,rw,3,255,255,13,255,
ZS,08,zs_pass_i,35,0x0888,ZS_08_zs_pass_i_35,rw,3,0,1,21,1,
ZS,08,zs_mask_i,35,0x0888,ZS_08_zs_mask_i_35,rw,3,0,1,22,1,
ZS,08,zs_lambda,36,0x088b,ZS_08_zs_lambda_36,rw,3,32,127,0,127,
ZS,08,zs_kappa,36,0x088b,ZS_08_zs_kappa_36,rw,3,32,63,7,63,
ZS,08,zs_c_i,36,0x088b,ZS_08_zs_c_i_36,rw,3,255,255,13,255,
ZS,08,zs_pass_i,36,0x088b,ZS_08_zs_pass_i_36,rw,3,0,1,21,1,
ZS,08,zs_mask_i,36,0x088b,ZS_08_zs_mask_i_36,rw,3,0,1,22,1,
ZS,09,zs_lambda,00,0x088e,ZS_09_zs_lambda_00,rw,3,32,127,0,127,
ZS,09,zs_kappa,00,0x088e,ZS_09_zs_kappa_00,rw,3,32,63,7,63,
ZS,09,zs_c_i,00,0x088e,ZS_09_zs_c_i_00,rw,3,255,255,13,255,
ZS,09,zs_pass_i,00,0x088e,ZS_09_zs_pass_i_00,rw,3,0,1,21,1,
ZS,09,zs_mask_i,00,0x088e,ZS_09_zs_mask_i_00,rw,3,0,1,22,1,
ZS,09,zs_lambda,01,0x0891,ZS_09_zs_lambda_01,rw,3,32,127,0,127,
ZS,09,zs_kappa,01,0x0891,ZS_09_zs_kappa_01,rw,3,32,63,7,63,
ZS,09,zs_c_i,01,0x0891,ZS_09_zs_c_i_01,rw,3,255,255,13,255,
ZS,09,zs_pass_i,01,0x0891,ZS_09_zs_pass_i_01,rw,3,0,1,21,1,
ZS,09,zs_mask_i,01,0x0891,ZS_09_zs_mask_i_01,rw,3,0,1,22,1,
ZS,09,zs_lambda,02,0x0894,ZS_09_zs_lambda_02,rw,3,32,127,0,127,
ZS,09,zs_kappa,02,0x0894,ZS_09_zs_kappa_02,rw,3,32,63,7,63,
ZS,09,zs_c_i,02,0x0894,ZS_09_zs_c_i_02,rw,3,255,255,13,255,
ZS,09,zs_pass_i,02,0x0894,ZS_09_zs_pass_i_02,rw,3,0,1,21,1,
ZS,09,zs_mask_i,02,0x0894,ZS_09_zs_mask_i_02,rw,3,0,1,22,1,
ZS,09,zs_lambda,03,0x0897,ZS_09_zs_lambda_03,rw,3,32,127,0,127,
ZS,09,zs_kappa,03,0x0897,ZS_09_zs_kappa_03,rw,3,32,63,7,63,
ZS,09,zs_c_i,03,0x0897,ZS_09_zs_c_i_03,rw,3,255,255,13,255,
ZS,09,zs_pass_i,03,0x0897,ZS_09_zs_pass_i_03,rw,3,0,1,21,1,
ZS,09,zs_mask_i,03,0x0897,ZS_09_zs_mask_i_03,rw,3,0,1,22,1,
ZS,09,zs_lambda,04,0x089a,ZS_09_zs_lambda_04,rw,3,32,127,0,127,
ZS,09,zs_kappa,04,0x089a,ZS_09_zs_kappa_04,rw,3,32,63,7,63,
ZS,09,zs_c_i,04,0x089a,ZS_09_zs_c_i_04,rw,3,255,255,13,255,
ZS,09,zs_pass_i,04,0x089a,ZS_09_zs_pass_i_04,rw,3,0,1,21,1,
ZS,09,zs_mask_i,04,0x089a,ZS_09_zs_mask_i_04,rw,3,0,1,22,1,
ZS,09,zs_lambda,05,0x089d,ZS_09_zs_lambda_05,rw,3,32,127,0,127,
ZS,09,zs_kappa,05,0x089d,ZS_09_zs_kappa_05,rw,3,32,63,7,63,
ZS,09,zs_c_i,05,0x089d,ZS_09_zs_c_i_05,rw,3,255,255,13,255,
ZS,09,zs_pass_i,05,0x089d,ZS_09_zs_pass_i_05,rw,3,0,1,21,1,
ZS,09,zs_mask_i,05,0x089d,ZS_09_zs_mask_i_05,rw,3,0,1,22,1,
ZS,09,zs_lambda,06,0x08a0,ZS_09_zs_lambda_06,rw,3,32,127,0,127,
ZS,09,zs_kappa,06,0x08a0,ZS_09_zs_kappa_06,rw,3,32,63,7,63,
ZS,09,zs_c_i,06,0x08a0,ZS_09_zs_c_i_06,rw,3,255,255,13,255,
ZS,09,zs_pass_i,06,0x08a0,ZS_09_zs_pass_i_06,rw,3,0,1,21,1,
ZS,09,zs_mask_i,06,0x08a0,ZS_09_zs_mask_i_06,rw,3,0,1,22,1,
ZS,09,zs_lambda,07,0x08a3,ZS_09_zs_lambda_07,rw,3,32,127,0,127,
ZS,09,zs_kappa,07,0x08a3,ZS_09_zs_kappa_07,rw,3,32,63,7,63,
ZS,09,zs_c_i,07,0x08a3,ZS_09_zs_c_i_07,rw,3,255,255,13,255,
ZS,09,zs_pass_i,07,0x08a3,ZS_09_zs_pass_i_07,rw,3,0,1,21,1,
ZS,09,zs_mask_i,07,0x08a3,ZS_09_zs_mask_i_07,rw,3,0,1,22,1,
ZS,09,zs_lambda,08,0x08a6,ZS_09_zs_lambda_08,rw,3,32,127,0,127,
ZS,09,zs_kappa,08,0x08a6,ZS_09_zs_kappa_08,rw,3,32,63,7,63,
ZS,09,zs_c_i,08,0x08a6,ZS_09_zs_c_i_08,rw,3,255,255,13,255,
ZS,09,zs_pass_i,08,0x08a6,ZS_09_zs_pass_i_08,rw,3,0,1,21,1,
ZS,09,zs_mask_i,08,0x08a6,ZS_09_zs_mask_i_08,rw,3,0,1,22,1,
ZS,09,zs_lambda,09,0x08a9,ZS_09_zs_lambda_09,rw,3,32,127,0,127,
ZS,09,zs_kappa,09,0x08a9,ZS_09_zs_kappa_09,rw,3,32,63,7,63,
ZS,09,zs_c_i,09,0x08a9,ZS_09_zs_c_i_09,rw,3,255,255,13,255,
ZS,09,zs_pass_i,09,0x08a9,ZS_09_zs_pass_i_09,rw,3,0,1,21,1,
ZS,09,zs_mask_i,09,0x08a9,ZS_09_zs_mask_i_09,rw,3,0,1,22,1,
ZS,09,zs_lambda,10,0x08ac,ZS_09_zs_lambda_10,rw,3,32,127,0,127,
ZS,09,zs_kappa,10,0x08ac,ZS_09_zs_kappa_10,rw,3,32,63,7,63,
ZS,09,zs_c_i,10,0x08ac,ZS_09_zs_c_i_10,rw,3,255,255,13,255,
ZS,09,zs_pass_i,10,0x08ac,ZS_09_zs_pass_i_10,rw,3,0,1,21,1,
ZS,09,zs_mask_i,10,0x08ac,ZS_09_zs_mask_i_10,rw,3,0,1,22,1,
ZS,09,zs_lambda,11,0x08af,ZS_09_zs_lambda_11,rw,3,32,127,0,127,
ZS,09,zs_kappa,11,0x08af,ZS_09_zs_kappa_11,rw,3,32,63,7,63,
ZS,09,zs_c_i,11,0x08af,ZS_09_zs_c_i_11,rw,3,255,255,13,255,
ZS,09,zs_pass_i,11,0x08af,ZS_09_zs_pass_i_11,rw,3,0,1,21,1,
ZS,09,zs_mask_i,11,0x08af,ZS_09_zs_mask_i_11,rw,3,0,1,22,1,
ZS,09,zs_lambda,12,0x08b2,ZS_09_zs_lambda_12,rw,3,32,127,0,127,
ZS,09,zs_kappa,12,0x08b2,ZS_09_zs_kappa_12,rw,3,32,63,7,63,
ZS,09,zs_c_i,12,0x08b2,ZS_09_zs_c_i_12,rw,3,255,255,13,255,
ZS,09,zs_pass_i,12,0x08b2,ZS_09_zs_pass_i_12,rw,3,0,1,21,1,
ZS,09,zs_mask_i,12,0x08b2,ZS_09_zs_mask_i_12,rw,3,0,1,22,1,
ZS,09,zs_lambda,13,0x08b5,ZS_09_zs_lambda_13,rw,3,32,127,0,127,
ZS,09,zs_kappa,13,0x08b5,ZS_09_zs_kappa_13,rw,3,32,63,7,63,
ZS,09,zs_c_i,13,0x08b5,ZS_09_zs_c_i_13,rw,3,255,255,13,255,
ZS,09,zs_pass_i,13,0x08b5,ZS_09_zs_pass_i_13,rw,3,0,1,21,1,
ZS,09,zs_mask_i,13,0x08b5,ZS_09_zs_mask_i_13,rw,3,0,1,22,1,
ZS,09,zs_lambda,14,0x08b8,ZS_09_zs_lambda_14,rw,3,32,127,0,127,
ZS,09,zs_kappa,14,0x08b8,ZS_09_zs_kappa_14,rw,3,32,63,7,63,
ZS,09,zs_c_i,14,0x08b8,ZS_09_zs_c_i_14,rw,3,255,255,13,255,
ZS,09,zs_pass_i,14,0x08b8,ZS_09_zs_pass_i_14,rw,3,0,1,21,1,
ZS,09,zs_mask_i,14,0x08b8,ZS_09_zs_mask_i_14,rw,3,0,1,22,1,
ZS,09,zs_lambda,15,0x08bb,ZS_09_zs_lambda_15,rw,3,32,127,0,127,
ZS,09,zs_kappa,15,0x08bb,ZS_09_zs_kappa_15,rw,3,32,63,7,63,
ZS,09,zs_c_i,15,0x08bb,ZS_09_zs_c_i_15,rw,3,255,255,13,255,
ZS,09,zs_pass_i,15,0x08bb,ZS_09_zs_pass_i_15,rw,3,0,1,21,1,
ZS,09,zs_mask_i,15,0x08bb,ZS_09_zs_mask_i_15,rw,3,0,1,22,1,
ZS,09,zs_lambda,16,0x08be,ZS_09_zs_lambda_16,rw,3,32,127,0,127,
ZS,09,zs_kappa,16,0x08be,ZS_09_zs_kappa_16,rw,3,32,63,7,63,
ZS,09,zs_c_i,16,0x08be,ZS_09_zs_c_i_16,rw,3,255,255,13,255,
ZS,09,zs_pass_i,16,0x08be,ZS_09_zs_pass_i_16,rw,3,0,1,21,1,
ZS,09,zs_mask_i,16,0x08be,ZS_09_zs_mask_i_16,rw,3,0,1,22,1,
ZS,09,zs_lambda,17,0x08c1,ZS_09_zs_lambda_17,rw,3,32,127,0,127,
ZS,09,zs_kappa,17,0x08c1,ZS_09_zs_kappa_17,rw,3,32,63,7,63,
ZS,09,zs_c_i,17,0x08c1,ZS_09_zs_c_i_17,rw,3,255,255,13,255,
ZS,09,zs_pass_i,17,0x08c1,ZS_09_zs_pass_i_17,rw,3,0,1,21,1,
ZS,09,zs_mask_i,17,0x08c1,ZS_09_zs_mask_i_17,rw,3,0,1,22,1,
ZS,09,zs_lambda,18,0x08c4,ZS_09_zs_lambda_18,rw,3,32,127,0,127,
ZS,09,zs_kappa,18,0x08c4,ZS_09_zs_kappa_18,rw,3,32,63,7,63,
ZS,09,zs_c_i,18,0x08c4,ZS_09_zs_c_i_18,rw,3,255,255,13,255,
ZS,09,zs_pass_i,18,0x08c4,ZS_09_zs_pass_i_18,rw,3,0,1,21,1,
ZS,09,zs_mask_i,18,0x08c4,ZS_09_zs_mask_i_18,rw,3,0,1,22,1,
ZS,09,zs_lambda,19,0x08c7,ZS_09_zs_lambda_19,rw,3,32,127,0,127,
ZS,09,zs_kappa,19,0x08c7,ZS_09_zs_kappa_19,rw,3,32,63,7,63,
ZS,09,zs_c_i,19,0x08c7,ZS_09_zs_c_i_19,rw,3,255,255,13,255,
ZS,09,zs_pass_i,19,0x08c7,ZS_09_zs_pass_i_19,rw,3,0,1,21,1,
ZS,09,zs_mask_i,19,0x08c7,ZS_09_zs_mask_i_19,rw,3,0,1,22,1,
ZS,09,zs_lambda,20,0x08ca,ZS_09_zs_lambda_20,rw,3,32,127,0,127,
ZS,09,zs_kappa,20,0x08ca,ZS_09_zs_kappa_20,rw,3,32,63,7,63,
ZS,09,zs_c_i,20,0x08ca,ZS_09_zs_c_i_20,rw,3,255,255,13,255,
ZS,09,zs_pass_i,20,0x08ca,ZS_09_zs_pass_i_20,rw,3,0,1,21,1,
ZS,09,zs_mask_i,20,0x08ca,ZS_09_zs_mask_i_20,rw,3,0,1,22,1,
ZS,09,zs_lambda,21,0x08cd,ZS_09_zs_lambda_21,rw,3,32,127,0,127,
ZS,09,zs_kappa,21,0x08cd,ZS_09_zs_kappa_21,rw,3,32,63,7,63,
ZS,09,zs_c_i,21,0x08cd,ZS_09_zs_c_i_21,rw,3,255,255,13,255,
ZS,09,zs_pass_i,21,0x08cd,ZS_09_zs_pass_i_21,rw,3,0,1,21,1,
ZS,09,zs_mask_i,21,0x08cd,ZS_09_zs_mask_i_21,rw,3,0,1,22,1,
ZS,09,zs_lambda,22,0x08d0,ZS_09_zs_lambda_22,rw,3,32,127,0,127,
ZS,09,zs_kappa,22,0x08d0,ZS_09_zs_kappa_22,rw,3,32,63,7,63,
ZS,09,zs_c_i,22,0x08d0,ZS_09_zs_c_i_22,rw,3,255,255,13,255,
ZS,09,zs_pass_i,22,0x08d0,ZS_09_zs_pass_i_22,rw,3,0,1,21,1,
ZS,09,zs_mask_i,22,0x08d0,ZS_09_zs_mask_i_22,rw,3,0,1,22,1,
ZS,09,zs_lambda,23,0x08d3,ZS_09_zs_lambda_23,rw,3,32,127,0,127,
ZS,09,zs_kappa,23,0x08d3,ZS_09_zs_kappa_23,rw,3,32,63,7,63,
ZS,09,zs_c_i,23,0x08d3,ZS_09_zs_c_i_23,rw,3,255,255,13,255,
ZS,09,zs_pass_i,23,0x08d3,ZS_09_zs_pass_i_23,rw,3,0,1,21,1,
ZS,09,zs_mask_i,23,0x08d3,ZS_09_zs_mask_i_23,rw,3,0,1,22,1,
ZS,09,zs_lambda,24,0x08d6,ZS_09_zs_lambda_24,rw,3,32,127,0,127,
ZS,09,zs_kappa,24,0x08d6,ZS_09_zs_kappa_24,rw,3,32,63,7,63,
ZS,09,zs_c_i,24,0x08d6,ZS_09_zs_c_i_24,rw,3,255,255,13,255,
ZS,09,zs_pass_i,24,0x08d6,ZS_09_zs_pass_i_24,rw,3,0,1,21,1,
ZS,09,zs_mask_i,24,0x08d6,ZS_09_zs_mask_i_24,rw,3,0,1,22,1,
ZS,09,zs_lambda,25,0x08d9,ZS_09_zs_lambda_25,rw,3,32,127,0,127,
ZS,09,zs_kappa,25,0x08d9,ZS_09_zs_kappa_25,rw,3,32,63,7,63,
ZS,09,zs_c_i,25,0x08d9,ZS_09_zs_c_i_25,rw,3,255,255,13,255,
ZS,09,zs_pass_i,25,0x08d9,ZS_09_zs_pass_i_25,rw,3,0,1,21,1,
ZS,09,zs_mask_i,25,0x08d9,ZS_09_zs_mask_i_25,rw,3,0,1,22,1,
ZS,09,zs_lambda,26,0x08dc,ZS_09_zs_lambda_26,rw,3,32,127,0,127,
ZS,09,zs_kappa,26,0x08dc,ZS_09_zs_kappa_26,rw,3,32,63,7,63,
ZS,09,zs_c_i,26,0x08dc,ZS_09_zs_c_i_26,rw,3,255,255,13,255,
ZS,09,zs_pass_i,26,0x08dc,ZS_09_zs_pass_i_26,rw,3,0,1,21,1,
ZS,09,zs_mask_i,26,0x08dc,ZS_09_zs_mask_i_26,rw,3,0,1,22,1,
ZS,09,zs_lambda,27,0x08df,ZS_09_zs_lambda_27,rw,3,32,127,0,127,
ZS,09,zs_kappa,27,0x08df,ZS_09_zs_kappa_27,rw,3,32,63,7,63,
ZS,09,zs_c_i,27,0x08df,ZS_09_zs_c_i_27,rw,3,255,255,13,255,
ZS,09,zs_pass_i,27,0x08df,ZS_09_zs_pass_i_27,rw,3,0,1,21,1,
ZS,09,zs_mask_i,27,0x08df,ZS_09_zs_mask_i_27,rw,3,0,1,22,1,
ZS,09,zs_lambda,28,0x08e2,ZS_09_zs_lambda_28,rw,3,32,127,0,127,
ZS,09,zs_kappa,28,0x08e2,ZS_09_zs_kappa_28,rw,3,32,63,7,63,
ZS,09,zs_c_i,28,0x08e2,ZS_09_zs_c_i_28,rw,3,255,255,13,255,
ZS,09,zs_pass_i,28,0x08e2,ZS_09_zs_pass_i_28,rw,3,0,1,21,1,
ZS,09,zs_mask_i,28,0x08e2,ZS_09_zs_mask_i_28,rw,3,0,1,22,1,
ZS,09,zs_lambda,29,0x08e5,ZS_09_zs_lambda_29,rw,3,32,127,0,127,
ZS,09,zs_kappa,29,0x08e5,ZS_09_zs_kappa_29,rw,3,32,63,7,63,
ZS,09,zs_c_i,29,0x08e5,ZS_09_zs_c_i_29,rw,3,255,255,13,255,
ZS,09,zs_pass_i,29,0x08e5,ZS_09_zs_pass_i_29,rw,3,0,1,21,1,
ZS,09,zs_mask_i,29,0x08e5,ZS_09_zs_mask_i_29,rw,3,0,1,22,1,
ZS,09,zs_lambda,30,0x08e8,ZS_09_zs_lambda_30,rw,3,32,127,0,127,
ZS,09,zs_kappa,30,0x08e8,ZS_09_zs_kappa_30,rw,3,32,63,7,63,
ZS,09,zs_c_i,30,0x08e8,ZS_09_zs_c_i_30,rw,3,255,255,13,255,
ZS,09,zs_pass_i,30,0x08e8,ZS_09_zs_pass_i_30,rw,3,0,1,21,1,
ZS,09,zs_mask_i,30,0x08e8,ZS_09_zs_mask_i_30,rw,3,0,1,22,1,
ZS,09,zs_lambda,31,0x08eb,ZS_09_zs_lambda_31,rw,3,32,127,0,127,
ZS,09,zs_kappa,31,0x08eb,ZS_09_zs_kappa_31,rw,3,32,63,7,63,
ZS,09,zs_c_i,31,0x08eb,ZS_09_zs_c_i_31,rw,3,255,255,13,255,
ZS,09,zs_pass_i,31,0x08eb,ZS_09_zs_pass_i_31,rw,3,0,1,21,1,
ZS,09,zs_mask_i,31,0x08eb,ZS_09_zs_mask_i_31,rw,3,0,1,22,1,
ZS,09,zs_lambda,32,0x08ee,ZS_09_zs_lambda_32,rw,3,32,127,0,127,
ZS,09,zs_kappa,32,0x08ee,ZS_09_zs_kappa_32,rw,3,32,63,7,63,
ZS,09,zs_c_i,32,0x08ee,ZS_09_zs_c_i_32,rw,3,255,255,13,255,
ZS,09,zs_pass_i,32,0x08ee,ZS_09_zs_pass_i_32,rw,3,0,1,21,1,
ZS,09,zs_mask_i,32,0x08ee,ZS_09_zs_mask_i_32,rw,3,0,1,22,1,
ZS,09,zs_lambda,33,0x08f1,ZS_09_zs_lambda_33,rw,3,32,127,0,127,
ZS,09,zs_kappa,33,0x08f1,ZS_09_zs_kappa_33,rw,3,32,63,7,63,
ZS,09,zs_c_i,33,0x08f1,ZS_09_zs_c_i_33,rw,3,255,255,13,255,
ZS,09,zs_pass_i,33,0x08f1,ZS_09_zs_pass_i_33,rw,3,0,1,21,1,
ZS,09,zs_mask_i,33,0x08f1,ZS_09_zs_mask_i_33,rw,3,0,1,22,1,
ZS,09,zs_lambda,34,0x08f4,ZS_09_zs_lambda_34,rw,3,32,127,0,127,
ZS,09,zs_kappa,34,0x08f4,ZS_09_zs_kappa_34,rw,3,32,63,7,63,
ZS,09,zs_c_i,34,0x08f4,ZS_09_zs_c_i_34,rw,3,255,255,13,255,
ZS,09,zs_pass_i,34,0x08f4,ZS_09_zs_pass_i_34,rw,3,0,1,21,1,
ZS,09,zs_mask_i,34,0x08f4,ZS_09_zs_mask_i_34,rw,3,0,1,22,1,
ZS,09,zs_lambda,35,0x08f7,ZS_09_zs_lambda_35,rw,3,32,127,0,127,
ZS,09,zs_kappa,35,0x08f7,ZS_09_zs_kappa_35,rw,3,32,63,7,63,
ZS,09,zs_c_i,35,0x08f7,ZS_09_zs_c_i_35,rw,3,255,255,13,255,
ZS,09,zs_pass_i,35,0x08f7,ZS_09_zs_pass_i_35,rw,3,0,1,21,1,
ZS,09,zs_mask_i,35,0x08f7,ZS_09_zs_mask_i_35,rw,3,0,1,22,1,
ZS,09,zs_lambda,36,0x08fa,ZS_09_zs_lambda_36,rw,3,32,127,0,127,
ZS,09,zs_kappa,36,0x08fa,ZS_09_zs_kappa_36,rw,3,32,63,7,63,
ZS,09,zs_c_i,36,0x08fa,ZS_09_zs_c_i_36,rw,3,255,255,13,255,
ZS,09,zs_pass_i,36,0x08fa,ZS_09_zs_pass_i_36,rw,3,0,1,21,1,
ZS,09,zs_mask_i,36,0x08fa,ZS_09_zs_mask_i_36,rw,3,0,1,22,1,
ZS,10,zs_lambda,00,0x08fd,ZS_10_zs_lambda_00,rw,3,32,127,0,127,
ZS,10,zs_kappa,00,0x08fd,ZS_10_zs_kappa_00,rw,3,32,63,7,63,
ZS,10,zs_c_i,00,0x08fd,ZS_10_zs_c_i_00,rw,3,255,255,13,255,
ZS,10,zs_pass_i,00,0x08fd,ZS_10_zs_pass_i_00,rw,3,0,1,21,1,
ZS,10,zs_mask_i,00,0x08fd,ZS_10_zs_mask_i_00,rw,3,0,1,22,1,
ZS,10,zs_lambda,01,0x0900,ZS_10_zs_lambda_01,rw,3,32,127,0,127,
ZS,10,zs_kappa,01,0x0900,ZS_10_zs_kappa_01,rw,3,32,63,7,63,
ZS,10,zs_c_i,01,0x0900,ZS_10_zs_c_i_01,rw,3,255,255,13,255,
ZS,10,zs_pass_i,01,0x0900,ZS_10_zs_pass_i_01,rw,3,0,1,21,1,
ZS,10,zs_mask_i,01,0x0900,ZS_10_zs_mask_i_01,rw,3,0,1,22,1,
ZS,10,zs_lambda,02,0x0903,ZS_10_zs_lambda_02,rw,3,32,127,0,127,
ZS,10,zs_kappa,02,0x0903,ZS_10_zs_kappa_02,rw,3,32,63,7,63,
ZS,10,zs_c_i,02,0x0903,ZS_10_zs_c_i_02,rw,3,255,255,13,255,
ZS,10,zs_pass_i,02,0x0903,ZS_10_zs_pass_i_02,rw,3,0,1,21,1,
ZS,10,zs_mask_i,02,0x0903,ZS_10_zs_mask_i_02,rw,3,0,1,22,1,
ZS,10,zs_lambda,03,0x0906,ZS_10_zs_lambda_03,rw,3,32,127,0,127,
ZS,10,zs_kappa,03,0x0906,ZS_10_zs_kappa_03,rw,3,32,63,7,63,
ZS,10,zs_c_i,03,0x0906,ZS_10_zs_c_i_03,rw,3,255,255,13,255,
ZS,10,zs_pass_i,03,0x0906,ZS_10_zs_pass_i_03,rw,3,0,1,21,1,
ZS,10,zs_mask_i,03,0x0906,ZS_10_zs_mask_i_03,rw,3,0,1,22,1,
ZS,10,zs_lambda,04,0x0909,ZS_10_zs_lambda_04,rw,3,32,127,0,127,
ZS,10,zs_kappa,04,0x0909,ZS_10_zs_kappa_04,rw,3,32,63,7,63,
ZS,10,zs_c_i,04,0x0909,ZS_10_zs_c_i_04,rw,3,255,255,13,255,
ZS,10,zs_pass_i,04,0x0909,ZS_10_zs_pass_i_04,rw,3,0,1,21,1,
ZS,10,zs_mask_i,04,0x0909,ZS_10_zs_mask_i_04,rw,3,0,1,22,1,
ZS,10,zs_lambda,05,0x090c,ZS_10_zs_lambda_05,rw,3,32,127,0,127,
ZS,10,zs_kappa,05,0x090c,ZS_10_zs_kappa_05,rw,3,32,63,7,63,
ZS,10,zs_c_i,05,0x090c,ZS_10_zs_c_i_05,rw,3,255,255,13,255,
ZS,10,zs_pass_i,05,0x090c,ZS_10_zs_pass_i_05,rw,3,0,1,21,1,
ZS,10,zs_mask_i,05,0x090c,ZS_10_zs_mask_i_05,rw,3,0,1,22,1,
ZS,10,zs_lambda,06,0x090f,ZS_10_zs_lambda_06,rw,3,32,127,0,127,
ZS,10,zs_kappa,06,0x090f,ZS_10_zs_kappa_06,rw,3,32,63,7,63,
ZS,10,zs_c_i,06,0x090f,ZS_10_zs_c_i_06,rw,3,255,255,13,255,
ZS,10,zs_pass_i,06,0x090f,ZS_10_zs_pass_i_06,rw,3,0,1,21,1,
ZS,10,zs_mask_i,06,0x090f,ZS_10_zs_mask_i_06,rw,3,0,1,22,1,
ZS,10,zs_lambda,07,0x0912,ZS_10_zs_lambda_07,rw,3,32,127,0,127,
ZS,10,zs_kappa,07,0x0912,ZS_10_zs_kappa_07,rw,3,32,63,7,63,
ZS,10,zs_c_i,07,0x0912,ZS_10_zs_c_i_07,rw,3,255,255,13,255,
ZS,10,zs_pass_i,07,0x0912,ZS_10_zs_pass_i_07,rw,3,0,1,21,1,
ZS,10,zs_mask_i,07,0x0912,ZS_10_zs_mask_i_07,rw,3,0,1,22,1,
ZS,10,zs_lambda,08,0x0915,ZS_10_zs_lambda_08,rw,3,32,127,0,127,
ZS,10,zs_kappa,08,0x0915,ZS_10_zs_kappa_08,rw,3,32,63,7,63,
ZS,10,zs_c_i,08,0x0915,ZS_10_zs_c_i_08,rw,3,255,255,13,255,
ZS,10,zs_pass_i,08,0x0915,ZS_10_zs_pass_i_08,rw,3,0,1,21,1,
ZS,10,zs_mask_i,08,0x0915,ZS_10_zs_mask_i_08,rw,3,0,1,22,1,
ZS,10,zs_lambda,09,0x0918,ZS_10_zs_lambda_09,rw,3,32,127,0,127,
ZS,10,zs_kappa,09,0x0918,ZS_10_zs_kappa_09,rw,3,32,63,7,63,
ZS,10,zs_c_i,09,0x0918,ZS_10_zs_c_i_09,rw,3,255,255,13,255,
ZS,10,zs_pass_i,09,0x0918,ZS_10_zs_pass_i_09,rw,3,0,1,21,1,
ZS,10,zs_mask_i,09,0x0918,ZS_10_zs_mask_i_09,rw,3,0,1,22,1,
ZS,10,zs_lambda,10,0x091b,ZS_10_zs_lambda_10,rw,3,32,127,0,127,
ZS,10,zs_kappa,10,0x091b,ZS_10_zs_kappa_10,rw,3,32,63,7,63,
ZS,10,zs_c_i,10,0x091b,ZS_10_zs_c_i_10,rw,3,255,255,13,255,
ZS,10,zs_pass_i,10,0x091b,ZS_10_zs_pass_i_10,rw,3,0,1,21,1,
ZS,10,zs_mask_i,10,0x091b,ZS_10_zs_mask_i_10,rw,3,0,1,22,1,
ZS,10,zs_lambda,11,0x091e,ZS_10_zs_lambda_11,rw,3,32,127,0,127,
ZS,10,zs_kappa,11,0x091e,ZS_10_zs_kappa_11,rw,3,32,63,7,63,
ZS,10,zs_c_i,11,0x091e,ZS_10_zs_c_i_11,rw,3,255,255,13,255,
ZS,10,zs_pass_i,11,0x091e,ZS_10_zs_pass_i_11,rw,3,0,1,21,1,
ZS,10,zs_mask_i,11,0x091e,ZS_10_zs_mask_i_11,rw,3,0,1,22,1,
ZS,10,zs_lambda,12,0x0921,ZS_10_zs_lambda_12,rw,3,32,127,0,127,
ZS,10,zs_kappa,12,0x0921,ZS_10_zs_kappa_12,rw,3,32,63,7,63,
ZS,10,zs_c_i,12,0x0921,ZS_10_zs_c_i_12,rw,3,255,255,13,255,
ZS,10,zs_pass_i,12,0x0921,ZS_10_zs_pass_i_12,rw,3,0,1,21,1,
ZS,10,zs_mask_i,12,0x0921,ZS_10_zs_mask_i_12,rw,3,0,1,22,1,
ZS,10,zs_lambda,13,0x0924,ZS_10_zs_lambda_13,rw,3,32,127,0,127,
ZS,10,zs_kappa,13,0x0924,ZS_10_zs_kappa_13,rw,3,32,63,7,63,
ZS,10,zs_c_i,13,0x0924,ZS_10_zs_c_i_13,rw,3,255,255,13,255,
ZS,10,zs_pass_i,13,0x0924,ZS_10_zs_pass_i_13,rw,3,0,1,21,1,
ZS,10,zs_mask_i,13,0x0924,ZS_10_zs_mask_i_13,rw,3,0,1,22,1,
ZS,10,zs_lambda,14,0x0927,ZS_10_zs_lambda_14,rw,3,32,127,0,127,
ZS,10,zs_kappa,14,0x0927,ZS_10_zs_kappa_14,rw,3,32,63,7,63,
ZS,10,zs_c_i,14,0x0927,ZS_10_zs_c_i_14,rw,3,255,255,13,255,
ZS,10,zs_pass_i,14,0x0927,ZS_10_zs_pass_i_14,rw,3,0,1,21,1,
ZS,10,zs_mask_i,14,0x0927,ZS_10_zs_mask_i_14,rw,3,0,1,22,1,
ZS,10,zs_lambda,15,0x092a,ZS_10_zs_lambda_15,rw,3,32,127,0,127,
ZS,10,zs_kappa,15,0x092a,ZS_10_zs_kappa_15,rw,3,32,63,7,63,
ZS,10,zs_c_i,15,0x092a,ZS_10_zs_c_i_15,rw,3,255,255,13,255,
ZS,10,zs_pass_i,15,0x092a,ZS_10_zs_pass_i_15,rw,3,0,1,21,1,
ZS,10,zs_mask_i,15,0x092a,ZS_10_zs_mask_i_15,rw,3,0,1,22,1,
ZS,10,zs_lambda,16,0x092d,ZS_10_zs_lambda_16,rw,3,32,127,0,127,
ZS,10,zs_kappa,16,0x092d,ZS_10_zs_kappa_16,rw,3,32,63,7,63,
ZS,10,zs_c_i,16,0x092d,ZS_10_zs_c_i_16,rw,3,255,255,13,255,
ZS,10,zs_pass_i,16,0x092d,ZS_10_zs_pass_i_16,rw,3,0,1,21,1,
ZS,10,zs_mask_i,16,0x092d,ZS_10_zs_mask_i_16,rw,3,0,1,22,1,
ZS,10,zs_lambda,17,0x0930,ZS_10_zs_lambda_17,rw,3,32,127,0,127,
ZS,10,zs_kappa,17,0x0930,ZS_10_zs_kappa_17,rw,3,32,63,7,63,
ZS,10,zs_c_i,17,0x0930,ZS_10_zs_c_i_17,rw,3,255,255,13,255,
ZS,10,zs_pass_i,17,0x0930,ZS_10_zs_pass_i_17,rw,3,0,1,21,1,
ZS,10,zs_mask_i,17,0x0930,ZS_10_zs_mask_i_17,rw,3,0,1,22,1,
ZS,10,zs_lambda,18,0x0933,ZS_10_zs_lambda_18,rw,3,32,127,0,127,
ZS,10,zs_kappa,18,0x0933,ZS_10_zs_kappa_18,rw,3,32,63,7,63,
ZS,10,zs_c_i,18,0x0933,ZS_10_zs_c_i_18,rw,3,255,255,13,255,
ZS,10,zs_pass_i,18,0x0933,ZS_10_zs_pass_i_18,rw,3,0,1,21,1,
ZS,10,zs_mask_i,18,0x0933,ZS_10_zs_mask_i_18,rw,3,0,1,22,1,
ZS,10,zs_lambda,19,0x0936,ZS_10_zs_lambda_19,rw,3,32,127,0,127,
ZS,10,zs_kappa,19,0x0936,ZS_10_zs_kappa_19,rw,3,32,63,7,63,
ZS,10,zs_c_i,19,0x0936,ZS_10_zs_c_i_19,rw,3,255,255,13,255,
ZS,10,zs_pass_i,19,0x0936,ZS_10_zs_pass_i_19,rw,3,0,1,21,1,
ZS,10,zs_mask_i,19,0x0936,ZS_10_zs_mask_i_19,rw,3,0,1,22,1,
ZS,10,zs_lambda,20,0x0939,ZS_10_zs_lambda_20,rw,3,32,127,0,127,
ZS,10,zs_kappa,20,0x0939,ZS_10_zs_kappa_20,rw,3,32,63,7,63,
ZS,10,zs_c_i,20,0x0939,ZS_10_zs_c_i_20,rw,3,255,255,13,255,
ZS,10,zs_pass_i,20,0x0939,ZS_10_zs_pass_i_20,rw,3,0,1,21,1,
ZS,10,zs_mask_i,20,0x0939,ZS_10_zs_mask_i_20,rw,3,0,1,22,1,
ZS,10,zs_lambda,21,0x093c,ZS_10_zs_lambda_21,rw,3,32,127,0,127,
ZS,10,zs_kappa,21,0x093c,ZS_10_zs_kappa_21,rw,3,32,63,7,63,
ZS,10,zs_c_i,21,0x093c,ZS_10_zs_c_i_21,rw,3,255,255,13,255,
ZS,10,zs_pass_i,21,0x093c,ZS_10_zs_pass_i_21,rw,3,0,1,21,1,
ZS,10,zs_mask_i,21,0x093c,ZS_10_zs_mask_i_21,rw,3,0,1,22,1,
ZS,10,zs_lambda,22,0x093f,ZS_10_zs_lambda_22,rw,3,32,127,0,127,
ZS,10,zs_kappa,22,0x093f,ZS_10_zs_kappa_22,rw,3,32,63,7,63,
ZS,10,zs_c_i,22,0x093f,ZS_10_zs_c_i_22,rw,3,255,255,13,255,
ZS,10,zs_pass_i,22,0x093f,ZS_10_zs_pass_i_22,rw,3,0,1,21,1,
ZS,10,zs_mask_i,22,0x093f,ZS_10_zs_mask_i_22,rw,3,0,1,22,1,
ZS,10,zs_lambda,23,0x0942,ZS_10_zs_lambda_23,rw,3,32,127,0,127,
ZS,10,zs_kappa,23,0x0942,ZS_10_zs_kappa_23,rw,3,32,63,7,63,
ZS,10,zs_c_i,23,0x0942,ZS_10_zs_c_i_23,rw,3,255,255,13,255,
ZS,10,zs_pass_i,23,0x0942,ZS_10_zs_pass_i_23,rw,3,0,1,21,1,
ZS,10,zs_mask_i,23,0x0942,ZS_10_zs_mask_i_23,rw,3,0,1,22,1,
ZS,10,zs_lambda,24,0x0945,ZS_10_zs_lambda_24,rw,3,32,127,0,127,
ZS,10,zs_kappa,24,0x0945,ZS_10_zs_kappa_24,rw,3,32,63,7,63,
ZS,10,zs_c_i,24,0x0945,ZS_10_zs_c_i_24,rw,3,255,255,13,255,
ZS,10,zs_pass_i,24,0x0945,ZS_10_zs_pass_i_24,rw,3,0,1,21,1,
ZS,10,zs_mask_i,24,0x0945,ZS_10_zs_mask_i_24,rw,3,0,1,22,1,
ZS,10,zs_lambda,25,0x0948,ZS_10_zs_lambda_25,rw,3,32,127,0,127,
ZS,10,zs_kappa,25,0x0948,ZS_10_zs_kappa_25,rw,3,32,63,7,63,
ZS,10,zs_c_i,25,0x0948,ZS_10_zs_c_i_25,rw,3,255,255,13,255,
ZS,10,zs_pass_i,25,0x0948,ZS_10_zs_pass_i_25,rw,3,0,1,21,1,
ZS,10,zs_mask_i,25,0x0948,ZS_10_zs_mask_i_25,rw,3,0,1,22,1,
ZS,10,zs_lambda,26,0x094b,ZS_10_zs_lambda_26,rw,3,32,127,0,127,
ZS,10,zs_kappa,26,0x094b,ZS_10_zs_kappa_26,rw,3,32,63,7,63,
ZS,10,zs_c_i,26,0x094b,ZS_10_zs_c_i_26,rw,3,255,255,13,255,
ZS,10,zs_pass_i,26,0x094b,ZS_10_zs_pass_i_26,rw,3,0,1,21,1,
ZS,10,zs_mask_i,26,0x094b,ZS_10_zs_mask_i_26,rw,3,0,1,22,1,
ZS,10,zs_lambda,27,0x094e,ZS_10_zs_lambda_27,rw,3,32,127,0,127,
ZS,10,zs_kappa,27,0x094e,ZS_10_zs_kappa_27,rw,3,32,63,7,63,
ZS,10,zs_c_i,27,0x094e,ZS_10_zs_c_i_27,rw,3,255,255,13,255,
ZS,10,zs_pass_i,27,0x094e,ZS_10_zs_pass_i_27,rw,3,0,1,21,1,
ZS,10,zs_mask_i,27,0x094e,ZS_10_zs_mask_i_27,rw,3,0,1,22,1,
ZS,10,zs_lambda,28,0x0951,ZS_10_zs_lambda_28,rw,3,32,127,0,127,
ZS,10,zs_kappa,28,0x0951,ZS_10_zs_kappa_28,rw,3,32,63,7,63,
ZS,10,zs_c_i,28,0x0951,ZS_10_zs_c_i_28,rw,3,255,255,13,255,
ZS,10,zs_pass_i,28,0x0951,ZS_10_zs_pass_i_28,rw,3,0,1,21,1,
ZS,10,zs_mask_i,28,0x0951,ZS_10_zs_mask_i_28,rw,3,0,1,22,1,
ZS,10,zs_lambda,29,0x0954,ZS_10_zs_lambda_29,rw,3,32,127,0,127,
ZS,10,zs_kappa,29,0x0954,ZS_10_zs_kappa_29,rw,3,32,63,7,63,
ZS,10,zs_c_i,29,0x0954,ZS_10_zs_c_i_29,rw,3,255,255,13,255,
ZS,10,zs_pass_i,29,0x0954,ZS_10_zs_pass_i_29,rw,3,0,1,21,1,
ZS,10,zs_mask_i,29,0x0954,ZS_10_zs_mask_i_29,rw,3,0,1,22,1,
ZS,10,zs_lambda,30,0x0957,ZS_10_zs_lambda_30,rw,3,32,127,0,127,
ZS,10,zs_kappa,30,0x0957,ZS_10_zs_kappa_30,rw,3,32,63,7,63,
ZS,10,zs_c_i,30,0x0957,ZS_10_zs_c_i_30,rw,3,255,255,13,255,
ZS,10,zs_pass_i,30,0x0957,ZS_10_zs_pass_i_30,rw,3,0,1,21,1,
ZS,10,zs_mask_i,30,0x0957,ZS_10_zs_mask_i_30,rw,3,0,1,22,1,
ZS,10,zs_lambda,31,0x095a,ZS_10_zs_lambda_31,rw,3,32,127,0,127,
ZS,10,zs_kappa,31,0x095a,ZS_10_zs_kappa_31,rw,3,32,63,7,63,
ZS,10,zs_c_i,31,0x095a,ZS_10_zs_c_i_31,rw,3,255,255,13,255,
ZS,10,zs_pass_i,31,0x095a,ZS_10_zs_pass_i_31,rw,3,0,1,21,1,
ZS,10,zs_mask_i,31,0x095a,ZS_10_zs_mask_i_31,rw,3,0,1,22,1,
ZS,10,zs_lambda,32,0x095d,ZS_10_zs_lambda_32,rw,3,32,127,0,127,
ZS,10,zs_kappa,32,0x095d,ZS_10_zs_kappa_32,rw,3,32,63,7,63,
ZS,10,zs_c_i,32,0x095d,ZS_10_zs_c_i_32,rw,3,255,255,13,255,
ZS,10,zs_pass_i,32,0x095d,ZS_10_zs_pass_i_32,rw,3,0,1,21,1,
ZS,10,zs_mask_i,32,0x095d,ZS_10_zs_mask_i_32,rw,3,0,1,22,1,
ZS,10,zs_lambda,33,0x0960,ZS_10_zs_lambda_33,rw,3,32,127,0,127,
ZS,10,zs_kappa,33,0x0960,ZS_10_zs_kappa_33,rw,3,32,63,7,63,
ZS,10,zs_c_i,33,0x0960,ZS_10_zs_c_i_33,rw,3,255,255,13,255,
ZS,10,zs_pass_i,33,0x0960,ZS_10_zs_pass_i_33,rw,3,0,1,21,1,
ZS,10,zs_mask_i,33,0x0960,ZS_10_zs_mask_i_33,rw,3,0,1,22,1,
ZS,10,zs_lambda,34,0x0963,ZS_10_zs_lambda_34,rw,3,32,127,0,127,
ZS,10,zs_kappa,34,0x0963,ZS_10_zs_kappa_34,rw,3,32,63,7,63,
ZS,10,zs_c_i,34,0x0963,ZS_10_zs_c_i_34,rw,3,255,255,13,255,
ZS,10,zs_pass_i,34,0x0963,ZS_10_zs_pass_i_34,rw,3,0,1,21,1,
ZS,10,zs_mask_i,34,0x0963,ZS_10_zs_mask_i_34,rw,3,0,1,22,1,
ZS,10,zs_lambda,35,0x0966,ZS_10_zs_lambda_35,rw,3,32,127,0,127,
ZS,10,zs_kappa,35,0x0966,ZS_10_zs_kappa_35,rw,3,32,63,7,63,
ZS,10,zs_c_i,35,0x0966,ZS_10_zs_c_i_35,rw,3,255,255,13,255,
ZS,10,zs_pass_i,35,0x0966,ZS_10_zs_pass_i_35,rw,3,0,1,21,1,
ZS,10,zs_mask_i,35,0x0966,ZS_10_zs_mask_i_35,rw,3,0,1,22,1,
ZS,10,zs_lambda,36,0x0969,ZS_10_zs_lambda_36,rw,3,32,127,0,127,
ZS,10,zs_kappa,36,0x0969,ZS_10_zs_kappa_36,rw,3,32,63,7,63,
ZS,10,zs_c_i,36,0x0969,ZS_10_zs_c_i_36,rw,3,255,255,13,255,
ZS,10,zs_pass_i,36,0x0969,ZS_10_zs_pass_i_36,rw,3,0,1,21,1,
ZS,10,zs_mask_i,36,0x0969,ZS_10_zs_mask_i_36,rw,3,0,1,22,1,
ZS,11,zs_lambda,00,0x096c,ZS_11_zs_lambda_00,rw,3,32,127,0,127,
ZS,11,zs_kappa,00,0x096c,ZS_11_zs_kappa_00,rw,3,32,63,7,63,
ZS,11,zs_c_i,00,0x096c,ZS_11_zs_c_i_00,rw,3,255,255,13,255,
ZS,11,zs_pass_i,00,0x096c,ZS_11_zs_pass_i_00,rw,3,0,1,21,1,
ZS,11,zs_mask_i,00,0x096c,ZS_11_zs_mask_i_00,rw,3,0,1,22,1,
ZS,11,zs_lambda,01,0x096f,ZS_11_zs_lambda_01,rw,3,32,127,0,127,
ZS,11,zs_kappa,01,0x096f,ZS_11_zs_kappa_01,rw,3,32,63,7,63,
ZS,11,zs_c_i,01,0x096f,ZS_11_zs_c_i_01,rw,3,255,255,13,255,
ZS,11,zs_pass_i,01,0x096f,ZS_11_zs_pass_i_01,rw,3,0,1,21,1,
ZS,11,zs_mask_i,01,0x096f,ZS_11_zs_mask_i_01,rw,3,0,1,22,1,
ZS,11,zs_lambda,02,0x0972,ZS_11_zs_lambda_02,rw,3,32,127,0,127,
ZS,11,zs_kappa,02,0x0972,ZS_11_zs_kappa_02,rw,3,32,63,7,63,
ZS,11,zs_c_i,02,0x0972,ZS_11_zs_c_i_02,rw,3,255,255,13,255,
ZS,11,zs_pass_i,02,0x0972,ZS_11_zs_pass_i_02,rw,3,0,1,21,1,
ZS,11,zs_mask_i,02,0x0972,ZS_11_zs_mask_i_02,rw,3,0,1,22,1,
ZS,11,zs_lambda,03,0x0975,ZS_11_zs_lambda_03,rw,3,32,127,0,127,
ZS,11,zs_kappa,03,0x0975,ZS_11_zs_kappa_03,rw,3,32,63,7,63,
ZS,11,zs_c_i,03,0x0975,ZS_11_zs_c_i_03,rw,3,255,255,13,255,
ZS,11,zs_pass_i,03,0x0975,ZS_11_zs_pass_i_03,rw,3,0,1,21,1,
ZS,11,zs_mask_i,03,0x0975,ZS_11_zs_mask_i_03,rw,3,0,1,22,1,
ZS,11,zs_lambda,04,0x0978,ZS_11_zs_lambda_04,rw,3,32,127,0,127,
ZS,11,zs_kappa,04,0x0978,ZS_11_zs_kappa_04,rw,3,32,63,7,63,
ZS,11,zs_c_i,04,0x0978,ZS_11_zs_c_i_04,rw,3,255,255,13,255,
ZS,11,zs_pass_i,04,0x0978,ZS_11_zs_pass_i_04,rw,3,0,1,21,1,
ZS,11,zs_mask_i,04,0x0978,ZS_11_zs_mask_i_04,rw,3,0,1,22,1,
ZS,11,zs_lambda,05,0x097b,ZS_11_zs_lambda_05,rw,3,32,127,0,127,
ZS,11,zs_kappa,05,0x097b,ZS_11_zs_kappa_05,rw,3,32,63,7,63,
ZS,11,zs_c_i,05,0x097b,ZS_11_zs_c_i_05,rw,3,255,255,13,255,
ZS,11,zs_pass_i,05,0x097b,ZS_11_zs_pass_i_05,rw,3,0,1,21,1,
ZS,11,zs_mask_i,05,0x097b,ZS_11_zs_mask_i_05,rw,3,0,1,22,1,
ZS,11,zs_lambda,06,0x097e,ZS_11_zs_lambda_06,rw,3,32,127,0,127,
ZS,11,zs_kappa,06,0x097e,ZS_11_zs_kappa_06,rw,3,32,63,7,63,
ZS,11,zs_c_i,06,0x097e,ZS_11_zs_c_i_06,rw,3,255,255,13,255,
ZS,11,zs_pass_i,06,0x097e,ZS_11_zs_pass_i_06,rw,3,0,1,21,1,
ZS,11,zs_mask_i,06,0x097e,ZS_11_zs_mask_i_06,rw,3,0,1,22,1,
ZS,11,zs_lambda,07,0x0981,ZS_11_zs_lambda_07,rw,3,32,127,0,127,
ZS,11,zs_kappa,07,0x0981,ZS_11_zs_kappa_07,rw,3,32,63,7,63,
ZS,11,zs_c_i,07,0x0981,ZS_11_zs_c_i_07,rw,3,255,255,13,255,
ZS,11,zs_pass_i,07,0x0981,ZS_11_zs_pass_i_07,rw,3,0,1,21,1,
ZS,11,zs_mask_i,07,0x0981,ZS_11_zs_mask_i_07,rw,3,0,1,22,1,
ZS,11,zs_lambda,08,0x0984,ZS_11_zs_lambda_08,rw,3,32,127,0,127,
ZS,11,zs_kappa,08,0x0984,ZS_11_zs_kappa_08,rw,3,32,63,7,63,
ZS,11,zs_c_i,08,0x0984,ZS_11_zs_c_i_08,rw,3,255,255,13,255,
ZS,11,zs_pass_i,08,0x0984,ZS_11_zs_pass_i_08,rw,3,0,1,21,1,
ZS,11,zs_mask_i,08,0x0984,ZS_11_zs_mask_i_08,rw,3,0,1,22,1,
ZS,11,zs_lambda,09,0x0987,ZS_11_zs_lambda_09,rw,3,32,127,0,127,
ZS,11,zs_kappa,09,0x0987,ZS_11_zs_kappa_09,rw,3,32,63,7,63,
ZS,11,zs_c_i,09,0x0987,ZS_11_zs_c_i_09,rw,3,255,255,13,255,
ZS,11,zs_pass_i,09,0x0987,ZS_11_zs_pass_i_09,rw,3,0,1,21,1,
ZS,11,zs_mask_i,09,0x0987,ZS_11_zs_mask_i_09,rw,3,0,1,22,1,
ZS,11,zs_lambda,10,0x098a,ZS_11_zs_lambda_10,rw,3,32,127,0,127,
ZS,11,zs_kappa,10,0x098a,ZS_11_zs_kappa_10,rw,3,32,63,7,63,
ZS,11,zs_c_i,10,0x098a,ZS_11_zs_c_i_10,rw,3,255,255,13,255,
ZS,11,zs_pass_i,10,0x098a,ZS_11_zs_pass_i_10,rw,3,0,1,21,1,
ZS,11,zs_mask_i,10,0x098a,ZS_11_zs_mask_i_10,rw,3,0,1,22,1,
ZS,11,zs_lambda,11,0x098d,ZS_11_zs_lambda_11,rw,3,32,127,0,127,
ZS,11,zs_kappa,11,0x098d,ZS_11_zs_kappa_11,rw,3,32,63,7,63,
ZS,11,zs_c_i,11,0x098d,ZS_11_zs_c_i_11,rw,3,255,255,13,255,
ZS,11,zs_pass_i,11,0x098d,ZS_11_zs_pass_i_11,rw,3,0,1,21,1,
ZS,11,zs_mask_i,11,0x098d,ZS_11_zs_mask_i_11,rw,3,0,1,22,1,
ZS,11,zs_lambda,12,0x0990,ZS_11_zs_lambda_12,rw,3,32,127,0,127,
ZS,11,zs_kappa,12,0x0990,ZS_11_zs_kappa_12,rw,3,32,63,7,63,
ZS,11,zs_c_i,12,0x0990,ZS_11_zs_c_i_12,rw,3,255,255,13,255,
ZS,11,zs_pass_i,12,0x0990,ZS_11_zs_pass_i_12,rw,3,0,1,21,1,
ZS,11,zs_mask_i,12,0x0990,ZS_11_zs_mask_i_12,rw,3,0,1,22,1,
ZS,11,zs_lambda,13,0x0993,ZS_11_zs_lambda_13,rw,3,32,127,0,127,
ZS,11,zs_kappa,13,0x0993,ZS_11_zs_kappa_13,rw,3,32,63,7,63,
ZS,11,zs_c_i,13,0x0993,ZS_11_zs_c_i_13,rw,3,255,255,13,255,
ZS,11,zs_pass_i,13,0x0993,ZS_11_zs_pass_i_13,rw,3,0,1,21,1,
ZS,11,zs_mask_i,13,0x0993,ZS_11_zs_mask_i_13,rw,3,0,1,22,1,
ZS,11,zs_lambda,14,0x0996,ZS_11_zs_lambda_14,rw,3,32,127,0,127,
ZS,11,zs_kappa,14,0x0996,ZS_11_zs_kappa_14,rw,3,32,63,7,63,
ZS,11,zs_c_i,14,0x0996,ZS_11_zs_c_i_14,rw,3,255,255,13,255,
ZS,11,zs_pass_i,14,0x0996,ZS_11_zs_pass_i_14,rw,3,0,1,21,1,
ZS,11,zs_mask_i,14,0x0996,ZS_11_zs_mask_i_14,rw,3,0,1,22,1,
ZS,11,zs_lambda,15,0x0999,ZS_11_zs_lambda_15,rw,3,32,127,0,127,
ZS,11,zs_kappa,15,0x0999,ZS_11_zs_kappa_15,rw,3,32,63,7,63,
ZS,11,zs_c_i,15,0x0999,ZS_11_zs_c_i_15,rw,3,255,255,13,255,
ZS,11,zs_pass_i,15,0x0999,ZS_11_zs_pass_i_15,rw,3,0,1,21,1,
ZS,11,zs_mask_i,15,0x0999,ZS_11_zs_mask_i_15,rw,3,0,1,22,1,
ZS,11,zs_lambda,16,0x099c,ZS_11_zs_lambda_16,rw,3,32,127,0,127,
ZS,11,zs_kappa,16,0x099c,ZS_11_zs_kappa_16,rw,3,32,63,7,63,
ZS,11,zs_c_i,16,0x099c,ZS_11_zs_c_i_16,rw,3,255,255,13,255,
ZS,11,zs_pass_i,16,0x099c,ZS_11_zs_pass_i_16,rw,3,0,1,21,1,
ZS,11,zs_mask_i,16,0x099c,ZS_11_zs_mask_i_16,rw,3,0,1,22,1,
ZS,11,zs_lambda,17,0x099f,ZS_11_zs_lambda_17,rw,3,32,127,0,127,
ZS,11,zs_kappa,17,0x099f,ZS_11_zs_kappa_17,rw,3,32,63,7,63,
ZS,11,zs_c_i,17,0x099f,ZS_11_zs_c_i_17,rw,3,255,255,13,255,
ZS,11,zs_pass_i,17,0x099f,ZS_11_zs_pass_i_17,rw,3,0,1,21,1,
ZS,11,zs_mask_i,17,0x099f,ZS_11_zs_mask_i_17,rw,3,0,1,22,1,
ZS,11,zs_lambda,18,0x09a2,ZS_11_zs_lambda_18,rw,3,32,127,0,127,
ZS,11,zs_kappa,18,0x09a2,ZS_11_zs_kappa_18,rw,3,32,63,7,63,
ZS,11,zs_c_i,18,0x09a2,ZS_11_zs_c_i_18,rw,3,255,255,13,255,
ZS,11,zs_pass_i,18,0x09a2,ZS_11_zs_pass_i_18,rw,3,0,1,21,1,
ZS,11,zs_mask_i,18,0x09a2,ZS_11_zs_mask_i_18,rw,3,0,1,22,1,
ZS,11,zs_lambda,19,0x09a5,ZS_11_zs_lambda_19,rw,3,32,127,0,127,
ZS,11,zs_kappa,19,0x09a5,ZS_11_zs_kappa_19,rw,3,32,63,7,63,
ZS,11,zs_c_i,19,0x09a5,ZS_11_zs_c_i_19,rw,3,255,255,13,255,
ZS,11,zs_pass_i,19,0x09a5,ZS_11_zs_pass_i_19,rw,3,0,1,21,1,
ZS,11,zs_mask_i,19,0x09a5,ZS_11_zs_mask_i_19,rw,3,0,1,22,1,
ZS,11,zs_lambda,20,0x09a8,ZS_11_zs_lambda_20,rw,3,32,127,0,127,
ZS,11,zs_kappa,20,0x09a8,ZS_11_zs_kappa_20,rw,3,32,63,7,63,
ZS,11,zs_c_i,20,0x09a8,ZS_11_zs_c_i_20,rw,3,255,255,13,255,
ZS,11,zs_pass_i,20,0x09a8,ZS_11_zs_pass_i_20,rw,3,0,1,21,1,
ZS,11,zs_mask_i,20,0x09a8,ZS_11_zs_mask_i_20,rw,3,0,1,22,1,
ZS,11,zs_lambda,21,0x09ab,ZS_11_zs_lambda_21,rw,3,32,127,0,127,
ZS,11,zs_kappa,21,0x09ab,ZS_11_zs_kappa_21,rw,3,32,63,7,63,
ZS,11,zs_c_i,21,0x09ab,ZS_11_zs_c_i_21,rw,3,255,255,13,255,
ZS,11,zs_pass_i,21,0x09ab,ZS_11_zs_pass_i_21,rw,3,0,1,21,1,
ZS,11,zs_mask_i,21,0x09ab,ZS_11_zs_mask_i_21,rw,3,0,1,22,1,
ZS,11,zs_lambda,22,0x09ae,ZS_11_zs_lambda_22,rw,3,32,127,0,127,
ZS,11,zs_kappa,22,0x09ae,ZS_11_zs_kappa_22,rw,3,32,63,7,63,
ZS,11,zs_c_i,22,0x09ae,ZS_11_zs_c_i_22,rw,3,255,255,13,255,
ZS,11,zs_pass_i,22,0x09ae,ZS_11_zs_pass_i_22,rw,3,0,1,21,1,
ZS,11,zs_mask_i,22,0x09ae,ZS_11_zs_mask_i_22,rw,3,0,1,22,1,
ZS,11,zs_lambda,23,0x09b1,ZS_11_zs_lambda_23,rw,3,32,127,0,127,
ZS,11,zs_kappa,23,0x09b1,ZS_11_zs_kappa_23,rw,3,32,63,7,63,
ZS,11,zs_c_i,23,0x09b1,ZS_11_zs_c_i_23,rw,3,255,255,13,255,
ZS,11,zs_pass_i,23,0x09b1,ZS_11_zs_pass_i_23,rw,3,0,1,21,1,
ZS,11,zs_mask_i,23,0x09b1,ZS_11_zs_mask_i_23,rw,3,0,1,22,1,
ZS,11,zs_lambda,24,0x09b4,ZS_11_zs_lambda_24,rw,3,32,127,0,127,
ZS,11,zs_kappa,24,0x09b4,ZS_11_zs_kappa_24,rw,3,32,63,7,63,
ZS,11,zs_c_i,24,0x09b4,ZS_11_zs_c_i_24,rw,3,255,255,13,255,
ZS,11,zs_pass_i,24,0x09b4,ZS_11_zs_pass_i_24,rw,3,0,1,21,1,
ZS,11,zs_mask_i,24,0x09b4,ZS_11_zs_mask_i_24,rw,3,0,1,22,1,
ZS,11,zs_lambda,25,0x09b7,ZS_11_zs_lambda_25,rw,3,32,127,0,127,
ZS,11,zs_kappa,25,0x09b7,ZS_11_zs_kappa_25,rw,3,32,63,7,63,
ZS,11,zs_c_i,25,0x09b7,ZS_11_zs_c_i_25,rw,3,255,255,13,255,
ZS,11,zs_pass_i,25,0x09b7,ZS_11_zs_pass_i_25,rw,3,0,1,21,1,
ZS,11,zs_mask_i,25,0x09b7,ZS_11_zs_mask_i_25,rw,3,0,1,22,1,
ZS,11,zs_lambda,26,0x09ba,ZS_11_zs_lambda_26,rw,3,32,127,0,127,
ZS,11,zs_kappa,26,0x09ba,ZS_11_zs_kappa_26,rw,3,32,63,7,63,
ZS,11,zs_c_i,26,0x09ba,ZS_11_zs_c_i_26,rw,3,255,255,13,255,
ZS,11,zs_pass_i,26,0x09ba,ZS_11_zs_pass_i_26,rw,3,0,1,21,1,
ZS,11,zs_mask_i,26,0x09ba,ZS_11_zs_mask_i_26,rw,3,0,1,22,1,
ZS,11,zs_lambda,27,0x09bd,ZS_11_zs_lambda_27,rw,3,32,127,0,127,
ZS,11,zs_kappa,27,0x09bd,ZS_11_zs_kappa_27,rw,3,32,63,7,63,
ZS,11,zs_c_i,27,0x09bd,ZS_11_zs_c_i_27,rw,3,255,255,13,255,
ZS,11,zs_pass_i,27,0x09bd,ZS_11_zs_pass_i_27,rw,3,0,1,21,1,
ZS,11,zs_mask_i,27,0x09bd,ZS_11_zs_mask_i_27,rw,3,0,1,22,1,
ZS,11,zs_lambda,28,0x09c0,ZS_11_zs_lambda_28,rw,3,32,127,0,127,
ZS,11,zs_kappa,28,0x09c0,ZS_11_zs_kappa_28,rw,3,32,63,7,63,
ZS,11,zs_c_i,28,0x09c0,ZS_11_zs_c_i_28,rw,3,255,255,13,255,
ZS,11,zs_pass_i,28,0x09c0,ZS_11_zs_pass_i_28,rw,3,0,1,21,1,
ZS,11,zs_mask_i,28,0x09c0,ZS_11_zs_mask_i_28,rw,3,0,1,22,1,
ZS,11,zs_lambda,29,0x09c3,ZS_11_zs_lambda_29,rw,3,32,127,0,127,
ZS,11,zs_kappa,29,0x09c3,ZS_11_zs_kappa_29,rw,3,32,63,7,63,
ZS,11,zs_c_i,29,0x09c3,ZS_11_zs_c_i_29,rw,3,255,255,13,255,
ZS,11,zs_pass_i,29,0x09c3,ZS_11_zs_pass_i_29,rw,3,0,1,21,1,
ZS,11,zs_mask_i,29,0x09c3,ZS_11_zs_mask_i_29,rw,3,0,1,22,1,
ZS,11,zs_lambda,30,0x09c6,ZS_11_zs_lambda_30,rw,3,32,127,0,127,
ZS,11,zs_kappa,30,0x09c6,ZS_11_zs_kappa_30,rw,3,32,63,7,63,
ZS,11,zs_c_i,30,0x09c6,ZS_11_zs_c_i_30,rw,3,255,255,13,255,
ZS,11,zs_pass_i,30,0x09c6,ZS_11_zs_pass_i_30,rw,3,0,1,21,1,
ZS,11,zs_mask_i,30,0x09c6,ZS_11_zs_mask_i_30,rw,3,0,1,22,1,
ZS,11,zs_lambda,31,0x09c9,ZS_11_zs_lambda_31,rw,3,32,127,0,127,
ZS,11,zs_kappa,31,0x09c9,ZS_11_zs_kappa_31,rw,3,32,63,7,63,
ZS,11,zs_c_i,31,0x09c9,ZS_11_zs_c_i_31,rw,3,255,255,13,255,
ZS,11,zs_pass_i,31,0x09c9,ZS_11_zs_pass_i_31,rw,3,0,1,21,1,
ZS,11,zs_mask_i,31,0x09c9,ZS_11_zs_mask_i_31,rw,3,0,1,22,1,
ZS,11,zs_lambda,32,0x09cc,ZS_11_zs_lambda_32,rw,3,32,127,0,127,
ZS,11,zs_kappa,32,0x09cc,ZS_11_zs_kappa_32,rw,3,32,63,7,63,
ZS,11,zs_c_i,32,0x09cc,ZS_11_zs_c_i_32,rw,3,255,255,13,255,
ZS,11,zs_pass_i,32,0x09cc,ZS_11_zs_pass_i_32,rw,3,0,1,21,1,
ZS,11,zs_mask_i,32,0x09cc,ZS_11_zs_mask_i_32,rw,3,0,1,22,1,
ZS,11,zs_lambda,33,0x09cf,ZS_11_zs_lambda_33,rw,3,32,127,0,127,
ZS,11,zs_kappa,33,0x09cf,ZS_11_zs_kappa_33,rw,3,32,63,7,63,
ZS,11,zs_c_i,33,0x09cf,ZS_11_zs_c_i_33,rw,3,255,255,13,255,
ZS,11,zs_pass_i,33,0x09cf,ZS_11_zs_pass_i_33,rw,3,0,1,21,1,
ZS,11,zs_mask_i,33,0x09cf,ZS_11_zs_mask_i_33,rw,3,0,1,22,1,
ZS,11,zs_lambda,34,0x09d2,ZS_11_zs_lambda_34,rw,3,32,127,0,127,
ZS,11,zs_kappa,34,0x09d2,ZS_11_zs_kappa_34,rw,3,32,63,7,63,
ZS,11,zs_c_i,34,0x09d2,ZS_11_zs_c_i_34,rw,3,255,255,13,255,
ZS,11,zs_pass_i,34,0x09d2,ZS_11_zs_pass_i_34,rw,3,0,1,21,1,
ZS,11,zs_mask_i,34,0x09d2,ZS_11_zs_mask_i_34,rw,3,0,1,22,1,
ZS,11,zs_lambda,35,0x09d5,ZS_11_zs_lambda_35,rw,3,32,127,0,127,
ZS,11,zs_kappa,35,0x09d5,ZS_11_zs_kappa_35,rw,3,32,63,7,63,
ZS,11,zs_c_i,35,0x09d5,ZS_11_zs_c_i_35,rw,3,255,255,13,255,
ZS,11,zs_pass_i,35,0x09d5,ZS_11_zs_pass_i_35,rw,3,0,1,21,1,
ZS,11,zs_mask_i,35,0x09d5,ZS_11_zs_mask_i_35,rw,3,0,1,22,1,
ZS,11,zs_lambda,36,0x09d8,ZS_11_zs_lambda_36,rw,3,32,127,0,127,
ZS,11,zs_kappa,36,0x09d8,ZS_11_zs_kappa_36,rw,3,32,63,7,63,
ZS,11,zs_c_i,36,0x09d8,ZS_11_zs_c_i_36,rw,3,255,255,13,255,
ZS,11,zs_pass_i,36,0x09d8,ZS_11_zs_pass_i_36,rw,3,0,1,21,1,
ZS,11,zs_mask_i,36,0x09d8,ZS_11_zs_mask_i_36,rw,3,0,1,22,1,
ZS,Global,tmr_err_cnt_zero_suppress,,0x09db,ZS_tmr_err_cnt_zero_suppress,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
ZSCommon,Global,zs_ce,,0x04a5,ZSCommon_zs_ce,rw,2,0,1023,0,1023,Channel Processor constant
ZSmOne,00,zs_c_i_m,00,0x09dc,ZSmOne_00_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,00,0x09dc,ZSmOne_00_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,00,0x09dc,ZSmOne_00_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,00,0x09dc,ZSmOne_00_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,01,0x09de,ZSmOne_00_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,01,0x09de,ZSmOne_00_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,01,0x09de,ZSmOne_00_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,01,0x09de,ZSmOne_00_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,02,0x09e0,ZSmOne_00_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,02,0x09e0,ZSmOne_00_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,02,0x09e0,ZSmOne_00_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,02,0x09e0,ZSmOne_00_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,03,0x09e2,ZSmOne_00_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,03,0x09e2,ZSmOne_00_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,03,0x09e2,ZSmOne_00_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,03,0x09e2,ZSmOne_00_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,04,0x09e4,ZSmOne_00_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,04,0x09e4,ZSmOne_00_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,04,0x09e4,ZSmOne_00_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,04,0x09e4,ZSmOne_00_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,05,0x09e6,ZSmOne_00_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,05,0x09e6,ZSmOne_00_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,05,0x09e6,ZSmOne_00_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,05,0x09e6,ZSmOne_00_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,06,0x09e8,ZSmOne_00_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,06,0x09e8,ZSmOne_00_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,06,0x09e8,ZSmOne_00_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,06,0x09e8,ZSmOne_00_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,07,0x09ea,ZSmOne_00_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,07,0x09ea,ZSmOne_00_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,07,0x09ea,ZSmOne_00_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,07,0x09ea,ZSmOne_00_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,08,0x09ec,ZSmOne_00_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,08,0x09ec,ZSmOne_00_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,08,0x09ec,ZSmOne_00_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,08,0x09ec,ZSmOne_00_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,09,0x09ee,ZSmOne_00_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,09,0x09ee,ZSmOne_00_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,09,0x09ee,ZSmOne_00_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,09,0x09ee,ZSmOne_00_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,10,0x09f0,ZSmOne_00_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,10,0x09f0,ZSmOne_00_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,10,0x09f0,ZSmOne_00_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,10,0x09f0,ZSmOne_00_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,11,0x09f2,ZSmOne_00_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,11,0x09f2,ZSmOne_00_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,11,0x09f2,ZSmOne_00_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,11,0x09f2,ZSmOne_00_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,12,0x09f4,ZSmOne_00_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,12,0x09f4,ZSmOne_00_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,12,0x09f4,ZSmOne_00_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,12,0x09f4,ZSmOne_00_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,13,0x09f6,ZSmOne_00_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,13,0x09f6,ZSmOne_00_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,13,0x09f6,ZSmOne_00_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,13,0x09f6,ZSmOne_00_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,14,0x09f8,ZSmOne_00_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,14,0x09f8,ZSmOne_00_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,14,0x09f8,ZSmOne_00_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,14,0x09f8,ZSmOne_00_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,15,0x09fa,ZSmOne_00_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,15,0x09fa,ZSmOne_00_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,15,0x09fa,ZSmOne_00_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,15,0x09fa,ZSmOne_00_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,16,0x09fc,ZSmOne_00_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,16,0x09fc,ZSmOne_00_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,16,0x09fc,ZSmOne_00_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,16,0x09fc,ZSmOne_00_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,17,0x09fe,ZSmOne_00_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,17,0x09fe,ZSmOne_00_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,17,0x09fe,ZSmOne_00_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,17,0x09fe,ZSmOne_00_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,18,0x0a00,ZSmOne_00_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,18,0x0a00,ZSmOne_00_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,18,0x0a00,ZSmOne_00_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,18,0x0a00,ZSmOne_00_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,19,0x0a02,ZSmOne_00_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,19,0x0a02,ZSmOne_00_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,19,0x0a02,ZSmOne_00_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,19,0x0a02,ZSmOne_00_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,20,0x0a04,ZSmOne_00_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,20,0x0a04,ZSmOne_00_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,20,0x0a04,ZSmOne_00_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,20,0x0a04,ZSmOne_00_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,21,0x0a06,ZSmOne_00_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,21,0x0a06,ZSmOne_00_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,21,0x0a06,ZSmOne_00_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,21,0x0a06,ZSmOne_00_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,22,0x0a08,ZSmOne_00_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,22,0x0a08,ZSmOne_00_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,22,0x0a08,ZSmOne_00_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,22,0x0a08,ZSmOne_00_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,23,0x0a0a,ZSmOne_00_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,23,0x0a0a,ZSmOne_00_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,23,0x0a0a,ZSmOne_00_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,23,0x0a0a,ZSmOne_00_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,24,0x0a0c,ZSmOne_00_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,24,0x0a0c,ZSmOne_00_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,24,0x0a0c,ZSmOne_00_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,24,0x0a0c,ZSmOne_00_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,25,0x0a0e,ZSmOne_00_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,25,0x0a0e,ZSmOne_00_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,25,0x0a0e,ZSmOne_00_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,25,0x0a0e,ZSmOne_00_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,26,0x0a10,ZSmOne_00_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,26,0x0a10,ZSmOne_00_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,26,0x0a10,ZSmOne_00_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,26,0x0a10,ZSmOne_00_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,27,0x0a12,ZSmOne_00_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,27,0x0a12,ZSmOne_00_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,27,0x0a12,ZSmOne_00_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,27,0x0a12,ZSmOne_00_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,28,0x0a14,ZSmOne_00_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,28,0x0a14,ZSmOne_00_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,28,0x0a14,ZSmOne_00_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,28,0x0a14,ZSmOne_00_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,29,0x0a16,ZSmOne_00_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,29,0x0a16,ZSmOne_00_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,29,0x0a16,ZSmOne_00_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,29,0x0a16,ZSmOne_00_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,30,0x0a18,ZSmOne_00_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,30,0x0a18,ZSmOne_00_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,30,0x0a18,ZSmOne_00_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,30,0x0a18,ZSmOne_00_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,31,0x0a1a,ZSmOne_00_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,31,0x0a1a,ZSmOne_00_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,31,0x0a1a,ZSmOne_00_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,31,0x0a1a,ZSmOne_00_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,32,0x0a1c,ZSmOne_00_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,32,0x0a1c,ZSmOne_00_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,32,0x0a1c,ZSmOne_00_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,32,0x0a1c,ZSmOne_00_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,33,0x0a1e,ZSmOne_00_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,33,0x0a1e,ZSmOne_00_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,33,0x0a1e,ZSmOne_00_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,33,0x0a1e,ZSmOne_00_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,34,0x0a20,ZSmOne_00_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,34,0x0a20,ZSmOne_00_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,34,0x0a20,ZSmOne_00_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,34,0x0a20,ZSmOne_00_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,35,0x0a22,ZSmOne_00_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,35,0x0a22,ZSmOne_00_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,35,0x0a22,ZSmOne_00_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,35,0x0a22,ZSmOne_00_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,00,zs_c_i_m,36,0x0a24,ZSmOne_00_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,00,zs_beta_m,36,0x0a24,ZSmOne_00_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,00,zs_pass_i_m,36,0x0a24,ZSmOne_00_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,00,zs_mask_i_m,36,0x0a24,ZSmOne_00_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,00,0x0a26,ZSmOne_01_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,00,0x0a26,ZSmOne_01_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,00,0x0a26,ZSmOne_01_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,00,0x0a26,ZSmOne_01_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,01,0x0a28,ZSmOne_01_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,01,0x0a28,ZSmOne_01_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,01,0x0a28,ZSmOne_01_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,01,0x0a28,ZSmOne_01_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,02,0x0a2a,ZSmOne_01_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,02,0x0a2a,ZSmOne_01_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,02,0x0a2a,ZSmOne_01_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,02,0x0a2a,ZSmOne_01_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,03,0x0a2c,ZSmOne_01_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,03,0x0a2c,ZSmOne_01_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,03,0x0a2c,ZSmOne_01_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,03,0x0a2c,ZSmOne_01_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,04,0x0a2e,ZSmOne_01_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,04,0x0a2e,ZSmOne_01_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,04,0x0a2e,ZSmOne_01_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,04,0x0a2e,ZSmOne_01_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,05,0x0a30,ZSmOne_01_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,05,0x0a30,ZSmOne_01_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,05,0x0a30,ZSmOne_01_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,05,0x0a30,ZSmOne_01_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,06,0x0a32,ZSmOne_01_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,06,0x0a32,ZSmOne_01_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,06,0x0a32,ZSmOne_01_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,06,0x0a32,ZSmOne_01_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,07,0x0a34,ZSmOne_01_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,07,0x0a34,ZSmOne_01_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,07,0x0a34,ZSmOne_01_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,07,0x0a34,ZSmOne_01_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,08,0x0a36,ZSmOne_01_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,08,0x0a36,ZSmOne_01_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,08,0x0a36,ZSmOne_01_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,08,0x0a36,ZSmOne_01_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,09,0x0a38,ZSmOne_01_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,09,0x0a38,ZSmOne_01_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,09,0x0a38,ZSmOne_01_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,09,0x0a38,ZSmOne_01_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,10,0x0a3a,ZSmOne_01_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,10,0x0a3a,ZSmOne_01_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,10,0x0a3a,ZSmOne_01_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,10,0x0a3a,ZSmOne_01_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,11,0x0a3c,ZSmOne_01_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,11,0x0a3c,ZSmOne_01_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,11,0x0a3c,ZSmOne_01_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,11,0x0a3c,ZSmOne_01_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,12,0x0a3e,ZSmOne_01_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,12,0x0a3e,ZSmOne_01_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,12,0x0a3e,ZSmOne_01_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,12,0x0a3e,ZSmOne_01_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,13,0x0a40,ZSmOne_01_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,13,0x0a40,ZSmOne_01_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,13,0x0a40,ZSmOne_01_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,13,0x0a40,ZSmOne_01_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,14,0x0a42,ZSmOne_01_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,14,0x0a42,ZSmOne_01_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,14,0x0a42,ZSmOne_01_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,14,0x0a42,ZSmOne_01_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,15,0x0a44,ZSmOne_01_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,15,0x0a44,ZSmOne_01_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,15,0x0a44,ZSmOne_01_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,15,0x0a44,ZSmOne_01_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,16,0x0a46,ZSmOne_01_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,16,0x0a46,ZSmOne_01_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,16,0x0a46,ZSmOne_01_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,16,0x0a46,ZSmOne_01_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,17,0x0a48,ZSmOne_01_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,17,0x0a48,ZSmOne_01_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,17,0x0a48,ZSmOne_01_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,17,0x0a48,ZSmOne_01_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,18,0x0a4a,ZSmOne_01_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,18,0x0a4a,ZSmOne_01_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,18,0x0a4a,ZSmOne_01_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,18,0x0a4a,ZSmOne_01_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,19,0x0a4c,ZSmOne_01_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,19,0x0a4c,ZSmOne_01_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,19,0x0a4c,ZSmOne_01_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,19,0x0a4c,ZSmOne_01_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,20,0x0a4e,ZSmOne_01_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,20,0x0a4e,ZSmOne_01_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,20,0x0a4e,ZSmOne_01_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,20,0x0a4e,ZSmOne_01_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,21,0x0a50,ZSmOne_01_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,21,0x0a50,ZSmOne_01_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,21,0x0a50,ZSmOne_01_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,21,0x0a50,ZSmOne_01_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,22,0x0a52,ZSmOne_01_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,22,0x0a52,ZSmOne_01_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,22,0x0a52,ZSmOne_01_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,22,0x0a52,ZSmOne_01_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,23,0x0a54,ZSmOne_01_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,23,0x0a54,ZSmOne_01_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,23,0x0a54,ZSmOne_01_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,23,0x0a54,ZSmOne_01_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,24,0x0a56,ZSmOne_01_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,24,0x0a56,ZSmOne_01_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,24,0x0a56,ZSmOne_01_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,24,0x0a56,ZSmOne_01_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,25,0x0a58,ZSmOne_01_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,25,0x0a58,ZSmOne_01_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,25,0x0a58,ZSmOne_01_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,25,0x0a58,ZSmOne_01_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,26,0x0a5a,ZSmOne_01_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,26,0x0a5a,ZSmOne_01_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,26,0x0a5a,ZSmOne_01_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,26,0x0a5a,ZSmOne_01_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,27,0x0a5c,ZSmOne_01_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,27,0x0a5c,ZSmOne_01_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,27,0x0a5c,ZSmOne_01_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,27,0x0a5c,ZSmOne_01_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,28,0x0a5e,ZSmOne_01_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,28,0x0a5e,ZSmOne_01_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,28,0x0a5e,ZSmOne_01_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,28,0x0a5e,ZSmOne_01_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,29,0x0a60,ZSmOne_01_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,29,0x0a60,ZSmOne_01_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,29,0x0a60,ZSmOne_01_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,29,0x0a60,ZSmOne_01_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,30,0x0a62,ZSmOne_01_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,30,0x0a62,ZSmOne_01_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,30,0x0a62,ZSmOne_01_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,30,0x0a62,ZSmOne_01_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,31,0x0a64,ZSmOne_01_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,31,0x0a64,ZSmOne_01_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,31,0x0a64,ZSmOne_01_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,31,0x0a64,ZSmOne_01_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,32,0x0a66,ZSmOne_01_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,32,0x0a66,ZSmOne_01_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,32,0x0a66,ZSmOne_01_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,32,0x0a66,ZSmOne_01_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,33,0x0a68,ZSmOne_01_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,33,0x0a68,ZSmOne_01_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,33,0x0a68,ZSmOne_01_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,33,0x0a68,ZSmOne_01_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,34,0x0a6a,ZSmOne_01_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,34,0x0a6a,ZSmOne_01_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,34,0x0a6a,ZSmOne_01_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,34,0x0a6a,ZSmOne_01_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,35,0x0a6c,ZSmOne_01_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,35,0x0a6c,ZSmOne_01_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,35,0x0a6c,ZSmOne_01_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,35,0x0a6c,ZSmOne_01_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,01,zs_c_i_m,36,0x0a6e,ZSmOne_01_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,01,zs_beta_m,36,0x0a6e,ZSmOne_01_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,01,zs_pass_i_m,36,0x0a6e,ZSmOne_01_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,01,zs_mask_i_m,36,0x0a6e,ZSmOne_01_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,00,0x0a70,ZSmOne_02_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,00,0x0a70,ZSmOne_02_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,00,0x0a70,ZSmOne_02_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,00,0x0a70,ZSmOne_02_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,01,0x0a72,ZSmOne_02_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,01,0x0a72,ZSmOne_02_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,01,0x0a72,ZSmOne_02_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,01,0x0a72,ZSmOne_02_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,02,0x0a74,ZSmOne_02_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,02,0x0a74,ZSmOne_02_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,02,0x0a74,ZSmOne_02_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,02,0x0a74,ZSmOne_02_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,03,0x0a76,ZSmOne_02_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,03,0x0a76,ZSmOne_02_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,03,0x0a76,ZSmOne_02_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,03,0x0a76,ZSmOne_02_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,04,0x0a78,ZSmOne_02_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,04,0x0a78,ZSmOne_02_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,04,0x0a78,ZSmOne_02_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,04,0x0a78,ZSmOne_02_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,05,0x0a7a,ZSmOne_02_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,05,0x0a7a,ZSmOne_02_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,05,0x0a7a,ZSmOne_02_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,05,0x0a7a,ZSmOne_02_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,06,0x0a7c,ZSmOne_02_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,06,0x0a7c,ZSmOne_02_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,06,0x0a7c,ZSmOne_02_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,06,0x0a7c,ZSmOne_02_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,07,0x0a7e,ZSmOne_02_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,07,0x0a7e,ZSmOne_02_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,07,0x0a7e,ZSmOne_02_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,07,0x0a7e,ZSmOne_02_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,08,0x0a80,ZSmOne_02_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,08,0x0a80,ZSmOne_02_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,08,0x0a80,ZSmOne_02_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,08,0x0a80,ZSmOne_02_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,09,0x0a82,ZSmOne_02_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,09,0x0a82,ZSmOne_02_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,09,0x0a82,ZSmOne_02_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,09,0x0a82,ZSmOne_02_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,10,0x0a84,ZSmOne_02_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,10,0x0a84,ZSmOne_02_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,10,0x0a84,ZSmOne_02_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,10,0x0a84,ZSmOne_02_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,11,0x0a86,ZSmOne_02_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,11,0x0a86,ZSmOne_02_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,11,0x0a86,ZSmOne_02_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,11,0x0a86,ZSmOne_02_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,12,0x0a88,ZSmOne_02_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,12,0x0a88,ZSmOne_02_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,12,0x0a88,ZSmOne_02_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,12,0x0a88,ZSmOne_02_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,13,0x0a8a,ZSmOne_02_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,13,0x0a8a,ZSmOne_02_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,13,0x0a8a,ZSmOne_02_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,13,0x0a8a,ZSmOne_02_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,14,0x0a8c,ZSmOne_02_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,14,0x0a8c,ZSmOne_02_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,14,0x0a8c,ZSmOne_02_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,14,0x0a8c,ZSmOne_02_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,15,0x0a8e,ZSmOne_02_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,15,0x0a8e,ZSmOne_02_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,15,0x0a8e,ZSmOne_02_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,15,0x0a8e,ZSmOne_02_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,16,0x0a90,ZSmOne_02_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,16,0x0a90,ZSmOne_02_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,16,0x0a90,ZSmOne_02_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,16,0x0a90,ZSmOne_02_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,17,0x0a92,ZSmOne_02_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,17,0x0a92,ZSmOne_02_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,17,0x0a92,ZSmOne_02_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,17,0x0a92,ZSmOne_02_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,18,0x0a94,ZSmOne_02_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,18,0x0a94,ZSmOne_02_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,18,0x0a94,ZSmOne_02_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,18,0x0a94,ZSmOne_02_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,19,0x0a96,ZSmOne_02_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,19,0x0a96,ZSmOne_02_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,19,0x0a96,ZSmOne_02_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,19,0x0a96,ZSmOne_02_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,20,0x0a98,ZSmOne_02_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,20,0x0a98,ZSmOne_02_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,20,0x0a98,ZSmOne_02_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,20,0x0a98,ZSmOne_02_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,21,0x0a9a,ZSmOne_02_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,21,0x0a9a,ZSmOne_02_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,21,0x0a9a,ZSmOne_02_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,21,0x0a9a,ZSmOne_02_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,22,0x0a9c,ZSmOne_02_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,22,0x0a9c,ZSmOne_02_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,22,0x0a9c,ZSmOne_02_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,22,0x0a9c,ZSmOne_02_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,23,0x0a9e,ZSmOne_02_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,23,0x0a9e,ZSmOne_02_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,23,0x0a9e,ZSmOne_02_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,23,0x0a9e,ZSmOne_02_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,24,0x0aa0,ZSmOne_02_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,24,0x0aa0,ZSmOne_02_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,24,0x0aa0,ZSmOne_02_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,24,0x0aa0,ZSmOne_02_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,25,0x0aa2,ZSmOne_02_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,25,0x0aa2,ZSmOne_02_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,25,0x0aa2,ZSmOne_02_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,25,0x0aa2,ZSmOne_02_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,26,0x0aa4,ZSmOne_02_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,26,0x0aa4,ZSmOne_02_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,26,0x0aa4,ZSmOne_02_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,26,0x0aa4,ZSmOne_02_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,27,0x0aa6,ZSmOne_02_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,27,0x0aa6,ZSmOne_02_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,27,0x0aa6,ZSmOne_02_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,27,0x0aa6,ZSmOne_02_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,28,0x0aa8,ZSmOne_02_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,28,0x0aa8,ZSmOne_02_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,28,0x0aa8,ZSmOne_02_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,28,0x0aa8,ZSmOne_02_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,29,0x0aaa,ZSmOne_02_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,29,0x0aaa,ZSmOne_02_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,29,0x0aaa,ZSmOne_02_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,29,0x0aaa,ZSmOne_02_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,30,0x0aac,ZSmOne_02_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,30,0x0aac,ZSmOne_02_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,30,0x0aac,ZSmOne_02_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,30,0x0aac,ZSmOne_02_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,31,0x0aae,ZSmOne_02_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,31,0x0aae,ZSmOne_02_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,31,0x0aae,ZSmOne_02_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,31,0x0aae,ZSmOne_02_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,32,0x0ab0,ZSmOne_02_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,32,0x0ab0,ZSmOne_02_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,32,0x0ab0,ZSmOne_02_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,32,0x0ab0,ZSmOne_02_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,33,0x0ab2,ZSmOne_02_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,33,0x0ab2,ZSmOne_02_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,33,0x0ab2,ZSmOne_02_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,33,0x0ab2,ZSmOne_02_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,34,0x0ab4,ZSmOne_02_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,34,0x0ab4,ZSmOne_02_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,34,0x0ab4,ZSmOne_02_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,34,0x0ab4,ZSmOne_02_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,35,0x0ab6,ZSmOne_02_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,35,0x0ab6,ZSmOne_02_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,35,0x0ab6,ZSmOne_02_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,35,0x0ab6,ZSmOne_02_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,02,zs_c_i_m,36,0x0ab8,ZSmOne_02_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,02,zs_beta_m,36,0x0ab8,ZSmOne_02_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,02,zs_pass_i_m,36,0x0ab8,ZSmOne_02_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,02,zs_mask_i_m,36,0x0ab8,ZSmOne_02_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,00,0x0aba,ZSmOne_03_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,00,0x0aba,ZSmOne_03_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,00,0x0aba,ZSmOne_03_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,00,0x0aba,ZSmOne_03_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,01,0x0abc,ZSmOne_03_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,01,0x0abc,ZSmOne_03_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,01,0x0abc,ZSmOne_03_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,01,0x0abc,ZSmOne_03_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,02,0x0abe,ZSmOne_03_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,02,0x0abe,ZSmOne_03_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,02,0x0abe,ZSmOne_03_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,02,0x0abe,ZSmOne_03_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,03,0x0ac0,ZSmOne_03_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,03,0x0ac0,ZSmOne_03_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,03,0x0ac0,ZSmOne_03_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,03,0x0ac0,ZSmOne_03_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,04,0x0ac2,ZSmOne_03_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,04,0x0ac2,ZSmOne_03_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,04,0x0ac2,ZSmOne_03_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,04,0x0ac2,ZSmOne_03_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,05,0x0ac4,ZSmOne_03_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,05,0x0ac4,ZSmOne_03_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,05,0x0ac4,ZSmOne_03_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,05,0x0ac4,ZSmOne_03_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,06,0x0ac6,ZSmOne_03_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,06,0x0ac6,ZSmOne_03_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,06,0x0ac6,ZSmOne_03_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,06,0x0ac6,ZSmOne_03_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,07,0x0ac8,ZSmOne_03_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,07,0x0ac8,ZSmOne_03_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,07,0x0ac8,ZSmOne_03_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,07,0x0ac8,ZSmOne_03_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,08,0x0aca,ZSmOne_03_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,08,0x0aca,ZSmOne_03_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,08,0x0aca,ZSmOne_03_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,08,0x0aca,ZSmOne_03_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,09,0x0acc,ZSmOne_03_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,09,0x0acc,ZSmOne_03_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,09,0x0acc,ZSmOne_03_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,09,0x0acc,ZSmOne_03_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,10,0x0ace,ZSmOne_03_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,10,0x0ace,ZSmOne_03_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,10,0x0ace,ZSmOne_03_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,10,0x0ace,ZSmOne_03_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,11,0x0ad0,ZSmOne_03_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,11,0x0ad0,ZSmOne_03_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,11,0x0ad0,ZSmOne_03_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,11,0x0ad0,ZSmOne_03_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,12,0x0ad2,ZSmOne_03_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,12,0x0ad2,ZSmOne_03_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,12,0x0ad2,ZSmOne_03_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,12,0x0ad2,ZSmOne_03_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,13,0x0ad4,ZSmOne_03_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,13,0x0ad4,ZSmOne_03_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,13,0x0ad4,ZSmOne_03_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,13,0x0ad4,ZSmOne_03_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,14,0x0ad6,ZSmOne_03_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,14,0x0ad6,ZSmOne_03_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,14,0x0ad6,ZSmOne_03_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,14,0x0ad6,ZSmOne_03_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,15,0x0ad8,ZSmOne_03_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,15,0x0ad8,ZSmOne_03_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,15,0x0ad8,ZSmOne_03_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,15,0x0ad8,ZSmOne_03_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,16,0x0ada,ZSmOne_03_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,16,0x0ada,ZSmOne_03_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,16,0x0ada,ZSmOne_03_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,16,0x0ada,ZSmOne_03_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,17,0x0adc,ZSmOne_03_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,17,0x0adc,ZSmOne_03_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,17,0x0adc,ZSmOne_03_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,17,0x0adc,ZSmOne_03_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,18,0x0ade,ZSmOne_03_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,18,0x0ade,ZSmOne_03_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,18,0x0ade,ZSmOne_03_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,18,0x0ade,ZSmOne_03_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,19,0x0ae0,ZSmOne_03_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,19,0x0ae0,ZSmOne_03_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,19,0x0ae0,ZSmOne_03_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,19,0x0ae0,ZSmOne_03_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,20,0x0ae2,ZSmOne_03_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,20,0x0ae2,ZSmOne_03_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,20,0x0ae2,ZSmOne_03_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,20,0x0ae2,ZSmOne_03_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,21,0x0ae4,ZSmOne_03_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,21,0x0ae4,ZSmOne_03_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,21,0x0ae4,ZSmOne_03_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,21,0x0ae4,ZSmOne_03_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,22,0x0ae6,ZSmOne_03_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,22,0x0ae6,ZSmOne_03_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,22,0x0ae6,ZSmOne_03_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,22,0x0ae6,ZSmOne_03_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,23,0x0ae8,ZSmOne_03_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,23,0x0ae8,ZSmOne_03_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,23,0x0ae8,ZSmOne_03_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,23,0x0ae8,ZSmOne_03_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,24,0x0aea,ZSmOne_03_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,24,0x0aea,ZSmOne_03_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,24,0x0aea,ZSmOne_03_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,24,0x0aea,ZSmOne_03_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,25,0x0aec,ZSmOne_03_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,25,0x0aec,ZSmOne_03_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,25,0x0aec,ZSmOne_03_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,25,0x0aec,ZSmOne_03_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,26,0x0aee,ZSmOne_03_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,26,0x0aee,ZSmOne_03_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,26,0x0aee,ZSmOne_03_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,26,0x0aee,ZSmOne_03_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,27,0x0af0,ZSmOne_03_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,27,0x0af0,ZSmOne_03_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,27,0x0af0,ZSmOne_03_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,27,0x0af0,ZSmOne_03_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,28,0x0af2,ZSmOne_03_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,28,0x0af2,ZSmOne_03_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,28,0x0af2,ZSmOne_03_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,28,0x0af2,ZSmOne_03_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,29,0x0af4,ZSmOne_03_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,29,0x0af4,ZSmOne_03_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,29,0x0af4,ZSmOne_03_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,29,0x0af4,ZSmOne_03_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,30,0x0af6,ZSmOne_03_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,30,0x0af6,ZSmOne_03_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,30,0x0af6,ZSmOne_03_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,30,0x0af6,ZSmOne_03_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,31,0x0af8,ZSmOne_03_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,31,0x0af8,ZSmOne_03_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,31,0x0af8,ZSmOne_03_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,31,0x0af8,ZSmOne_03_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,32,0x0afa,ZSmOne_03_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,32,0x0afa,ZSmOne_03_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,32,0x0afa,ZSmOne_03_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,32,0x0afa,ZSmOne_03_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,33,0x0afc,ZSmOne_03_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,33,0x0afc,ZSmOne_03_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,33,0x0afc,ZSmOne_03_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,33,0x0afc,ZSmOne_03_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,34,0x0afe,ZSmOne_03_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,34,0x0afe,ZSmOne_03_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,34,0x0afe,ZSmOne_03_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,34,0x0afe,ZSmOne_03_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,35,0x0b00,ZSmOne_03_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,35,0x0b00,ZSmOne_03_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,35,0x0b00,ZSmOne_03_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,35,0x0b00,ZSmOne_03_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,03,zs_c_i_m,36,0x0b02,ZSmOne_03_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,03,zs_beta_m,36,0x0b02,ZSmOne_03_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,03,zs_pass_i_m,36,0x0b02,ZSmOne_03_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,03,zs_mask_i_m,36,0x0b02,ZSmOne_03_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,00,0x0b04,ZSmOne_04_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,00,0x0b04,ZSmOne_04_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,00,0x0b04,ZSmOne_04_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,00,0x0b04,ZSmOne_04_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,01,0x0b06,ZSmOne_04_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,01,0x0b06,ZSmOne_04_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,01,0x0b06,ZSmOne_04_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,01,0x0b06,ZSmOne_04_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,02,0x0b08,ZSmOne_04_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,02,0x0b08,ZSmOne_04_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,02,0x0b08,ZSmOne_04_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,02,0x0b08,ZSmOne_04_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,03,0x0b0a,ZSmOne_04_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,03,0x0b0a,ZSmOne_04_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,03,0x0b0a,ZSmOne_04_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,03,0x0b0a,ZSmOne_04_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,04,0x0b0c,ZSmOne_04_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,04,0x0b0c,ZSmOne_04_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,04,0x0b0c,ZSmOne_04_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,04,0x0b0c,ZSmOne_04_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,05,0x0b0e,ZSmOne_04_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,05,0x0b0e,ZSmOne_04_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,05,0x0b0e,ZSmOne_04_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,05,0x0b0e,ZSmOne_04_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,06,0x0b10,ZSmOne_04_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,06,0x0b10,ZSmOne_04_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,06,0x0b10,ZSmOne_04_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,06,0x0b10,ZSmOne_04_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,07,0x0b12,ZSmOne_04_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,07,0x0b12,ZSmOne_04_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,07,0x0b12,ZSmOne_04_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,07,0x0b12,ZSmOne_04_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,08,0x0b14,ZSmOne_04_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,08,0x0b14,ZSmOne_04_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,08,0x0b14,ZSmOne_04_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,08,0x0b14,ZSmOne_04_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,09,0x0b16,ZSmOne_04_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,09,0x0b16,ZSmOne_04_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,09,0x0b16,ZSmOne_04_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,09,0x0b16,ZSmOne_04_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,10,0x0b18,ZSmOne_04_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,10,0x0b18,ZSmOne_04_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,10,0x0b18,ZSmOne_04_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,10,0x0b18,ZSmOne_04_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,11,0x0b1a,ZSmOne_04_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,11,0x0b1a,ZSmOne_04_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,11,0x0b1a,ZSmOne_04_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,11,0x0b1a,ZSmOne_04_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,12,0x0b1c,ZSmOne_04_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,12,0x0b1c,ZSmOne_04_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,12,0x0b1c,ZSmOne_04_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,12,0x0b1c,ZSmOne_04_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,13,0x0b1e,ZSmOne_04_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,13,0x0b1e,ZSmOne_04_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,13,0x0b1e,ZSmOne_04_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,13,0x0b1e,ZSmOne_04_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,14,0x0b20,ZSmOne_04_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,14,0x0b20,ZSmOne_04_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,14,0x0b20,ZSmOne_04_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,14,0x0b20,ZSmOne_04_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,15,0x0b22,ZSmOne_04_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,15,0x0b22,ZSmOne_04_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,15,0x0b22,ZSmOne_04_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,15,0x0b22,ZSmOne_04_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,16,0x0b24,ZSmOne_04_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,16,0x0b24,ZSmOne_04_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,16,0x0b24,ZSmOne_04_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,16,0x0b24,ZSmOne_04_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,17,0x0b26,ZSmOne_04_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,17,0x0b26,ZSmOne_04_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,17,0x0b26,ZSmOne_04_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,17,0x0b26,ZSmOne_04_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,18,0x0b28,ZSmOne_04_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,18,0x0b28,ZSmOne_04_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,18,0x0b28,ZSmOne_04_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,18,0x0b28,ZSmOne_04_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,19,0x0b2a,ZSmOne_04_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,19,0x0b2a,ZSmOne_04_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,19,0x0b2a,ZSmOne_04_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,19,0x0b2a,ZSmOne_04_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,20,0x0b2c,ZSmOne_04_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,20,0x0b2c,ZSmOne_04_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,20,0x0b2c,ZSmOne_04_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,20,0x0b2c,ZSmOne_04_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,21,0x0b2e,ZSmOne_04_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,21,0x0b2e,ZSmOne_04_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,21,0x0b2e,ZSmOne_04_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,21,0x0b2e,ZSmOne_04_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,22,0x0b30,ZSmOne_04_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,22,0x0b30,ZSmOne_04_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,22,0x0b30,ZSmOne_04_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,22,0x0b30,ZSmOne_04_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,23,0x0b32,ZSmOne_04_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,23,0x0b32,ZSmOne_04_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,23,0x0b32,ZSmOne_04_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,23,0x0b32,ZSmOne_04_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,24,0x0b34,ZSmOne_04_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,24,0x0b34,ZSmOne_04_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,24,0x0b34,ZSmOne_04_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,24,0x0b34,ZSmOne_04_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,25,0x0b36,ZSmOne_04_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,25,0x0b36,ZSmOne_04_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,25,0x0b36,ZSmOne_04_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,25,0x0b36,ZSmOne_04_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,26,0x0b38,ZSmOne_04_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,26,0x0b38,ZSmOne_04_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,26,0x0b38,ZSmOne_04_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,26,0x0b38,ZSmOne_04_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,27,0x0b3a,ZSmOne_04_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,27,0x0b3a,ZSmOne_04_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,27,0x0b3a,ZSmOne_04_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,27,0x0b3a,ZSmOne_04_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,28,0x0b3c,ZSmOne_04_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,28,0x0b3c,ZSmOne_04_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,28,0x0b3c,ZSmOne_04_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,28,0x0b3c,ZSmOne_04_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,29,0x0b3e,ZSmOne_04_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,29,0x0b3e,ZSmOne_04_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,29,0x0b3e,ZSmOne_04_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,29,0x0b3e,ZSmOne_04_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,30,0x0b40,ZSmOne_04_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,30,0x0b40,ZSmOne_04_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,30,0x0b40,ZSmOne_04_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,30,0x0b40,ZSmOne_04_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,31,0x0b42,ZSmOne_04_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,31,0x0b42,ZSmOne_04_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,31,0x0b42,ZSmOne_04_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,31,0x0b42,ZSmOne_04_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,32,0x0b44,ZSmOne_04_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,32,0x0b44,ZSmOne_04_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,32,0x0b44,ZSmOne_04_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,32,0x0b44,ZSmOne_04_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,33,0x0b46,ZSmOne_04_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,33,0x0b46,ZSmOne_04_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,33,0x0b46,ZSmOne_04_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,33,0x0b46,ZSmOne_04_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,34,0x0b48,ZSmOne_04_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,34,0x0b48,ZSmOne_04_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,34,0x0b48,ZSmOne_04_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,34,0x0b48,ZSmOne_04_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,35,0x0b4a,ZSmOne_04_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,35,0x0b4a,ZSmOne_04_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,35,0x0b4a,ZSmOne_04_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,35,0x0b4a,ZSmOne_04_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,04,zs_c_i_m,36,0x0b4c,ZSmOne_04_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,04,zs_beta_m,36,0x0b4c,ZSmOne_04_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,04,zs_pass_i_m,36,0x0b4c,ZSmOne_04_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,04,zs_mask_i_m,36,0x0b4c,ZSmOne_04_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,00,0x0b4e,ZSmOne_05_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,00,0x0b4e,ZSmOne_05_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,00,0x0b4e,ZSmOne_05_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,00,0x0b4e,ZSmOne_05_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,01,0x0b50,ZSmOne_05_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,01,0x0b50,ZSmOne_05_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,01,0x0b50,ZSmOne_05_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,01,0x0b50,ZSmOne_05_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,02,0x0b52,ZSmOne_05_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,02,0x0b52,ZSmOne_05_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,02,0x0b52,ZSmOne_05_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,02,0x0b52,ZSmOne_05_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,03,0x0b54,ZSmOne_05_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,03,0x0b54,ZSmOne_05_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,03,0x0b54,ZSmOne_05_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,03,0x0b54,ZSmOne_05_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,04,0x0b56,ZSmOne_05_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,04,0x0b56,ZSmOne_05_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,04,0x0b56,ZSmOne_05_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,04,0x0b56,ZSmOne_05_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,05,0x0b58,ZSmOne_05_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,05,0x0b58,ZSmOne_05_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,05,0x0b58,ZSmOne_05_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,05,0x0b58,ZSmOne_05_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,06,0x0b5a,ZSmOne_05_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,06,0x0b5a,ZSmOne_05_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,06,0x0b5a,ZSmOne_05_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,06,0x0b5a,ZSmOne_05_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,07,0x0b5c,ZSmOne_05_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,07,0x0b5c,ZSmOne_05_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,07,0x0b5c,ZSmOne_05_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,07,0x0b5c,ZSmOne_05_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,08,0x0b5e,ZSmOne_05_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,08,0x0b5e,ZSmOne_05_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,08,0x0b5e,ZSmOne_05_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,08,0x0b5e,ZSmOne_05_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,09,0x0b60,ZSmOne_05_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,09,0x0b60,ZSmOne_05_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,09,0x0b60,ZSmOne_05_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,09,0x0b60,ZSmOne_05_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,10,0x0b62,ZSmOne_05_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,10,0x0b62,ZSmOne_05_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,10,0x0b62,ZSmOne_05_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,10,0x0b62,ZSmOne_05_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,11,0x0b64,ZSmOne_05_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,11,0x0b64,ZSmOne_05_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,11,0x0b64,ZSmOne_05_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,11,0x0b64,ZSmOne_05_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,12,0x0b66,ZSmOne_05_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,12,0x0b66,ZSmOne_05_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,12,0x0b66,ZSmOne_05_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,12,0x0b66,ZSmOne_05_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,13,0x0b68,ZSmOne_05_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,13,0x0b68,ZSmOne_05_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,13,0x0b68,ZSmOne_05_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,13,0x0b68,ZSmOne_05_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,14,0x0b6a,ZSmOne_05_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,14,0x0b6a,ZSmOne_05_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,14,0x0b6a,ZSmOne_05_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,14,0x0b6a,ZSmOne_05_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,15,0x0b6c,ZSmOne_05_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,15,0x0b6c,ZSmOne_05_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,15,0x0b6c,ZSmOne_05_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,15,0x0b6c,ZSmOne_05_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,16,0x0b6e,ZSmOne_05_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,16,0x0b6e,ZSmOne_05_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,16,0x0b6e,ZSmOne_05_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,16,0x0b6e,ZSmOne_05_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,17,0x0b70,ZSmOne_05_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,17,0x0b70,ZSmOne_05_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,17,0x0b70,ZSmOne_05_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,17,0x0b70,ZSmOne_05_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,18,0x0b72,ZSmOne_05_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,18,0x0b72,ZSmOne_05_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,18,0x0b72,ZSmOne_05_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,18,0x0b72,ZSmOne_05_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,19,0x0b74,ZSmOne_05_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,19,0x0b74,ZSmOne_05_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,19,0x0b74,ZSmOne_05_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,19,0x0b74,ZSmOne_05_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,20,0x0b76,ZSmOne_05_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,20,0x0b76,ZSmOne_05_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,20,0x0b76,ZSmOne_05_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,20,0x0b76,ZSmOne_05_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,21,0x0b78,ZSmOne_05_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,21,0x0b78,ZSmOne_05_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,21,0x0b78,ZSmOne_05_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,21,0x0b78,ZSmOne_05_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,22,0x0b7a,ZSmOne_05_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,22,0x0b7a,ZSmOne_05_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,22,0x0b7a,ZSmOne_05_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,22,0x0b7a,ZSmOne_05_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,23,0x0b7c,ZSmOne_05_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,23,0x0b7c,ZSmOne_05_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,23,0x0b7c,ZSmOne_05_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,23,0x0b7c,ZSmOne_05_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,24,0x0b7e,ZSmOne_05_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,24,0x0b7e,ZSmOne_05_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,24,0x0b7e,ZSmOne_05_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,24,0x0b7e,ZSmOne_05_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,25,0x0b80,ZSmOne_05_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,25,0x0b80,ZSmOne_05_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,25,0x0b80,ZSmOne_05_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,25,0x0b80,ZSmOne_05_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,26,0x0b82,ZSmOne_05_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,26,0x0b82,ZSmOne_05_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,26,0x0b82,ZSmOne_05_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,26,0x0b82,ZSmOne_05_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,27,0x0b84,ZSmOne_05_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,27,0x0b84,ZSmOne_05_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,27,0x0b84,ZSmOne_05_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,27,0x0b84,ZSmOne_05_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,28,0x0b86,ZSmOne_05_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,28,0x0b86,ZSmOne_05_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,28,0x0b86,ZSmOne_05_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,28,0x0b86,ZSmOne_05_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,29,0x0b88,ZSmOne_05_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,29,0x0b88,ZSmOne_05_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,29,0x0b88,ZSmOne_05_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,29,0x0b88,ZSmOne_05_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,30,0x0b8a,ZSmOne_05_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,30,0x0b8a,ZSmOne_05_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,30,0x0b8a,ZSmOne_05_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,30,0x0b8a,ZSmOne_05_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,31,0x0b8c,ZSmOne_05_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,31,0x0b8c,ZSmOne_05_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,31,0x0b8c,ZSmOne_05_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,31,0x0b8c,ZSmOne_05_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,32,0x0b8e,ZSmOne_05_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,32,0x0b8e,ZSmOne_05_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,32,0x0b8e,ZSmOne_05_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,32,0x0b8e,ZSmOne_05_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,33,0x0b90,ZSmOne_05_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,33,0x0b90,ZSmOne_05_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,33,0x0b90,ZSmOne_05_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,33,0x0b90,ZSmOne_05_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,34,0x0b92,ZSmOne_05_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,34,0x0b92,ZSmOne_05_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,34,0x0b92,ZSmOne_05_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,34,0x0b92,ZSmOne_05_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,35,0x0b94,ZSmOne_05_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,35,0x0b94,ZSmOne_05_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,35,0x0b94,ZSmOne_05_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,35,0x0b94,ZSmOne_05_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,05,zs_c_i_m,36,0x0b96,ZSmOne_05_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,05,zs_beta_m,36,0x0b96,ZSmOne_05_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,05,zs_pass_i_m,36,0x0b96,ZSmOne_05_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,05,zs_mask_i_m,36,0x0b96,ZSmOne_05_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,00,0x0b98,ZSmOne_06_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,00,0x0b98,ZSmOne_06_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,00,0x0b98,ZSmOne_06_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,00,0x0b98,ZSmOne_06_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,01,0x0b9a,ZSmOne_06_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,01,0x0b9a,ZSmOne_06_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,01,0x0b9a,ZSmOne_06_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,01,0x0b9a,ZSmOne_06_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,02,0x0b9c,ZSmOne_06_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,02,0x0b9c,ZSmOne_06_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,02,0x0b9c,ZSmOne_06_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,02,0x0b9c,ZSmOne_06_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,03,0x0b9e,ZSmOne_06_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,03,0x0b9e,ZSmOne_06_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,03,0x0b9e,ZSmOne_06_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,03,0x0b9e,ZSmOne_06_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,04,0x0ba0,ZSmOne_06_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,04,0x0ba0,ZSmOne_06_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,04,0x0ba0,ZSmOne_06_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,04,0x0ba0,ZSmOne_06_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,05,0x0ba2,ZSmOne_06_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,05,0x0ba2,ZSmOne_06_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,05,0x0ba2,ZSmOne_06_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,05,0x0ba2,ZSmOne_06_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,06,0x0ba4,ZSmOne_06_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,06,0x0ba4,ZSmOne_06_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,06,0x0ba4,ZSmOne_06_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,06,0x0ba4,ZSmOne_06_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,07,0x0ba6,ZSmOne_06_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,07,0x0ba6,ZSmOne_06_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,07,0x0ba6,ZSmOne_06_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,07,0x0ba6,ZSmOne_06_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,08,0x0ba8,ZSmOne_06_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,08,0x0ba8,ZSmOne_06_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,08,0x0ba8,ZSmOne_06_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,08,0x0ba8,ZSmOne_06_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,09,0x0baa,ZSmOne_06_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,09,0x0baa,ZSmOne_06_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,09,0x0baa,ZSmOne_06_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,09,0x0baa,ZSmOne_06_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,10,0x0bac,ZSmOne_06_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,10,0x0bac,ZSmOne_06_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,10,0x0bac,ZSmOne_06_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,10,0x0bac,ZSmOne_06_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,11,0x0bae,ZSmOne_06_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,11,0x0bae,ZSmOne_06_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,11,0x0bae,ZSmOne_06_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,11,0x0bae,ZSmOne_06_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,12,0x0bb0,ZSmOne_06_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,12,0x0bb0,ZSmOne_06_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,12,0x0bb0,ZSmOne_06_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,12,0x0bb0,ZSmOne_06_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,13,0x0bb2,ZSmOne_06_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,13,0x0bb2,ZSmOne_06_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,13,0x0bb2,ZSmOne_06_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,13,0x0bb2,ZSmOne_06_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,14,0x0bb4,ZSmOne_06_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,14,0x0bb4,ZSmOne_06_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,14,0x0bb4,ZSmOne_06_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,14,0x0bb4,ZSmOne_06_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,15,0x0bb6,ZSmOne_06_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,15,0x0bb6,ZSmOne_06_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,15,0x0bb6,ZSmOne_06_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,15,0x0bb6,ZSmOne_06_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,16,0x0bb8,ZSmOne_06_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,16,0x0bb8,ZSmOne_06_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,16,0x0bb8,ZSmOne_06_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,16,0x0bb8,ZSmOne_06_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,17,0x0bba,ZSmOne_06_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,17,0x0bba,ZSmOne_06_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,17,0x0bba,ZSmOne_06_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,17,0x0bba,ZSmOne_06_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,18,0x0bbc,ZSmOne_06_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,18,0x0bbc,ZSmOne_06_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,18,0x0bbc,ZSmOne_06_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,18,0x0bbc,ZSmOne_06_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,19,0x0bbe,ZSmOne_06_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,19,0x0bbe,ZSmOne_06_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,19,0x0bbe,ZSmOne_06_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,19,0x0bbe,ZSmOne_06_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,20,0x0bc0,ZSmOne_06_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,20,0x0bc0,ZSmOne_06_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,20,0x0bc0,ZSmOne_06_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,20,0x0bc0,ZSmOne_06_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,21,0x0bc2,ZSmOne_06_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,21,0x0bc2,ZSmOne_06_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,21,0x0bc2,ZSmOne_06_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,21,0x0bc2,ZSmOne_06_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,22,0x0bc4,ZSmOne_06_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,22,0x0bc4,ZSmOne_06_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,22,0x0bc4,ZSmOne_06_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,22,0x0bc4,ZSmOne_06_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,23,0x0bc6,ZSmOne_06_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,23,0x0bc6,ZSmOne_06_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,23,0x0bc6,ZSmOne_06_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,23,0x0bc6,ZSmOne_06_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,24,0x0bc8,ZSmOne_06_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,24,0x0bc8,ZSmOne_06_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,24,0x0bc8,ZSmOne_06_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,24,0x0bc8,ZSmOne_06_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,25,0x0bca,ZSmOne_06_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,25,0x0bca,ZSmOne_06_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,25,0x0bca,ZSmOne_06_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,25,0x0bca,ZSmOne_06_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,26,0x0bcc,ZSmOne_06_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,26,0x0bcc,ZSmOne_06_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,26,0x0bcc,ZSmOne_06_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,26,0x0bcc,ZSmOne_06_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,27,0x0bce,ZSmOne_06_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,27,0x0bce,ZSmOne_06_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,27,0x0bce,ZSmOne_06_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,27,0x0bce,ZSmOne_06_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,28,0x0bd0,ZSmOne_06_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,28,0x0bd0,ZSmOne_06_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,28,0x0bd0,ZSmOne_06_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,28,0x0bd0,ZSmOne_06_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,29,0x0bd2,ZSmOne_06_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,29,0x0bd2,ZSmOne_06_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,29,0x0bd2,ZSmOne_06_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,29,0x0bd2,ZSmOne_06_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,30,0x0bd4,ZSmOne_06_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,30,0x0bd4,ZSmOne_06_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,30,0x0bd4,ZSmOne_06_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,30,0x0bd4,ZSmOne_06_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,31,0x0bd6,ZSmOne_06_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,31,0x0bd6,ZSmOne_06_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,31,0x0bd6,ZSmOne_06_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,31,0x0bd6,ZSmOne_06_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,32,0x0bd8,ZSmOne_06_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,32,0x0bd8,ZSmOne_06_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,32,0x0bd8,ZSmOne_06_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,32,0x0bd8,ZSmOne_06_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,33,0x0bda,ZSmOne_06_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,33,0x0bda,ZSmOne_06_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,33,0x0bda,ZSmOne_06_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,33,0x0bda,ZSmOne_06_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,34,0x0bdc,ZSmOne_06_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,34,0x0bdc,ZSmOne_06_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,34,0x0bdc,ZSmOne_06_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,34,0x0bdc,ZSmOne_06_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,35,0x0bde,ZSmOne_06_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,35,0x0bde,ZSmOne_06_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,35,0x0bde,ZSmOne_06_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,35,0x0bde,ZSmOne_06_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,06,zs_c_i_m,36,0x0be0,ZSmOne_06_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,06,zs_beta_m,36,0x0be0,ZSmOne_06_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,06,zs_pass_i_m,36,0x0be0,ZSmOne_06_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,06,zs_mask_i_m,36,0x0be0,ZSmOne_06_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,00,0x0be2,ZSmOne_07_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,00,0x0be2,ZSmOne_07_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,00,0x0be2,ZSmOne_07_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,00,0x0be2,ZSmOne_07_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,01,0x0be4,ZSmOne_07_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,01,0x0be4,ZSmOne_07_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,01,0x0be4,ZSmOne_07_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,01,0x0be4,ZSmOne_07_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,02,0x0be6,ZSmOne_07_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,02,0x0be6,ZSmOne_07_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,02,0x0be6,ZSmOne_07_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,02,0x0be6,ZSmOne_07_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,03,0x0be8,ZSmOne_07_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,03,0x0be8,ZSmOne_07_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,03,0x0be8,ZSmOne_07_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,03,0x0be8,ZSmOne_07_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,04,0x0bea,ZSmOne_07_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,04,0x0bea,ZSmOne_07_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,04,0x0bea,ZSmOne_07_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,04,0x0bea,ZSmOne_07_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,05,0x0bec,ZSmOne_07_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,05,0x0bec,ZSmOne_07_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,05,0x0bec,ZSmOne_07_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,05,0x0bec,ZSmOne_07_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,06,0x0bee,ZSmOne_07_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,06,0x0bee,ZSmOne_07_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,06,0x0bee,ZSmOne_07_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,06,0x0bee,ZSmOne_07_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,07,0x0bf0,ZSmOne_07_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,07,0x0bf0,ZSmOne_07_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,07,0x0bf0,ZSmOne_07_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,07,0x0bf0,ZSmOne_07_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,08,0x0bf2,ZSmOne_07_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,08,0x0bf2,ZSmOne_07_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,08,0x0bf2,ZSmOne_07_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,08,0x0bf2,ZSmOne_07_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,09,0x0bf4,ZSmOne_07_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,09,0x0bf4,ZSmOne_07_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,09,0x0bf4,ZSmOne_07_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,09,0x0bf4,ZSmOne_07_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,10,0x0bf6,ZSmOne_07_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,10,0x0bf6,ZSmOne_07_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,10,0x0bf6,ZSmOne_07_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,10,0x0bf6,ZSmOne_07_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,11,0x0bf8,ZSmOne_07_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,11,0x0bf8,ZSmOne_07_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,11,0x0bf8,ZSmOne_07_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,11,0x0bf8,ZSmOne_07_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,12,0x0bfa,ZSmOne_07_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,12,0x0bfa,ZSmOne_07_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,12,0x0bfa,ZSmOne_07_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,12,0x0bfa,ZSmOne_07_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,13,0x0bfc,ZSmOne_07_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,13,0x0bfc,ZSmOne_07_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,13,0x0bfc,ZSmOne_07_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,13,0x0bfc,ZSmOne_07_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,14,0x0bfe,ZSmOne_07_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,14,0x0bfe,ZSmOne_07_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,14,0x0bfe,ZSmOne_07_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,14,0x0bfe,ZSmOne_07_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,15,0x0c00,ZSmOne_07_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,15,0x0c00,ZSmOne_07_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,15,0x0c00,ZSmOne_07_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,15,0x0c00,ZSmOne_07_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,16,0x0c02,ZSmOne_07_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,16,0x0c02,ZSmOne_07_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,16,0x0c02,ZSmOne_07_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,16,0x0c02,ZSmOne_07_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,17,0x0c04,ZSmOne_07_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,17,0x0c04,ZSmOne_07_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,17,0x0c04,ZSmOne_07_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,17,0x0c04,ZSmOne_07_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,18,0x0c06,ZSmOne_07_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,18,0x0c06,ZSmOne_07_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,18,0x0c06,ZSmOne_07_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,18,0x0c06,ZSmOne_07_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,19,0x0c08,ZSmOne_07_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,19,0x0c08,ZSmOne_07_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,19,0x0c08,ZSmOne_07_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,19,0x0c08,ZSmOne_07_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,20,0x0c0a,ZSmOne_07_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,20,0x0c0a,ZSmOne_07_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,20,0x0c0a,ZSmOne_07_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,20,0x0c0a,ZSmOne_07_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,21,0x0c0c,ZSmOne_07_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,21,0x0c0c,ZSmOne_07_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,21,0x0c0c,ZSmOne_07_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,21,0x0c0c,ZSmOne_07_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,22,0x0c0e,ZSmOne_07_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,22,0x0c0e,ZSmOne_07_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,22,0x0c0e,ZSmOne_07_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,22,0x0c0e,ZSmOne_07_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,23,0x0c10,ZSmOne_07_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,23,0x0c10,ZSmOne_07_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,23,0x0c10,ZSmOne_07_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,23,0x0c10,ZSmOne_07_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,24,0x0c12,ZSmOne_07_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,24,0x0c12,ZSmOne_07_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,24,0x0c12,ZSmOne_07_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,24,0x0c12,ZSmOne_07_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,25,0x0c14,ZSmOne_07_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,25,0x0c14,ZSmOne_07_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,25,0x0c14,ZSmOne_07_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,25,0x0c14,ZSmOne_07_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,26,0x0c16,ZSmOne_07_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,26,0x0c16,ZSmOne_07_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,26,0x0c16,ZSmOne_07_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,26,0x0c16,ZSmOne_07_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,27,0x0c18,ZSmOne_07_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,27,0x0c18,ZSmOne_07_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,27,0x0c18,ZSmOne_07_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,27,0x0c18,ZSmOne_07_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,28,0x0c1a,ZSmOne_07_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,28,0x0c1a,ZSmOne_07_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,28,0x0c1a,ZSmOne_07_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,28,0x0c1a,ZSmOne_07_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,29,0x0c1c,ZSmOne_07_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,29,0x0c1c,ZSmOne_07_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,29,0x0c1c,ZSmOne_07_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,29,0x0c1c,ZSmOne_07_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,30,0x0c1e,ZSmOne_07_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,30,0x0c1e,ZSmOne_07_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,30,0x0c1e,ZSmOne_07_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,30,0x0c1e,ZSmOne_07_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,31,0x0c20,ZSmOne_07_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,31,0x0c20,ZSmOne_07_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,31,0x0c20,ZSmOne_07_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,31,0x0c20,ZSmOne_07_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,32,0x0c22,ZSmOne_07_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,32,0x0c22,ZSmOne_07_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,32,0x0c22,ZSmOne_07_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,32,0x0c22,ZSmOne_07_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,33,0x0c24,ZSmOne_07_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,33,0x0c24,ZSmOne_07_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,33,0x0c24,ZSmOne_07_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,33,0x0c24,ZSmOne_07_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,34,0x0c26,ZSmOne_07_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,34,0x0c26,ZSmOne_07_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,34,0x0c26,ZSmOne_07_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,34,0x0c26,ZSmOne_07_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,35,0x0c28,ZSmOne_07_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,35,0x0c28,ZSmOne_07_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,35,0x0c28,ZSmOne_07_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,35,0x0c28,ZSmOne_07_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,07,zs_c_i_m,36,0x0c2a,ZSmOne_07_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,07,zs_beta_m,36,0x0c2a,ZSmOne_07_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,07,zs_pass_i_m,36,0x0c2a,ZSmOne_07_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,07,zs_mask_i_m,36,0x0c2a,ZSmOne_07_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,00,0x0c2c,ZSmOne_08_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,00,0x0c2c,ZSmOne_08_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,00,0x0c2c,ZSmOne_08_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,00,0x0c2c,ZSmOne_08_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,01,0x0c2e,ZSmOne_08_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,01,0x0c2e,ZSmOne_08_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,01,0x0c2e,ZSmOne_08_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,01,0x0c2e,ZSmOne_08_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,02,0x0c30,ZSmOne_08_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,02,0x0c30,ZSmOne_08_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,02,0x0c30,ZSmOne_08_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,02,0x0c30,ZSmOne_08_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,03,0x0c32,ZSmOne_08_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,03,0x0c32,ZSmOne_08_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,03,0x0c32,ZSmOne_08_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,03,0x0c32,ZSmOne_08_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,04,0x0c34,ZSmOne_08_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,04,0x0c34,ZSmOne_08_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,04,0x0c34,ZSmOne_08_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,04,0x0c34,ZSmOne_08_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,05,0x0c36,ZSmOne_08_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,05,0x0c36,ZSmOne_08_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,05,0x0c36,ZSmOne_08_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,05,0x0c36,ZSmOne_08_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,06,0x0c38,ZSmOne_08_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,06,0x0c38,ZSmOne_08_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,06,0x0c38,ZSmOne_08_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,06,0x0c38,ZSmOne_08_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,07,0x0c3a,ZSmOne_08_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,07,0x0c3a,ZSmOne_08_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,07,0x0c3a,ZSmOne_08_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,07,0x0c3a,ZSmOne_08_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,08,0x0c3c,ZSmOne_08_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,08,0x0c3c,ZSmOne_08_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,08,0x0c3c,ZSmOne_08_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,08,0x0c3c,ZSmOne_08_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,09,0x0c3e,ZSmOne_08_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,09,0x0c3e,ZSmOne_08_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,09,0x0c3e,ZSmOne_08_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,09,0x0c3e,ZSmOne_08_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,10,0x0c40,ZSmOne_08_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,10,0x0c40,ZSmOne_08_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,10,0x0c40,ZSmOne_08_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,10,0x0c40,ZSmOne_08_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,11,0x0c42,ZSmOne_08_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,11,0x0c42,ZSmOne_08_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,11,0x0c42,ZSmOne_08_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,11,0x0c42,ZSmOne_08_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,12,0x0c44,ZSmOne_08_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,12,0x0c44,ZSmOne_08_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,12,0x0c44,ZSmOne_08_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,12,0x0c44,ZSmOne_08_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,13,0x0c46,ZSmOne_08_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,13,0x0c46,ZSmOne_08_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,13,0x0c46,ZSmOne_08_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,13,0x0c46,ZSmOne_08_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,14,0x0c48,ZSmOne_08_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,14,0x0c48,ZSmOne_08_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,14,0x0c48,ZSmOne_08_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,14,0x0c48,ZSmOne_08_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,15,0x0c4a,ZSmOne_08_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,15,0x0c4a,ZSmOne_08_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,15,0x0c4a,ZSmOne_08_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,15,0x0c4a,ZSmOne_08_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,16,0x0c4c,ZSmOne_08_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,16,0x0c4c,ZSmOne_08_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,16,0x0c4c,ZSmOne_08_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,16,0x0c4c,ZSmOne_08_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,17,0x0c4e,ZSmOne_08_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,17,0x0c4e,ZSmOne_08_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,17,0x0c4e,ZSmOne_08_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,17,0x0c4e,ZSmOne_08_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,18,0x0c50,ZSmOne_08_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,18,0x0c50,ZSmOne_08_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,18,0x0c50,ZSmOne_08_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,18,0x0c50,ZSmOne_08_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,19,0x0c52,ZSmOne_08_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,19,0x0c52,ZSmOne_08_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,19,0x0c52,ZSmOne_08_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,19,0x0c52,ZSmOne_08_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,20,0x0c54,ZSmOne_08_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,20,0x0c54,ZSmOne_08_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,20,0x0c54,ZSmOne_08_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,20,0x0c54,ZSmOne_08_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,21,0x0c56,ZSmOne_08_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,21,0x0c56,ZSmOne_08_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,21,0x0c56,ZSmOne_08_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,21,0x0c56,ZSmOne_08_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,22,0x0c58,ZSmOne_08_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,22,0x0c58,ZSmOne_08_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,22,0x0c58,ZSmOne_08_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,22,0x0c58,ZSmOne_08_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,23,0x0c5a,ZSmOne_08_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,23,0x0c5a,ZSmOne_08_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,23,0x0c5a,ZSmOne_08_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,23,0x0c5a,ZSmOne_08_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,24,0x0c5c,ZSmOne_08_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,24,0x0c5c,ZSmOne_08_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,24,0x0c5c,ZSmOne_08_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,24,0x0c5c,ZSmOne_08_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,25,0x0c5e,ZSmOne_08_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,25,0x0c5e,ZSmOne_08_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,25,0x0c5e,ZSmOne_08_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,25,0x0c5e,ZSmOne_08_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,26,0x0c60,ZSmOne_08_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,26,0x0c60,ZSmOne_08_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,26,0x0c60,ZSmOne_08_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,26,0x0c60,ZSmOne_08_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,27,0x0c62,ZSmOne_08_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,27,0x0c62,ZSmOne_08_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,27,0x0c62,ZSmOne_08_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,27,0x0c62,ZSmOne_08_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,28,0x0c64,ZSmOne_08_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,28,0x0c64,ZSmOne_08_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,28,0x0c64,ZSmOne_08_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,28,0x0c64,ZSmOne_08_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,29,0x0c66,ZSmOne_08_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,29,0x0c66,ZSmOne_08_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,29,0x0c66,ZSmOne_08_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,29,0x0c66,ZSmOne_08_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,30,0x0c68,ZSmOne_08_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,30,0x0c68,ZSmOne_08_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,30,0x0c68,ZSmOne_08_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,30,0x0c68,ZSmOne_08_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,31,0x0c6a,ZSmOne_08_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,31,0x0c6a,ZSmOne_08_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,31,0x0c6a,ZSmOne_08_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,31,0x0c6a,ZSmOne_08_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,32,0x0c6c,ZSmOne_08_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,32,0x0c6c,ZSmOne_08_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,32,0x0c6c,ZSmOne_08_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,32,0x0c6c,ZSmOne_08_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,33,0x0c6e,ZSmOne_08_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,33,0x0c6e,ZSmOne_08_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,33,0x0c6e,ZSmOne_08_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,33,0x0c6e,ZSmOne_08_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,34,0x0c70,ZSmOne_08_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,34,0x0c70,ZSmOne_08_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,34,0x0c70,ZSmOne_08_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,34,0x0c70,ZSmOne_08_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,35,0x0c72,ZSmOne_08_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,35,0x0c72,ZSmOne_08_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,35,0x0c72,ZSmOne_08_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,35,0x0c72,ZSmOne_08_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,08,zs_c_i_m,36,0x0c74,ZSmOne_08_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,08,zs_beta_m,36,0x0c74,ZSmOne_08_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,08,zs_pass_i_m,36,0x0c74,ZSmOne_08_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,08,zs_mask_i_m,36,0x0c74,ZSmOne_08_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,00,0x0c76,ZSmOne_09_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,00,0x0c76,ZSmOne_09_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,00,0x0c76,ZSmOne_09_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,00,0x0c76,ZSmOne_09_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,01,0x0c78,ZSmOne_09_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,01,0x0c78,ZSmOne_09_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,01,0x0c78,ZSmOne_09_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,01,0x0c78,ZSmOne_09_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,02,0x0c7a,ZSmOne_09_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,02,0x0c7a,ZSmOne_09_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,02,0x0c7a,ZSmOne_09_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,02,0x0c7a,ZSmOne_09_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,03,0x0c7c,ZSmOne_09_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,03,0x0c7c,ZSmOne_09_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,03,0x0c7c,ZSmOne_09_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,03,0x0c7c,ZSmOne_09_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,04,0x0c7e,ZSmOne_09_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,04,0x0c7e,ZSmOne_09_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,04,0x0c7e,ZSmOne_09_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,04,0x0c7e,ZSmOne_09_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,05,0x0c80,ZSmOne_09_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,05,0x0c80,ZSmOne_09_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,05,0x0c80,ZSmOne_09_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,05,0x0c80,ZSmOne_09_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,06,0x0c82,ZSmOne_09_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,06,0x0c82,ZSmOne_09_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,06,0x0c82,ZSmOne_09_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,06,0x0c82,ZSmOne_09_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,07,0x0c84,ZSmOne_09_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,07,0x0c84,ZSmOne_09_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,07,0x0c84,ZSmOne_09_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,07,0x0c84,ZSmOne_09_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,08,0x0c86,ZSmOne_09_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,08,0x0c86,ZSmOne_09_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,08,0x0c86,ZSmOne_09_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,08,0x0c86,ZSmOne_09_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,09,0x0c88,ZSmOne_09_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,09,0x0c88,ZSmOne_09_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,09,0x0c88,ZSmOne_09_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,09,0x0c88,ZSmOne_09_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,10,0x0c8a,ZSmOne_09_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,10,0x0c8a,ZSmOne_09_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,10,0x0c8a,ZSmOne_09_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,10,0x0c8a,ZSmOne_09_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,11,0x0c8c,ZSmOne_09_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,11,0x0c8c,ZSmOne_09_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,11,0x0c8c,ZSmOne_09_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,11,0x0c8c,ZSmOne_09_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,12,0x0c8e,ZSmOne_09_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,12,0x0c8e,ZSmOne_09_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,12,0x0c8e,ZSmOne_09_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,12,0x0c8e,ZSmOne_09_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,13,0x0c90,ZSmOne_09_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,13,0x0c90,ZSmOne_09_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,13,0x0c90,ZSmOne_09_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,13,0x0c90,ZSmOne_09_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,14,0x0c92,ZSmOne_09_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,14,0x0c92,ZSmOne_09_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,14,0x0c92,ZSmOne_09_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,14,0x0c92,ZSmOne_09_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,15,0x0c94,ZSmOne_09_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,15,0x0c94,ZSmOne_09_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,15,0x0c94,ZSmOne_09_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,15,0x0c94,ZSmOne_09_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,16,0x0c96,ZSmOne_09_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,16,0x0c96,ZSmOne_09_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,16,0x0c96,ZSmOne_09_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,16,0x0c96,ZSmOne_09_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,17,0x0c98,ZSmOne_09_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,17,0x0c98,ZSmOne_09_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,17,0x0c98,ZSmOne_09_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,17,0x0c98,ZSmOne_09_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,18,0x0c9a,ZSmOne_09_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,18,0x0c9a,ZSmOne_09_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,18,0x0c9a,ZSmOne_09_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,18,0x0c9a,ZSmOne_09_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,19,0x0c9c,ZSmOne_09_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,19,0x0c9c,ZSmOne_09_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,19,0x0c9c,ZSmOne_09_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,19,0x0c9c,ZSmOne_09_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,20,0x0c9e,ZSmOne_09_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,20,0x0c9e,ZSmOne_09_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,20,0x0c9e,ZSmOne_09_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,20,0x0c9e,ZSmOne_09_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,21,0x0ca0,ZSmOne_09_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,21,0x0ca0,ZSmOne_09_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,21,0x0ca0,ZSmOne_09_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,21,0x0ca0,ZSmOne_09_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,22,0x0ca2,ZSmOne_09_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,22,0x0ca2,ZSmOne_09_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,22,0x0ca2,ZSmOne_09_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,22,0x0ca2,ZSmOne_09_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,23,0x0ca4,ZSmOne_09_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,23,0x0ca4,ZSmOne_09_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,23,0x0ca4,ZSmOne_09_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,23,0x0ca4,ZSmOne_09_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,24,0x0ca6,ZSmOne_09_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,24,0x0ca6,ZSmOne_09_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,24,0x0ca6,ZSmOne_09_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,24,0x0ca6,ZSmOne_09_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,25,0x0ca8,ZSmOne_09_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,25,0x0ca8,ZSmOne_09_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,25,0x0ca8,ZSmOne_09_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,25,0x0ca8,ZSmOne_09_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,26,0x0caa,ZSmOne_09_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,26,0x0caa,ZSmOne_09_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,26,0x0caa,ZSmOne_09_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,26,0x0caa,ZSmOne_09_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,27,0x0cac,ZSmOne_09_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,27,0x0cac,ZSmOne_09_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,27,0x0cac,ZSmOne_09_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,27,0x0cac,ZSmOne_09_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,28,0x0cae,ZSmOne_09_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,28,0x0cae,ZSmOne_09_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,28,0x0cae,ZSmOne_09_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,28,0x0cae,ZSmOne_09_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,29,0x0cb0,ZSmOne_09_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,29,0x0cb0,ZSmOne_09_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,29,0x0cb0,ZSmOne_09_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,29,0x0cb0,ZSmOne_09_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,30,0x0cb2,ZSmOne_09_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,30,0x0cb2,ZSmOne_09_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,30,0x0cb2,ZSmOne_09_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,30,0x0cb2,ZSmOne_09_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,31,0x0cb4,ZSmOne_09_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,31,0x0cb4,ZSmOne_09_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,31,0x0cb4,ZSmOne_09_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,31,0x0cb4,ZSmOne_09_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,32,0x0cb6,ZSmOne_09_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,32,0x0cb6,ZSmOne_09_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,32,0x0cb6,ZSmOne_09_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,32,0x0cb6,ZSmOne_09_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,33,0x0cb8,ZSmOne_09_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,33,0x0cb8,ZSmOne_09_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,33,0x0cb8,ZSmOne_09_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,33,0x0cb8,ZSmOne_09_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,34,0x0cba,ZSmOne_09_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,34,0x0cba,ZSmOne_09_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,34,0x0cba,ZSmOne_09_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,34,0x0cba,ZSmOne_09_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,35,0x0cbc,ZSmOne_09_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,35,0x0cbc,ZSmOne_09_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,35,0x0cbc,ZSmOne_09_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,35,0x0cbc,ZSmOne_09_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,09,zs_c_i_m,36,0x0cbe,ZSmOne_09_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,09,zs_beta_m,36,0x0cbe,ZSmOne_09_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,09,zs_pass_i_m,36,0x0cbe,ZSmOne_09_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,09,zs_mask_i_m,36,0x0cbe,ZSmOne_09_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,00,0x0cc0,ZSmOne_10_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,00,0x0cc0,ZSmOne_10_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,00,0x0cc0,ZSmOne_10_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,00,0x0cc0,ZSmOne_10_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,01,0x0cc2,ZSmOne_10_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,01,0x0cc2,ZSmOne_10_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,01,0x0cc2,ZSmOne_10_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,01,0x0cc2,ZSmOne_10_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,02,0x0cc4,ZSmOne_10_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,02,0x0cc4,ZSmOne_10_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,02,0x0cc4,ZSmOne_10_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,02,0x0cc4,ZSmOne_10_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,03,0x0cc6,ZSmOne_10_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,03,0x0cc6,ZSmOne_10_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,03,0x0cc6,ZSmOne_10_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,03,0x0cc6,ZSmOne_10_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,04,0x0cc8,ZSmOne_10_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,04,0x0cc8,ZSmOne_10_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,04,0x0cc8,ZSmOne_10_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,04,0x0cc8,ZSmOne_10_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,05,0x0cca,ZSmOne_10_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,05,0x0cca,ZSmOne_10_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,05,0x0cca,ZSmOne_10_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,05,0x0cca,ZSmOne_10_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,06,0x0ccc,ZSmOne_10_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,06,0x0ccc,ZSmOne_10_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,06,0x0ccc,ZSmOne_10_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,06,0x0ccc,ZSmOne_10_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,07,0x0cce,ZSmOne_10_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,07,0x0cce,ZSmOne_10_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,07,0x0cce,ZSmOne_10_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,07,0x0cce,ZSmOne_10_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,08,0x0cd0,ZSmOne_10_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,08,0x0cd0,ZSmOne_10_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,08,0x0cd0,ZSmOne_10_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,08,0x0cd0,ZSmOne_10_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,09,0x0cd2,ZSmOne_10_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,09,0x0cd2,ZSmOne_10_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,09,0x0cd2,ZSmOne_10_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,09,0x0cd2,ZSmOne_10_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,10,0x0cd4,ZSmOne_10_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,10,0x0cd4,ZSmOne_10_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,10,0x0cd4,ZSmOne_10_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,10,0x0cd4,ZSmOne_10_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,11,0x0cd6,ZSmOne_10_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,11,0x0cd6,ZSmOne_10_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,11,0x0cd6,ZSmOne_10_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,11,0x0cd6,ZSmOne_10_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,12,0x0cd8,ZSmOne_10_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,12,0x0cd8,ZSmOne_10_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,12,0x0cd8,ZSmOne_10_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,12,0x0cd8,ZSmOne_10_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,13,0x0cda,ZSmOne_10_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,13,0x0cda,ZSmOne_10_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,13,0x0cda,ZSmOne_10_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,13,0x0cda,ZSmOne_10_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,14,0x0cdc,ZSmOne_10_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,14,0x0cdc,ZSmOne_10_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,14,0x0cdc,ZSmOne_10_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,14,0x0cdc,ZSmOne_10_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,15,0x0cde,ZSmOne_10_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,15,0x0cde,ZSmOne_10_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,15,0x0cde,ZSmOne_10_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,15,0x0cde,ZSmOne_10_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,16,0x0ce0,ZSmOne_10_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,16,0x0ce0,ZSmOne_10_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,16,0x0ce0,ZSmOne_10_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,16,0x0ce0,ZSmOne_10_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,17,0x0ce2,ZSmOne_10_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,17,0x0ce2,ZSmOne_10_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,17,0x0ce2,ZSmOne_10_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,17,0x0ce2,ZSmOne_10_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,18,0x0ce4,ZSmOne_10_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,18,0x0ce4,ZSmOne_10_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,18,0x0ce4,ZSmOne_10_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,18,0x0ce4,ZSmOne_10_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,19,0x0ce6,ZSmOne_10_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,19,0x0ce6,ZSmOne_10_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,19,0x0ce6,ZSmOne_10_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,19,0x0ce6,ZSmOne_10_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,20,0x0ce8,ZSmOne_10_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,20,0x0ce8,ZSmOne_10_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,20,0x0ce8,ZSmOne_10_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,20,0x0ce8,ZSmOne_10_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,21,0x0cea,ZSmOne_10_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,21,0x0cea,ZSmOne_10_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,21,0x0cea,ZSmOne_10_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,21,0x0cea,ZSmOne_10_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,22,0x0cec,ZSmOne_10_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,22,0x0cec,ZSmOne_10_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,22,0x0cec,ZSmOne_10_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,22,0x0cec,ZSmOne_10_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,23,0x0cee,ZSmOne_10_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,23,0x0cee,ZSmOne_10_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,23,0x0cee,ZSmOne_10_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,23,0x0cee,ZSmOne_10_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,24,0x0cf0,ZSmOne_10_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,24,0x0cf0,ZSmOne_10_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,24,0x0cf0,ZSmOne_10_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,24,0x0cf0,ZSmOne_10_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,25,0x0cf2,ZSmOne_10_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,25,0x0cf2,ZSmOne_10_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,25,0x0cf2,ZSmOne_10_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,25,0x0cf2,ZSmOne_10_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,26,0x0cf4,ZSmOne_10_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,26,0x0cf4,ZSmOne_10_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,26,0x0cf4,ZSmOne_10_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,26,0x0cf4,ZSmOne_10_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,27,0x0cf6,ZSmOne_10_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,27,0x0cf6,ZSmOne_10_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,27,0x0cf6,ZSmOne_10_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,27,0x0cf6,ZSmOne_10_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,28,0x0cf8,ZSmOne_10_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,28,0x0cf8,ZSmOne_10_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,28,0x0cf8,ZSmOne_10_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,28,0x0cf8,ZSmOne_10_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,29,0x0cfa,ZSmOne_10_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,29,0x0cfa,ZSmOne_10_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,29,0x0cfa,ZSmOne_10_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,29,0x0cfa,ZSmOne_10_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,30,0x0cfc,ZSmOne_10_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,30,0x0cfc,ZSmOne_10_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,30,0x0cfc,ZSmOne_10_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,30,0x0cfc,ZSmOne_10_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,31,0x0cfe,ZSmOne_10_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,31,0x0cfe,ZSmOne_10_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,31,0x0cfe,ZSmOne_10_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,31,0x0cfe,ZSmOne_10_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,32,0x0d00,ZSmOne_10_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,32,0x0d00,ZSmOne_10_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,32,0x0d00,ZSmOne_10_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,32,0x0d00,ZSmOne_10_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,33,0x0d02,ZSmOne_10_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,33,0x0d02,ZSmOne_10_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,33,0x0d02,ZSmOne_10_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,33,0x0d02,ZSmOne_10_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,34,0x0d04,ZSmOne_10_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,34,0x0d04,ZSmOne_10_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,34,0x0d04,ZSmOne_10_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,34,0x0d04,ZSmOne_10_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,35,0x0d06,ZSmOne_10_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,35,0x0d06,ZSmOne_10_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,35,0x0d06,ZSmOne_10_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,35,0x0d06,ZSmOne_10_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,10,zs_c_i_m,36,0x0d08,ZSmOne_10_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,10,zs_beta_m,36,0x0d08,ZSmOne_10_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,10,zs_pass_i_m,36,0x0d08,ZSmOne_10_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,10,zs_mask_i_m,36,0x0d08,ZSmOne_10_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,00,0x0d0a,ZSmOne_11_zs_c_i_m_00,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,00,0x0d0a,ZSmOne_11_zs_beta_m_00,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,00,0x0d0a,ZSmOne_11_zs_pass_i_m_00,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,00,0x0d0a,ZSmOne_11_zs_mask_i_m_00,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,01,0x0d0c,ZSmOne_11_zs_c_i_m_01,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,01,0x0d0c,ZSmOne_11_zs_beta_m_01,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,01,0x0d0c,ZSmOne_11_zs_pass_i_m_01,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,01,0x0d0c,ZSmOne_11_zs_mask_i_m_01,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,02,0x0d0e,ZSmOne_11_zs_c_i_m_02,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,02,0x0d0e,ZSmOne_11_zs_beta_m_02,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,02,0x0d0e,ZSmOne_11_zs_pass_i_m_02,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,02,0x0d0e,ZSmOne_11_zs_mask_i_m_02,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,03,0x0d10,ZSmOne_11_zs_c_i_m_03,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,03,0x0d10,ZSmOne_11_zs_beta_m_03,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,03,0x0d10,ZSmOne_11_zs_pass_i_m_03,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,03,0x0d10,ZSmOne_11_zs_mask_i_m_03,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,04,0x0d12,ZSmOne_11_zs_c_i_m_04,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,04,0x0d12,ZSmOne_11_zs_beta_m_04,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,04,0x0d12,ZSmOne_11_zs_pass_i_m_04,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,04,0x0d12,ZSmOne_11_zs_mask_i_m_04,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,05,0x0d14,ZSmOne_11_zs_c_i_m_05,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,05,0x0d14,ZSmOne_11_zs_beta_m_05,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,05,0x0d14,ZSmOne_11_zs_pass_i_m_05,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,05,0x0d14,ZSmOne_11_zs_mask_i_m_05,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,06,0x0d16,ZSmOne_11_zs_c_i_m_06,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,06,0x0d16,ZSmOne_11_zs_beta_m_06,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,06,0x0d16,ZSmOne_11_zs_pass_i_m_06,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,06,0x0d16,ZSmOne_11_zs_mask_i_m_06,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,07,0x0d18,ZSmOne_11_zs_c_i_m_07,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,07,0x0d18,ZSmOne_11_zs_beta_m_07,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,07,0x0d18,ZSmOne_11_zs_pass_i_m_07,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,07,0x0d18,ZSmOne_11_zs_mask_i_m_07,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,08,0x0d1a,ZSmOne_11_zs_c_i_m_08,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,08,0x0d1a,ZSmOne_11_zs_beta_m_08,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,08,0x0d1a,ZSmOne_11_zs_pass_i_m_08,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,08,0x0d1a,ZSmOne_11_zs_mask_i_m_08,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,09,0x0d1c,ZSmOne_11_zs_c_i_m_09,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,09,0x0d1c,ZSmOne_11_zs_beta_m_09,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,09,0x0d1c,ZSmOne_11_zs_pass_i_m_09,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,09,0x0d1c,ZSmOne_11_zs_mask_i_m_09,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,10,0x0d1e,ZSmOne_11_zs_c_i_m_10,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,10,0x0d1e,ZSmOne_11_zs_beta_m_10,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,10,0x0d1e,ZSmOne_11_zs_pass_i_m_10,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,10,0x0d1e,ZSmOne_11_zs_mask_i_m_10,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,11,0x0d20,ZSmOne_11_zs_c_i_m_11,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,11,0x0d20,ZSmOne_11_zs_beta_m_11,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,11,0x0d20,ZSmOne_11_zs_pass_i_m_11,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,11,0x0d20,ZSmOne_11_zs_mask_i_m_11,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,12,0x0d22,ZSmOne_11_zs_c_i_m_12,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,12,0x0d22,ZSmOne_11_zs_beta_m_12,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,12,0x0d22,ZSmOne_11_zs_pass_i_m_12,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,12,0x0d22,ZSmOne_11_zs_mask_i_m_12,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,13,0x0d24,ZSmOne_11_zs_c_i_m_13,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,13,0x0d24,ZSmOne_11_zs_beta_m_13,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,13,0x0d24,ZSmOne_11_zs_pass_i_m_13,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,13,0x0d24,ZSmOne_11_zs_mask_i_m_13,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,14,0x0d26,ZSmOne_11_zs_c_i_m_14,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,14,0x0d26,ZSmOne_11_zs_beta_m_14,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,14,0x0d26,ZSmOne_11_zs_pass_i_m_14,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,14,0x0d26,ZSmOne_11_zs_mask_i_m_14,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,15,0x0d28,ZSmOne_11_zs_c_i_m_15,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,15,0x0d28,ZSmOne_11_zs_beta_m_15,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,15,0x0d28,ZSmOne_11_zs_pass_i_m_15,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,15,0x0d28,ZSmOne_11_zs_mask_i_m_15,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,16,0x0d2a,ZSmOne_11_zs_c_i_m_16,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,16,0x0d2a,ZSmOne_11_zs_beta_m_16,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,16,0x0d2a,ZSmOne_11_zs_pass_i_m_16,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,16,0x0d2a,ZSmOne_11_zs_mask_i_m_16,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,17,0x0d2c,ZSmOne_11_zs_c_i_m_17,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,17,0x0d2c,ZSmOne_11_zs_beta_m_17,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,17,0x0d2c,ZSmOne_11_zs_pass_i_m_17,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,17,0x0d2c,ZSmOne_11_zs_mask_i_m_17,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,18,0x0d2e,ZSmOne_11_zs_c_i_m_18,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,18,0x0d2e,ZSmOne_11_zs_beta_m_18,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,18,0x0d2e,ZSmOne_11_zs_pass_i_m_18,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,18,0x0d2e,ZSmOne_11_zs_mask_i_m_18,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,19,0x0d30,ZSmOne_11_zs_c_i_m_19,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,19,0x0d30,ZSmOne_11_zs_beta_m_19,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,19,0x0d30,ZSmOne_11_zs_pass_i_m_19,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,19,0x0d30,ZSmOne_11_zs_mask_i_m_19,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,20,0x0d32,ZSmOne_11_zs_c_i_m_20,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,20,0x0d32,ZSmOne_11_zs_beta_m_20,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,20,0x0d32,ZSmOne_11_zs_pass_i_m_20,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,20,0x0d32,ZSmOne_11_zs_mask_i_m_20,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,21,0x0d34,ZSmOne_11_zs_c_i_m_21,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,21,0x0d34,ZSmOne_11_zs_beta_m_21,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,21,0x0d34,ZSmOne_11_zs_pass_i_m_21,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,21,0x0d34,ZSmOne_11_zs_mask_i_m_21,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,22,0x0d36,ZSmOne_11_zs_c_i_m_22,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,22,0x0d36,ZSmOne_11_zs_beta_m_22,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,22,0x0d36,ZSmOne_11_zs_pass_i_m_22,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,22,0x0d36,ZSmOne_11_zs_mask_i_m_22,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,23,0x0d38,ZSmOne_11_zs_c_i_m_23,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,23,0x0d38,ZSmOne_11_zs_beta_m_23,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,23,0x0d38,ZSmOne_11_zs_pass_i_m_23,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,23,0x0d38,ZSmOne_11_zs_mask_i_m_23,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,24,0x0d3a,ZSmOne_11_zs_c_i_m_24,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,24,0x0d3a,ZSmOne_11_zs_beta_m_24,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,24,0x0d3a,ZSmOne_11_zs_pass_i_m_24,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,24,0x0d3a,ZSmOne_11_zs_mask_i_m_24,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,25,0x0d3c,ZSmOne_11_zs_c_i_m_25,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,25,0x0d3c,ZSmOne_11_zs_beta_m_25,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,25,0x0d3c,ZSmOne_11_zs_pass_i_m_25,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,25,0x0d3c,ZSmOne_11_zs_mask_i_m_25,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,26,0x0d3e,ZSmOne_11_zs_c_i_m_26,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,26,0x0d3e,ZSmOne_11_zs_beta_m_26,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,26,0x0d3e,ZSmOne_11_zs_pass_i_m_26,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,26,0x0d3e,ZSmOne_11_zs_mask_i_m_26,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,27,0x0d40,ZSmOne_11_zs_c_i_m_27,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,27,0x0d40,ZSmOne_11_zs_beta_m_27,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,27,0x0d40,ZSmOne_11_zs_pass_i_m_27,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,27,0x0d40,ZSmOne_11_zs_mask_i_m_27,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,28,0x0d42,ZSmOne_11_zs_c_i_m_28,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,28,0x0d42,ZSmOne_11_zs_beta_m_28,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,28,0x0d42,ZSmOne_11_zs_pass_i_m_28,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,28,0x0d42,ZSmOne_11_zs_mask_i_m_28,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,29,0x0d44,ZSmOne_11_zs_c_i_m_29,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,29,0x0d44,ZSmOne_11_zs_beta_m_29,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,29,0x0d44,ZSmOne_11_zs_pass_i_m_29,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,29,0x0d44,ZSmOne_11_zs_mask_i_m_29,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,30,0x0d46,ZSmOne_11_zs_c_i_m_30,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,30,0x0d46,ZSmOne_11_zs_beta_m_30,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,30,0x0d46,ZSmOne_11_zs_pass_i_m_30,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,30,0x0d46,ZSmOne_11_zs_mask_i_m_30,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,31,0x0d48,ZSmOne_11_zs_c_i_m_31,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,31,0x0d48,ZSmOne_11_zs_beta_m_31,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,31,0x0d48,ZSmOne_11_zs_pass_i_m_31,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,31,0x0d48,ZSmOne_11_zs_mask_i_m_31,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,32,0x0d4a,ZSmOne_11_zs_c_i_m_32,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,32,0x0d4a,ZSmOne_11_zs_beta_m_32,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,32,0x0d4a,ZSmOne_11_zs_pass_i_m_32,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,32,0x0d4a,ZSmOne_11_zs_mask_i_m_32,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,33,0x0d4c,ZSmOne_11_zs_c_i_m_33,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,33,0x0d4c,ZSmOne_11_zs_beta_m_33,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,33,0x0d4c,ZSmOne_11_zs_pass_i_m_33,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,33,0x0d4c,ZSmOne_11_zs_mask_i_m_33,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,34,0x0d4e,ZSmOne_11_zs_c_i_m_34,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,34,0x0d4e,ZSmOne_11_zs_beta_m_34,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,34,0x0d4e,ZSmOne_11_zs_pass_i_m_34,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,34,0x0d4e,ZSmOne_11_zs_mask_i_m_34,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,35,0x0d50,ZSmOne_11_zs_c_i_m_35,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,35,0x0d50,ZSmOne_11_zs_beta_m_35,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,35,0x0d50,ZSmOne_11_zs_pass_i_m_35,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,35,0x0d50,ZSmOne_11_zs_mask_i_m_35,rw,2,0,1,12,1,
ZSmOne,11,zs_c_i_m,36,0x0d52,ZSmOne_11_zs_c_i_m_36,rw,2,15,15,0,15,
ZSmOne,11,zs_beta_m,36,0x0d52,ZSmOne_11_zs_beta_m_36,rw,2,32,127,4,127,
ZSmOne,11,zs_pass_i_m,36,0x0d52,ZSmOne_11_zs_pass_i_m_36,rw,2,0,1,11,1,
ZSmOne,11,zs_mask_i_m,36,0x0d52,ZSmOne_11_zs_mask_i_m_36,rw,2,0,1,12,1,
ZSmOne,Global,tmr_err_cnt_zero_suppress_m,,0x0d54,ZSmOne_tmr_err_cnt_zero_suppress_m,ro,1,0,255,0,255,wrap-around SEU error counter. Reset by err_clr (RW_Misc_ALL.misc_rw_0[0]) or hard reset.
